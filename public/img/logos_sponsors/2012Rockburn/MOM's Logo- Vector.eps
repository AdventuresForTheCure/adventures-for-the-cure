%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: MOM's Logo- Vector.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: momsuser
%%CreationDate: 4/26/11
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0 0 792 612
%%CropBox: 0 0 792 612
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 9250 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDF0FF5883FD7DFF580B0B83A8837CFD76FF832D2D2D587D2D2D0B0B2D58%7CFD6FFFA8FF7D2D332D580B7DFFCF2D332D2D0B2D58A8FD6CFFA858A80B%2D0A58FFA883FFFF7DA8A82D2D0B2D0B58A8FD6CFFFD042D58FFA8AEFD06%FF582D2D2D0BA8FD6BFF580B58A80B2DFFFFA8AE52582D58512D2DA7A883%A8FD65FFAE2D83FFFFFF580BA8FF5858FFFFA8FD042D0B2D2D58A8FD68FF%7D2D0BA8FFA80B2D7DA8A8A852580B2D0B7DA8580A2D0B7DFD67FF7DA82D%2D83FFA8330B83A77DFD042D0B332D582D2D5883FD67FF832D7D2D2DFFFF%AEFD042D0B2D2DA783580B2D0B2D2DFD69FFA858A80B58FF832D2D0B2D2D%332D2D2D837DFD042DA8FD69FFA858832D2D580B0B2D7C2D2D0A2D0B2D0A%2D0B2D2DA8FD66FFCFCAFFFFFFA8A82D332D58835883FF83582D2D0B332D%2D7CFD68FF99C2FD04FF832D0B83FFFF83AEFD04FF7D5858AE837D7DFD68%FFC9C3A0C2C3A80B58FD0EFFA8AEFD65FFA8C2938D8C8D8C8D935158CAA1%C39AC29AC3A7FD6CFF9AB58DB08DB58DB58DB593998DB58DB08DB58DB593%C2CAFD60FFC9CAFD05FFCA938D8CB58D8D8C8D8D8D8CB08D8D8C938D8D8C%938D8D8C939AFD5DFFCF93B58DC3FD04FF93B58DB58DB58DB593B58DB58D%B58DB58DB58DB58DB58DB58DB593CFFD18FFCABC93BCCAFD3EFF9A8D8C8D%93FFA8CF938D8C938C8D8C8D93C9FFBC8C8D8C938C8D8C8D8C8D8C8D8C8D%8C8D93CAFD04FFCFFD12FF998C8D8CC2FD2DFF9ABBC3FD0EFFBC8DB58DC2%FFC29AB08DB58DB58DB58DB58DC2C2B58DB58DB58DB593B58DC99AB08DB5%8DB093FD05FFCFC3A0FD0FFF93B58DB0C3FD2CFF938D8C9AFD0DFFC28C8D%8C8D9AC393BC8C8D8CB58D8D8CB58D8D8C8D8D8D8CB58D8D8CC9A08D99FF%A1C2938D8D8D99FFFFFFCABB8C8DA0FD0DFF9A8D8C938DC3FD2BFFC28D8D%B09AFD0CFFCA8DB58DB58DBCC9C393B58DB58DB58DB58DB58DB58DB58DB5%8DB58DB093BC8DBCFFFFFFC28CB58DB0C9FFFFC28CB58DC3FD0CFFC3B08D%B58DB0C3FD2BFFC28C8D8CB5FD0CFF938D8C938C8D93FFA78D8C938C8D8C%938C8D8C938C8D8C938C8D8C8D93C28CBBFFFF9ACF998D8C938CC2FFFF93%8D8C8D9AFD09FFCFFFCA938C938C8D8CC2FD2BFF9AB08DB58DCAFD0AFF9A%B08DB58DB58DBBFFCA8DB58DB58DB58DB58DB58DB58DB58DB58DB58DC2FF%CFC3FFFFC3CACA93B58DB099FFFFBC8DB58DBCFD0BFFBC8DB58DB58DB59A%FD2BFFBC8C8D8C8D93FD09FFA18D8D8D8CB58D8D8CFFC38D8CB58D8D8CB5%8D8D8CB58D8D8CB58D8D8CB58D93CAFFCAFD04FFC28CB58C9AFFFF938D8C%B58CC3FD09FFC98C8D8CB58D8D8CBCFD2BFF9AB58DB58DB59AFD08FFB58D%B58DB58DB58DB5C9FF8DB58DB58DB58DB58DB58DB58DB58DB58DB58DB58D%BCFD04FFA1CAC28D8DB09AFFFFBC8DB58DB58DCAFD07FFCF8DB08DB08DB5%8DB093FD2BFF9A8C8D8C8D8C8DA0FD06FFBC8C8D8CBBCA938C8D8CC3FFB5%8C8D8C938C8D8C938C8D8C938C8D8C938C8D8C93A7FFFFBCA1C29AC38C8D%8CC2FFFF8C8D8C8D8C8D93FD07FF938D8C8D93C28C8D8C93A8FD2AFF93B5%93B58DB58DB5CAFD04FFC38DB58DB5CAFF9AB58DB0A0FF9AB08DB58DB58D%B58DB58DB58DB58DB58DB58DB599C99AFFCAFFFFCF93B08DB5C3FFC9B58D%B58DB58DB09AFD05FFC2B08DB593FFFFB58DB58DCFFD29FFA18D8DFFCA93%8CB58C99FFFFFFC38C8D8D8D9AFFFFBC8CB58CC2A1C38D8D8CB58D8D8CB5%8D8D8CB58D8D8CB58D8D8CB58C8D99FF9999938D8D8D8CC3CAC28CBBCABC%8CB58D8DA1FFFFFFA08D8D8D8CC3FFFF938D8D8DA1FD29FFC28DBCFFFFCA%B08DB58DC3FFCA8DB08DB093FFFFFFC28D8DB09AC2CABC8DB58DB58DB58D%B58DB58DB58DB58DB58DB58DBC99B09ABC93B08DB58DB5C9FF998D9AFFFF%BC8DB58DB5CAFFC9B08DB58DBCFFFFFFBC8DB58DC9FD29FF938D99FFFFFF%9A8D8C8D93C3938D8C8D8CCAFFFFFFC38C8D8CBCA7FF9A8D8C8D8C938C8D%8C938C8D8C938C8D8C938C8D93BC8DCAFFC38C8D8C8D99FFA8938CC3FFFF%CA938C938CBCA7938C8D8C93CAFFFFFF998D8C8DA1FD28FFCAB58DC2FFFF%FFCF8DB58DB58DB58DB58DC2FD04FFC3B08DB59ACFFFFF93B08DB58DB58D%B58DB58DB58DB58DB58DB58DB58DC9FFFF93B08DB58DC3FFCA8DB0C3FFFF%FF9AB58DB58DB58DB58DB5C2FD04FFC28DB58DC3FD28FFC98C8D9AFD04FF%9A8CB58D8D8CB58D93CAFD04FFCA8D8D8CBCFFCFA7C28C8D8CB58D8D8CB5%8D8D8CB58D8D8CB58D8D8C8D99C9938D8D8D8CB5C9FF9A8D8CC3FFFFFFCA%8C8D8D8D8CB58D8D93FD05FF9A8D8C8DA0FD28FFC2B08CC3FD04FFC2B08D%B58DB58DB0C3FD05FFA1B08DB099FFCFB5A1B58DB58DB58DB58DB58DB58D%B58DB58DB58DB58DB08DB08DB58DB093FFFFBC8CB5C9FD04FFBB8DB58DB5%8DB58DCAFD05FFC28DB58CC3FD28FFBC8C8D9AFD04FFCA8C8D8C938C8D93%FD06FFC38C8D8C99FFFF93BC9A8D8C8D8C938C8D8C938C8D8C938C8D8C93%8C8D8C8D8C8D8C938CC2FFFF938D8CCAFD04FF9A8D8C938C8D8CBCFD06FF%998D8C8D9AFD28FF93B08DC9FD05FFBC8DB58DB58DCFFD06FFC3B58DB093%FFFFC993CF93B58DB58DB58DB58DB58DB58DB58DB58DB58DB58DB58DB58D%B5C9FFCAB58DB5CAFD04FFCA8DB58DB58DB5CAFD06FFC28DB58DC3FD27FF%A7938D8DA0FD05FFA08D8CB58CBCFD07FFC38CB58D93FFFFCA93A7C38C8D%8CB58D8D8CB58D8D8CB58D8D8CB58D8D8CB58D8D8C8D93FFFFC38C8D8CCA%FD05FF998CB58D8DA0FD07FF938D8D8D99FD27FFBC8DB58DC3FD06FF8DB0%8CB5FD08FFC28D8DB593FFFFFFC2BCFFB58DB58DB58DB58DB58DB58DB58D%B58DB58DB58DB58DB58CC3FFFF93B08DB5CAFD05FFC28D8DB593FD08FFBC%8DB58DBCFD26FFCA8C8D8C8DA0FD06FFC2939AA1FD08FFC28C8D8C8D93FF%FFFF9ACAA08D8C8D8C938C8D8C938C8D8C938C8D8C938C8D8C938C93FFFF%A18D8C8D8DCAFD05FFCF938D93CAFD08FF938D8C8D8CC3FD25FF9AB08DB5%8DCAFD12FFC3B08DB58DB0A0FFFFFFCAFF93B08DB58DB58DB58DB58DB58D%B58DB58DB58DB58DB5CAFFFFBC8DB58DB5FD08FFCAFD0AFFBC8DB58DB08D%CFFD24FFBC8C8D8CB5CFFD12FFCA8D8D8CB58CC3FD05FFC98C8D8CB58D8D%8C8D8C8D8C938D8D8CB58D8D8C8DA1FFFFFF938D8C8D93FD13FF9A8D8CB5%8D8DA1FD24FFA0B58D8DA0FD14FFBC8DB58DB5FD07FFC38DB08DB08DB093%C39ABC8DB58DB08DB58DB0A0FD04FFBC8DB58DC9FD13FFCA8DB08DB599FD%26FF9A9393FD15FFA8B58C93A1FD08FFC3939393BC9AC3A0FFCAC299938D%8D8C8DA0FD05FFA1938C9AFD15FFC38C8D8CCAFD40FFCACFFD0DFFC3BC93%BCCACA9AFFFFCFC9CACAFD08FFC9CFFD16FFC9A0CFFD39FF58585158587D%7DAEA8FD0DFFCBC9CAFD51FF837DA883A8A7AEA8AEA7AEA8AEA8AEA8AEA8%CFFFFFCF835858587D7C837DA8CFFFA8AEA8AEA8A883A883A883AEA8AEAE%FFAEFD06FFAEA8A883A883AEA8FD11FFA9FD2EFF0B2D0A2D0B2D0A2D2D2D%0A2D2D2D0A2D2D2D0BFD082D58FD062D0A2D2D2D0A2D0B2D0A2D2D2D0AFD%042D57FD062D0A2D0B2D0A2D2D512D582D2D2D572D2D2D572D2D2D572D7B%2D572D2D2D572D2D2D572D2D2D33A8FD1EFFCF332D332D2D2D332D2D2D33%2D2D0B332D2D2D332D2D0B332D2D2D332D2D2D330B2D2D332D2D2D332D2D%2D332D2D2D332D2D2D332D2D2D332D2D2D332D2D2D332D2D2D332D2D2D33%2D2D2D332D2D2D330B57A5332D2D2D332D2D2D332D5751332DCFFD1FFFFD%062D0B7B2D2D0B5757570B2D2D2D0B2D2D5751CC2D2D0B2D2D2D0B7BA5C7%572D2D2D0B2D2D2D0B2D0B2D0B2D2D2D0B2D2D2D57A50B2D0B2D2D2D0B2D%2D2D0B2D7B570B2D2D2D0B2D2D2D0B2D57A50B2D2D2D0B2D2D2D0B2D57A5%0B2DA8FD1EFFAE332DA57B2D0B57CC570B81C6CCCC7B2DA5572D0B81CC57%7B2D2D2D0B332DA5A581A5CCFD072D5757570B2D0BFD062D5757332D2D2D%332D2D57A52D2D57CC572D0B2D0BFD052D0BA57B2D7B572D2D0B2D2D2D0B%A57B2D2DAEFD1FFF2D2DC6CC2C2DA4CC2D7BC6570A7BA457C6A50B57C6CC%2D2D57A5A557047BA42D042DA481572D57812DA5A4CC577B7B812C2D7B2D%2D2D51570A7BA47B0A2D0B7BC6572DCCC67B0B7B7A7B2D2D572D7B81A47B%7BA50A2D51817A572D57A4CC512DA8FD1FFF582DCCCCA581C7A581A5570B%332DCC7BCCCC57A5CCA55751CC577B5733A57B0B332DA5A5CCC7CC7BCC57%33A5817BA5CCA557CCA5CC57A5577BCCCCA5332D2D7BCCFD04A57B5781A5%CCA557CCC7CC57CCCCCC2D2D7BCC7BCCCC5781CC57572DFD20FF2D57A57B%C6CC2D8181A52D2D0B57A5A57BA5FECC2DCC2D57C67B2D2D2DCC570B0B57%A57BA4A52DA57B2D7BCC2D7BA5A5A47BFE7B7BA5A57BA4570B2D0B2D2D81%51CCFE577BA50B7BA4C7A57BC6A52D2DA4CC7B0B2DCCA5A5A47B0B7B7B2D%0B58FD20FF337BA52DCC7B2D7BCCC7570B2DA5A5A57B2DCC7B2DA57B0B57%7BCC572D7BCC5157A5A557CC2D2DCCCCA5CCA581A57BA5CCA5CC2DA5A5CC%A5A50B7B7B330B57A52DA5A50B81A57BC77BA5CC7BCC2D2D57CC81CCA57B%FEA557577BA5A57B0B2D2DFD20FF2DA57A2D2D2D0481A4A5C6A5A4A52CCC%572D512D0BCC7A575757A4810B2DA4CCC6810A57A42D0A57575751A57BCC%A4A5A4A57A2DA5A5A4A5A4A5A47B2D0B56CC0B2D2C0B57CC7ACCA5A5A481%A52D0A57C62D2CA5C6A5A4C7A4A52DA5C6C7502DA8FD1FFF582D572D2D2D%3351572D81A57B2D337B57FD042D57572DC7A5A52D2D2D332D570B332D57%2D33575757CC7B3357572D572D570B7B57572D7B57330B2D0B57572D0B2D%0BFD05572D572D570B2D2D7B2D2D0B572D7B57570B2D51817B572DFD20FF%2D2D0B2D2D2D0B2D0B2D0B0B0B2D0B0B0B2D0B2D2D2D0B2D2D2D0B2D0B2D%0B2D0B2D0B2D0B2D0BA5C6CC7B2D0B2D0B2D0B2D2D572D2D0B2D2D585258%58582D5851582D582D582D582D58587D58582D582D58587D58582D582D58%2D582D342D58A8FD1FFFA7AE580B58A8A87D838383587CFD055883FFFFAE%AEA8AEA7837D83587D83A883A883A77D837DA8A7A8A8CFA8AEA8AEA8FD05%FFAEFD19FFA7A87D83585851582D572D582DA8FD23FF83587CFD4BFFA8FF%A8FFA8FFAEFFA8FFA8A87DA8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC%FFFDFCFFFDFCFFFDFCFFFDFCFFFD38FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-04-26T09:16:24-04:00</xmp:CreateDate>
         <xmp:MetadataDate>2011-04-26T09:16:27-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-04-26T09:16:27-04:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWndI0Z3YKigszMaAAbkknFULpmsaTqsLTa&#xA;ZewX0KNweS3kSVQwFeJKEiu+AEHkxjIHki8LJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KrZZEijeR6hEBZiASaAVOwqTirAfN35yaL5e0/T7k2NzNcagZ&#xA;GjsplNrMsMbMnrOkgLBXZfgqNxv2ymeYAOPk1IiAe95pd+afza/MHR9bfSoQNDVlSWxt1T1OBFfS&#xA;jcgSSGgq4rv4UNMpMpzBrk4pyZMgNck0l/LvXPLHkm38xeV9Q1DTNYkhhGqaXNQtLJIRHwjjRfti&#xA;R/gDAmh7HD4ZjGwz8EwhcSQWNXvmv84PJF0o1K/mE18gnaC6K3QUElVqW5qh+H7Kt88gZzjzaTky&#xA;4+Z5vQPJv/OQWhXlvBa+Y1ax1AkJJdInK2Yk7NsS6e+1PfLoZx1cnFrIn6ti9bR1dQ6EMjAFWBqC&#xA;D0IOZDmN4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWO+fvOMfl&#xA;Hy8+sPbG74yxxLbh/T5GQ0PxcXpQAnpkMk+EW15cnBG0R5a82aV5h8uxa7ZFltHVzIjj442jqHVg&#xA;K7inbDGYItMMglGw8A8vQ+X/ADr5180ax5gkup9Jt4Lq9towzeusRlCwgKpb+6R9lBpWnbMONSkS&#xA;XXQEck5GXJmn5dpD+Xmnazp3m7VoLKzvXWbTYklPrshVo3nWOOsqc1CcduW3tluP0AglvwjwgRIp&#xA;JrX5265dalbaP5HRzbKBFFPej17meTryrMzU9uW/6shLMeUWuWqJNQY75v8AzE/NIW1z5c8xn0fr&#xA;KATQyW0SO8ZOxUqtCCV2ZfvyM8kuRasufJ9MmWfl3+U3kPzP5WF6TqP1sgxSXUgEMXqgfE9uOJDo&#xA;rVX4j23AyePFGQbsOnhKN7vcbO1itLSC1hr6VvGsUdTU8UUKKn5DMoCnPApVwpdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirwD80ZtXltfOv1+Z3hh1PTYbOBmYpHEIZ&#xA;XHAHYcxICad8w8l7+91+oupX3hf5Z/M7yn5Q/Li20iL1NR1i5illuIIfhjjecmgkkbYUSmyhum9M&#xA;McgjGuqwzxhADmXlul6l5m8vq19p8lxpwvYzCLtFMZdOQYqkpFeqgnicoBI5OHGUo7jZRt9X9TV1&#xA;1DW421kMf9KS4mlDyCnH++VuYYfsnf3BG2N77oEt7lur+Y/8KNPFL5d+uJBIpM9teiMtE22ySRn4&#xA;1O/VQcZV0Tk4f4XoP5PflfqGuajbeYdbjddGtCrWkc25uXT7AAb/AHUh6noeg70uw4r3PJydNgMj&#xA;xS5PoLStLstK06306xjEVraxrFEgA6KKVNOpPc98ywKFOyiABQRWFLsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdiqG1HU9O021e71C5itLVPtTTOqIParEb+2RlIRFlsxYZ5&#xA;JcMAZS7g8qs/zr8p6C15Feaze+ZHmnaaOSC1WNIlb/daeo8VVHbMPHnEeZMnqcns7qM/CY444aFb&#xA;yu/M0Duxr8yvzL8leavKl1DpMU1tqs9xbyzx3EQR5EhDKG5I0iEqG8a0+WOTNGQ2dJ2x7O6rT4jM&#xA;gSiOZjv+osj/ACq8keSNI8t2Ot68bR9VvkFwjXroFhjkoYgiSHjUqQ3Kld/DLMYhEXIi3T6LQylE&#xA;ERMifK2W6HP+WNjYzaVa61Y3lncMztaXF/FdIATXgscjuqqK0oB88sEoAcx83YfyVqIjfHOvOMv1&#xA;JTrP5Gfl9rSfWdPV9OeSrLLZSBoWJPXg/NaeyUwHDGW4dbl0UbojhK23/Ivyzp9tBPYAT6xZwssE&#xA;t6oktpJzyKyTQilaFtt9qDrTd8AD3oGliOXN6HpsV3Dp1rFeSLLdxxItxLGvFGkCgOyqKUBOXDk5&#xA;A5IjCl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjnn7zvZeTtB/St1C9yXl&#xA;WC3t0IUvIwZqFjXiOKE1ocqy5OAW7Hsvs6Wsy+HE1tZPkxH8s/znl83a7JpF3pq2kpiaa3licutE&#xA;pVXBA7Hr+GU4dQZSou27Y9nhpMQyRnxC6Nhkf5g/mLpnlLQpL0Fbq+kdreztQ2zTKKtzI6LHX4vu&#xA;6nLMucRG3N13ZXZM9VlEfpjVk+X7enzfLnmTzXr/AJkvje6xdvcyVPpoTSOME/ZjQfCozXykSbL6&#xA;do9Di08eHHGvvPvKH0XRr7WdRj06xEZupg3pLLIkIYqpbiGkKryNKAVwAW26jURwwM5XwjuBP3L9&#xA;e8va15e1JtO1e2a0vUVX9MlW+Ft1ZWQspHyOGUSDRYabVYtRj4sZ4oHb8Wl7OztyY1OwqfAbDIt2&#xA;PHGERGIqI5ANYs0z0LzNr+g3QudIvpbOUGrCNvgb/XQ1Vh/rDCCQbDjanR4s8eHJESH46voL8r/z&#xA;ptPMkkeka0Es9aaiwSL8MNwfBa/Zf/J79vDM3DqL2lzeA7a9nZaYHJi9WPr3x/Y9SzLeYdirsVdi&#xA;rsVQWtaxY6NpV1ql+5S0s4zJKyjkaDsB3JOwyM5iIst2n08s2QY4fVIvNfLf/OQOk615ltdH/RU1&#xA;rDeyrBb3bSqzc3NEDxhdqmg2Y5jR1Vmqek1fstkw4Tk4xIxFkV+n9j1fMt5V2KuxV2KuxV2KuxV2&#xA;KuxV2KoLXNTXStF1DVGQyrYW0100YNCwhjL8QffjkZGgS3abD4uWMOXFID5mnydH578xah5wtNZv&#xA;9SnR/rUbsY3ZUji9QEoi14hAvb781Jkbs831U9mYcenljhAfSenM1976+zcPkjsVcSACSaAbknFX&#xA;y3+c35gf4o8wfVLKTlo2mFo7YjpLJ0km+RpRfbfvmszZOM+T6f7PdlflsPFIfvJ8/IdB+tb+SEt8&#xA;vnKaLT2jXUbjT7qOyeYkRrNxDIXoGPEFd9sGG+Lbn+xPtII/lgZ3wCcbrnXVJPzBW9tNcbRbq6N3&#xA;JpQMc05JPqXEx9e4ffxlkK17gDKzGjTm9lcM8XixHDx9O4DaI+Q+1jOB2TsVRd9q2qagkCX11LdL&#xA;ap6dv6zl+CE14qWrtXFqxYIYyTECPFzpCYtrJRpUD+VLRToV9FrF1dqljqoWT6tco+whHP4OdehT&#xA;ww1s63xyM8v3kDjjH1R24o+ffXve1yflP5a1jSNGTzYsGjeZZFMTjTZIoDOUB4pwZWR3WMAtxX6a&#xA;ZlxwRocWxeMj25mw5J/l7yYefrBNfqF9/wB7571K3/R2sXVvbTM31O4kjhuF+Fj6TkK4p0O1cw3v&#xA;8MvExgyH1RFj3h9VflP5xl81eT4Ly5IOoWzG1vSP2pIwCH/2aMCfeubLT5OKO/MPl3bnZ40uoMY/&#xA;Qdx7j0+Dwz8wPzb806t5juTpeo3Om6ZbSNFaQW0rwllU05yGMgszUrQ7DpmHPPKRsHZ7fsrsLBiw&#xA;jjjGc5CySL+At9IeVb57/wAs6TfPJ60lzZ28skp6szxKWJ96nM/EbiPc+da3F4eecaqpEfammWOK&#xA;7FXhn/OQX5gLx/whp8gJPGTVpFPSlGjh/UzfR75g6nLZ4Q9v7K9lf8iJj+r+k/oDy78t5li8/eX2&#xA;alDfwJuK7u4Qfi2Y8PqHvD0/a8b0mX+ofufYmbZ8hdirsVdirsVdirsVdirsVdirGfzNlEf5f+YG&#xA;Lca2Uq1H+WvGn01plOc+guy7GF6vH/XD4+zWPrr6c/Jf8yE8yaQuk6hIP03p8YBJ6zwrRRIP8obB&#xA;/v75n6bLY4TzfNPaHsg6bJ4kB+6mfke79T0vMp5t5H+e/wCYw0rTz5Z02WmpXyf6dIh3ht2H2Nuj&#xA;Sf8AEfmMw9Tl/hHxes9meyfFn48x6I8vM/s+94JaeX9ZvNKvNWtrR5dO08oLy5FOKFyAvU1PXt07&#xA;5h095k1WOGSOOUqnPkO9kP5QXrWf5kaJIDQSTNAw7ETRtH+tsniNSHvdf2/j49HkHlfyILf5wWU1&#xA;p+Y+tLKP72VZkPissasP10xyipH3o7AyCejx10FfIsNyt3DsVdirsVe7fkd5n17zJNLoet28WqaR&#xA;psaXFtc3Eas1vLGyrCqkih2qV25CnXMrTyJPCdw8N7SaLFpwMuImGSZogH6gef45PStW17yvbXl7&#xA;Hfcb/WNBtptWSBoAZo4QpP7h2VUrT4dmr45kSlGze5G7zmDS55RiY+nHlkIXexPmOfnyeAfnZ+jJ&#xA;/Mmmatp1sLWPWtKttSljoAS9w0h5MF25cVWtO+YecC7HUW977OcccM8czxHHklD5U9F/5xphkHlr&#xA;VpyT6b3oRR25JEpb/iYy/SDmXnvbCQ8aA68P6Xz9dyLJdTSIao8jMp9iSRmCOT32MVEA9z3n8g/z&#xA;GhntI/KOpSBLmAMdLkbb1I92aH/WXcr7fLM3TZa9J+DwvtR2QYyOogPSfq8j3vaczXjGI/mZ58tv&#xA;J/l2S7BD6lc1i06A95KfbYfyJ1P0DvlOfLwDzdt2P2ZLV5hH+AbyPl+svlWG11rXL65khim1C9ZZ&#xA;Lq6ZQZH4r8UkjU+ea19SlPFgiASIR2iP0BS0q7+papZ3nT6tPHNX/jG4b38MBZZ8fHjlHvBD7dzc&#xA;virsVdirsVdirsVdirsVdirsVeW/85D621j5Ki0+NismqXKxuBtWKIeo3/DhMxdXLYDven9lNNx6&#xA;kzP8EftO360j8t/kt5e138srC4VDb+YLqFriO/5MQWZiUR0rx4caDYV75VDTiUL/AInO1ftFmwa2&#xA;Q54omuH7/i8c03UNZ8q+ZEuYg1tqemTlXjbsyEq8bjwO6nMYEg31ewzYseqw8J3hMf2F9D+ZPzr0&#xA;Ky8l2us6cyzanqUZFnYEhmikGzmYAghY22/yu3jmdPUjh25vnuj9ncs9Scc9oQO8u8dK9/2Pne1t&#xA;9b81+ZEhVmu9W1Sfd2O5dt2Y+CqN/YDMGiT5voU54tLhv6ccA+m9S8nWGh/lPqugWS8lh064ZpKA&#xA;NLOIi5dq92cfQPlmwliEcZD5rh7Qnm18Msus4/AXy+T5q8jXH1bzpoM9SAmoWpam54+svL8MwIGi&#xA;C+j9pQ4tNkH9CX3PQPzq0fWbzStJ816jHAt47zWF99T+KEBJXNuwbkxNUDBi1DXag6ZZlsgSPV0H&#xA;s7qMcMk9PAnh2kOLnyHE8kyl6x2KuxV2Kp3oGp67HZ31jYax+jLX02vJo2naATPAKqiFd2kb9le+&#xA;EOFqsOIyjKcOOV8PK6vqfLve0Wvmf8y9T8iWHmDToLK0a3gm/S9/fKA9xFbCqMvIbpIvKv8AlV3A&#xA;zI45mNj597xs9FoseqlhmZysjgjH+Ey/SPueF67r2q67qUmo6pObi6koORoFVR9lEUUCqOwGY5JP&#xA;N7jTaXHggIQFRD2/yvLqXlP8kLjU+cUcV1ayzRLRvW+s3UvoxNyrx4iPg3StfYZkR4o4yeh+d8vu&#xA;eJ1sYartMQ3uMgPLhiLP22x78pfym0Lzb5T1DUNSeWO6a4a3spomoI/TjVufHo1WehB8O3XBhwiY&#xA;Jt2HbvbuXS6iMIUY1Z89/wBjznW9I1jyn5kmsZmMGoadMGinjqN1IeOVD4EUYZQQQaPN6LTZ8eqw&#xA;iQ3hMcvvBfSXlv8ANvQrzyEfMmpSiGazAhv7dftm5p8Kxr39Xqv9hzPhqBwWeYfOdX2Flhq/BgLE&#xA;t4n+j5+7r+186+dfOOq+btdk1O9+EH93aWqmqxRA/Ci+J7k9zmDOZkbL6F2d2fj0mIQj8T3l9E/k&#xA;/wDl+nlby4Jr2IDWdSUSXvIfFGlPgg/2Nfi9/kMztPi4RZ5l897f7VOqzVE/u4cvPz/V5Pl/Urb6&#xA;rqN1bUp6E0kdN9uDFe+/bNeH03DPigJd4D7S0SYz6NYTGlZbaFzTp8UYO2bbEbiPc+NamPDkkO6R&#xA;+9G5NpdirsVdirsVdirsVdirsVfO/wDzklqwn8y6bpatVbK1MrjwkuH3Hz4xKc1+qlcq7n0L2Qwc&#xA;OGc/50q+X9r2j8vbdrfyL5fiavL9H2zEEUILxK1Ke1aZl4RUA8Z2rPi1WQ/05fe8I/5yE0D9H+dU&#xA;1GNOMGrQLKWAoDNF+7kH/A8CfnmFqI1P3vdeyuq8TTcB5wP2HcfpeX5Q9M+hf+cfvIf1DTW8030f&#xA;+l368NPVhulvX4n9jIRt/k/PM3S4/wCI/B8/9qe0/En4ET6Y/V7+74ff7nqHmV1Ty5qruKqtncFh&#xA;7CJq5kZvoPuLzGjF5of1h97440KUxa3p8obiY7mFuXhxkBrmqL7DqheKQ/on7n0t+a0sCWNn5fuL&#xA;aJdH8wyS2zXQVl+rXrt6sEpYVWjzGrCgP2jXrmdqTVDofvfNuxATOWYE+JiANfzo8pD4R5fB8wXl&#xA;pcWd3NaXKGK4t3aKaNuquh4sD8iMwX03HkE4iUdwd1LFk7FXYq7FWa+YPzZ8x615VtPLbxw2llbo&#xA;kczW4ZWmSIBUVqsQBsCQOp+7LJZCYiPQOm0vYWHDnlmBMpHv6XzYnpun3Go6ja6fbLyuLuVIIl8W&#xA;kYKPxOVu1zZRjgZy5RF/J71+f08Gj+RNF8vW3wxvLHGg/wCKbOLjT72TMzU7RjH8bPCey0Tm1WTN&#xA;LnR+cj/anX/OPkBj/LxHNaTXc7j5Din/ABpk9J9J9/6nD9qpXrPdEMV/5yU8vgforzBFHQnlZXTg&#xA;f89Ia/8AD5Xq47gu09j9V9eEn+kPuP6HhvJuJWp4kgkdqjp+vMR7enqX5D+QxreuHXb6PlpmlODE&#xA;rCqy3NKqPlHsx96Zfp8fFK+geX9p+0/BxeFE+uf2R/by+b6UzZPnD4s81/8AKUax/wAx1z/yebNO&#xA;X2bQ/wBxD+pH7n115Kl9XyboMtKepp1o1PDlAhzaYh6B7nyXtGNanIO6cvvKc5Y4bsVdirsVdirs&#xA;VdirsVWTTRQQvNM4jiiUvI7GgVVFSSfYYCaFpjEk0OZfHnn/AMzjzN5t1DWEBWCdwtsp2IijUIlf&#xA;chanNTOXESX1/svR/ltPHH1HP3ncvrHymCPKujA7EWNtUf8APFc2eH6B7g+U67+/n/Xl97Dvz28r&#xA;ya15Ke6t4zJeaTILlFUEsYyOMqgAH9k8v9jlWqhcb7ncezOtGHU8J+mYr49P1fF4p+W/5b6p5n8w&#xA;28VzazQ6PCRLfXLIyKY1/wB1qxFCz9Nvn2zDxY+M0OT2fa/a+PTYSYkHIdoj9PwfV8UUUMSQxII4&#xA;o1CRoooqqooAAOgAzaAU+VykSbPNKPOkhi8na9KByKaddsF8aQOaZDL9B9xcvs6N6jGP6cfvD41t&#xA;pRFcxSsKiN1YgdaA1zVEbPsM43Eh9ZeadO078wPIcn6Hull9dVudNuVNAJ4jVVav2TWqNXcZsckR&#xA;khs+U6LLPQaoeIKraQ8j+LDxn83PL0l3ZWHnWG3+ryXoFrr9rQKYNQiHB+SjpzKn8D+1mHkFji7+&#xA;fvex7B1YhKWmJsR3ge+B/H4p5flT07sVdirsVdir1L/nH/ylLqfmv9NzR/6BpCllcjZrlxxRR/qg&#xA;l/bbxy/Tw4pX3PMe1OuGPB4QPqyf7nr+r5qX5/eaINX84Lp9seUGjIbd37GdjWWn+rQL8wcdRPil&#xA;7mXsvoji0/HLnk3+HT9b1n8h1Yflrp5IIDS3BUnuPWYVH0jMrS/S8p7Tn/DZe6P3BPfzG8t/4i8m&#xA;anpiLyuWiMtoKVPrRfGgH+sV4/Tk88OKJcHsnV/l9TCfS6PuOxfJuhaBqeuavb6VYQtJd3DiOlDR&#xA;N/iZ/BV6nNYBewfVtTqoYcZyTPpAfYHlXy5Y+XNAs9Hsh+6tUAaSlDJId3kb3Zt82uOHCKfItbq5&#xA;ajLLJLnL7O4Jtk3FfE/mCRpNe1KRzVnup2Y+5kYnNMH2jSisUB/RH3Pqr8qNWstR8g6N9WuFne0t&#xA;o7a4UGrRyRKFKMOooBt7ZstPK4B8t7cwSx6ufEK4pEjzBZdl7qXYq7FXYq7FXYq7FXYqk/nHTr3U&#xA;/Kmr6fYml3dWk0UArxq7oQFr25dMryxJiQHM7PzRx54Tl9MZAn5vlHy95I1zV/NcPl1raW2uzJS7&#xA;EilTDEprI7Ajai9PHbxzWRiSaHN9T1faWLFgOawY1t5noH2HBBFBBHBEvGKJVSNfBVFAPuzbAUKf&#xA;IpSMiSeZX4WLsVdiqhf2cV7Y3NlLX0rmJ4ZKdeMilT+ByMo2CO9niyGEhIcwb+T4y8w+XNU0HWrj&#xA;R7+FkuoH4rsaSKT8Dp4q46ZqZAg0X2PSavHnxDJA+k/Z5H3Ppn8lvLN7oHkW3ivQ0d1eyveyQOKG&#xA;P1AqolD0+BAxHiTmw00aj73zX2i1kc+qJj9MRw331+0sq17QbDW9GvtJu0H1e/jKSlQKg/suP8pS&#xA;AR8stnASBHe6vS6qeHJHJHnEvkvzZ5B8y+WdTksr60keME+hdxozRSpXZlYV+lTuM1c4mJovq+h7&#xA;Uw6mAlGQ8weYQmkeUvMOqy8LWzdYl/vruYejbxDxkmfiij5nIjfk259fhxC5S37huT7gN2R6j+TX&#xA;m600z9J20tjqdltxlsblZA1dvg5BORrtRd8sljIF9HXYvaHTynwEThL+lGv1sKurS7tJmguoZLeZ&#xA;ftRSqUYfNWAOVu6hkjMXEgjyTnyZ5L1nzZrCadpyUXZrm6YH04Y+7Mf1DvkoQMjQcPtDtHHpcfHP&#xA;4DqS+s/K3lnTPLWiW+kacnGCEVZz9uSQ/akc92b+zNpjxiIoPlGt1k9TlOSfM/Z5PkXXND1218yX&#xA;Gl3tvJ+lZLgr6XE8pHkc8WT+YOTse+amiNi+tabU4pYROJHAI/Kv1PrLyJ5ffy95Q0vR5CDNawj1&#xA;+PT1ZCZJAKdfjc75tcMOGIBfKe09UNRqJ5BykdvdyH2J9ljgrY4oowRGioGJZuIAqT1Jp3wAAJMi&#xA;ea7Ch2KvkX80vK955f8AOeowyxFLW7mkubGSnwPFKxain/IJ4nNTkhwyIfWuxdbHPpokH1RAEveP&#xA;183qH/ONug38FjqmtSlo7O8KQW8R2EhiqWk+gtxH05k6SJsl5j2v1UJThiH1R3PlfT8eT2rM14x2&#xA;KuxV2KuxV2KuxVpmCqWPQCp+jFXmUX/OQ/kFxVkvoj4NChP/AAsjZj/mYuKNZBERfn9+XTrVri5i&#xA;NacWgcn5/DyGH8zFP5vH3rh+fn5cEsDdTgDoTbyUO3agx/MRX83j72/+V9flv/y2T/8ASPJ/TH8x&#xA;FfzePvXxfnv+WrvxbUJYh/O9vMR/wqsfwxGoin83j70n82fnTozwwHyr5hsYpVLm5S/tL8hxQcAh&#xA;SE03rWuRnnH8JYZNVH+Ej5FJ7L85vMG4m1/y26g1LNb6srb9h+5QfhkPHPePtYR1J74/anenfnP5&#xA;Za4ifWdU0wtGCHktbbUHatduBkgHEAe5r7d5DMLs19rdHWACuL701m/Pb8tY34pqMkopXmlvOB8v&#xA;jRT+GTOoiv5vH3qEv5//AJdpTjPcy168IGFPnyK4/mYo/N4+9T/6GE/L7xvP+RA/5qwfmYr+bgku&#xA;q+fPyX13UFudbvL2+jBBhtbhbj6tCTQFlijCj515ZVI45GySXY6ft6WGPDjIh3kR9R+P6k0j88/k&#xA;QdMXSEuLddOSYXKWv1W6SMShuQcfuhvXJ3iqunxYfyzM5PE8Q8dVfkm13+cH5UTR+ndarFPGf2Gt&#xA;riQfd6TZM5cZ5uLHWRibEq91pbH+ef5YWMYjs/VWNiSUgtfTAPiQeHXIjNAcgievjI3Ikq9v+fv5&#xA;cyvxkubi3FQOUlu5G/f93zO3yyQ1EWA1ePvRw/NX8qbqaO5fVbZ54d4ZZYJQ6cv5S8YYfRicuMm2&#xA;6OsABAlsVVvzk/LRWKnXI6jwinI+8R5Lx4d7D8xDva/5XN+Wf/V7T/kTcf8AVPB48O9H5jH3u/5X&#xA;N+Wf/V7T/kTcf9U8fHh3r+Yx96rL+bn5eRRRTS6sEinBaCRoLkK4U8SVJj3oRTbIx1WMkgHcc2Rz&#xA;RABJ5qX/ACub8s/+r2n/ACJuP+qeS8eHex/MY+9C335ofk/qAQX9/a3YjqYxPayy8a9ac4jStMjL&#xA;Jjlz3+Dbj1/h/RMx9xIRC/nF+WEMAEesRrElESNIZxQdgFEfT8MkM0B1a5aqB3JZtlzc7FXYq7FX&#xA;Yq7FXYq4gEEHodjir4/8meR7zzQNQNvOkP1GNWAYVLySBvTX2B4Gp7Zy3aPacdLw8QviPyAq/vdZ&#xA;pNGc10apEeQPI8vmLWZIrxXi0+yr9dZfhbnuFjBIO5I39hlfa3aY0+IGNGcuX62Wi0ZyzqX0jmt0&#xA;ryOly1/ealerpeiWE7273cg5s7oSOEainJvGn0Vw5+0+HhjCPHlmLry7z3Lj0d8RkeGETVozWPIm&#xA;jPoZ1nyxqh1K3ilSG5ilXg6GRgqncIerDYr75Tp+1Moy+FnhwSIsV5NmXRQMOPFLiCU+bPJOp+XN&#xA;QtbOUi5N4itA8QNGk2DxgHclWP0inyzL0HaWPUwMhtwne/vaNTo5YpAc7ZJe+UPL3lH9EXPmGJ70&#xA;Xdvcm9twx4idAhiSMx8T+2QSxp3zW4+0M2r8SOE8PDKNHy3u79zly0uPBwnJvYN+/ZikvkzzTHp7&#xA;ai+lzpZBfULldwnXkV+1SnembWPaOAz4OMcTgnSZRHi4TSL8reV7G9srrWtauWstDsmCO6Css0p3&#xA;EUVa77ip/tIq12unCQxYhxZZfIDvLZptNGUTOZqA+1O5vL3kfXfL+oXnlgXVtf6VF680F0QfUiWp&#xA;Y7Fx0U/ZP0b5gx1eqwZoxz8JhkNXHoXJODDlxyOOxKO+7E4fK3mKa9nsY9PnN1bLzuIipUxqRyBY&#xA;tQCo6eObeWuwiImZDhly83AGmyGRjwmwmWhflz5q1mBbm2thDbSCsUtwwjDjxUGrEe9KZi6rtfT4&#xA;TwyNny3bsOgy5BYFDzQUXk7zPM0/1bTZ7hIHeNpYo2ZC0bFW4tT4tx2y+XaGCNcU4i99z3tY0mU3&#xA;USaQEWlajLb3dwlu5hsSovHpT0y7cFDV7ltqZfLPAGMSd5cvNqGKRBNfTzTDQLS0S8vRq1jcSxQW&#xA;kzMsakNC7LxjkcGnwhmH0kHKNVkkYx8OUQTIfEdQG7BACR4wdgfgoWHlnX9QsZb6zsZZrOEMZJ1H&#xA;w/CKtQmnKnemTy63DjkISkBI9GENNknHiA2Qul6fNqOpWthCQJbqVIUY9AXYLU/KuW58oxwMzyiL&#xA;YY4GchEdU9vfIupRecz5agq7vIPRnZaAwMOXqmnZV6+4pmDj7UgdN455VuPPucmeikM3hj8DvRP5&#xA;geUodJ8y2+laPbyyia2ieONeUskjksjMAKncp0GVdla85sByZCBUj5AM9bpRDIIwHRj9/oGuad6f&#xA;16wntRMeMRljZAzeAJG5zYYtViyXwSjKu4uLPBOH1AhfD5a1+a4ureOwmM1kpa7UrT0woqeZNANu&#xA;njglrMQAJkKly80jT5CSKO3NnPmHynf6l+g9FtmSC20nSkub+8mJEUTTEs/IgHclKgZotJr4Y/Ey&#xA;y3lky1EDma5fe7LPppT4IDYRhZLAbbR76/u5bfSoJr8Rk0aGNiSgNA5UcuNffN/PUQxxByEQvvLq&#xA;44pSJEQZLbnRtWtbtbO5sp4bt90geNg7A/yqRU/RhhqMc48UZAx77WWGcTRBtk/nzy02lafoUkOn&#xA;mCE2MP1y74kcrqQMzI/+UOOavsvWeLPIDKzxmh/RHVzNbp+CMKFekWfN9V6cHGn2wf7YiQNXx4iu&#xA;dfHk5wRGFLsVdirsVdirsVdir5n8u3195X8lahrkCj6xc6okRRqbxQt8Smv83xr7ZwvaGGOp1gwy&#xA;5Rgfmf1bFp08zhwmY6yTO8876NN5j0LTfLjBbW8vku9SdAU5yztTg1ep3q3boO2YWPszLHDknn+q&#xA;MOGPuH42+LdLWQOSEcfIys/Fb+YXlrVtQ0O2i0eH6ylnf3zXdtBRmDTTM8Z4r/KrdOu+HsnWY8eU&#xA;nIeHihCifKNH8eSNdp5ygBAXUpWPeW/JOgy6FZQ6TqJVdW126hl+oggtFbWh9Znkp05BSPpHetB2&#xA;lqhnkckP7vFEji75S22To8JxREZfVMjbyG6Mk8+6C1xqza6kTaj5evrg6Sh2aQAtGgWnVqih8Nj2&#xA;rlI7Ky1Dwr4M0I8fl1P494ZnWwuXH9UJGmN65ealq3kfy5rDoby+j1GdZEI5c5JpmdECg1IPEKB9&#xA;GbPS44YdVlx/TE44/AAAW4macp4YT5y4j96O1a2m8wfpjV7K51DRNWtrY/pLTrwMIGi4UaNJNqAh&#xA;ejDfwyjTzGn8PHIQy45S9Mo87vmQ25InLxTiZQkBuDyS3Q9Jk8z/AJcjSNLlT9Kafetcy2juFMiM&#xA;pAbf/WoD02zJ1WoGl1viZB+7nCr7mnDi8bT8EfqjK6RWl2EfknT57W8njm8xa2Y7SOxhYP6MLsAz&#xA;SEd2DbfRTvlWbKdbMSiCMOK5cR6nyZ4oDTxIJ/eT2ruTvzJ51SHz/FoFzKtjoqMh1OYChmd4Q6LI&#xA;9KhPsKfatTTMHR9m3ozmiOLL/D5b1t58z9zkZ9ZWcYyah189v7FfRotLuvPrarda7Fqd6BN+jLSz&#xA;b1Ibe34kVkdaovwGlP5jXfK9TLJHSeHHGYR24jLYyl5Dnz+xniEZZ+IzEjvQHIBEeXLS+0+0029m&#xA;d7qO5UXLXU9wYbOzgl+JY0iB/eSEN3Xr3GQ1mSGSU4j0kbUI3KZHUnoPxTPBGUQCd7357Afrd5g1&#xA;C08raf5j1WCJGu7u+iW3UjkvrG3iYEj/ACW5vg0mKWqnixknhjA37uKX7AjPMYYzmOZl9tD+1Vut&#xA;IXUba8ldwt1q2m6Zb3FwAAxMsrpIxAFPiBH3ZGGo8OUQPpx5MhA9wFMpYuIHvlGI+9J9Zh85reXc&#xA;Nk0GgeVtNgks4WumCxSIV4l+K8mdj1Wo/GtczTS0xjEyvLnmRI8PMeXl5/qcfKM1kRqGOIrdg35a&#xA;WD3HmyOZCCmnxTXbN2/doVQ7/wDFjLm97ZyiOnI/nkR+Z3+y3W9nwvLf80Esof8AMuxbyb9dZk/x&#xA;eYjp/qhaSCMtX1eXSnHf/XzVDsaY1PD/AMh74q6X3fjo5p7Qj4PF/leX7fx1TRNEvtS1Ty1qVvcy&#xA;20I0NDPLb09d1i4FokbejMZhv88xjqYY8eaBAkfG2vlve58tm4YpTlCQNDg+P43TnULc3fl1La6g&#xA;W0lg1CxMMEk5up4xJdxgNMxLfG4dtuR69cwsU+DNxRPEDCdnh4QaieXkKDkTjxY6Ir1R62fqHNhv&#xA;5h+dNVl8yz+XbJxaWBkjiu2jAEk7Oqh+bDenE8adwN83PZHZuMYBmkOKdEi+Q58vvdfrtXI5PDG0&#xA;evmyrzvc6drslx5Sg1MaZqpaNmWVaR3IK8li5j3Ye/sc1XZkJ4ANQYcePflzj505urlHJeIS4Zfe&#xA;3o3l640fybBpcNlcT3/qM1+tjcRW7NJyr8czPGwUpx+zvSmDU6uObUnIZREK9PFEnbyFHe+9OLAc&#xA;eERAJPWjX2oHWo9Y1DzLoj6hfWukXMUvC3021meW8aOXj6okkAUCsabHp8zmRpjjx4MnBGWSJG8p&#xA;Co2OVD3teUTlkjxERPcDv5sN/MOz8y/4gudR1SCZdGa99O2MjfuiqHgvFamnJEr03zd9jZcHhRhA&#xA;jj4bPf5/aXXa+GTjMpA8F7PqzOxc12KuxV2KuxV2KuxV2Kvmvzx+UPmbRtKW++tSXy3d27TWFrFL&#xA;LHAZKlJGINTtsSI9um+a2em4TxVu63Lp5Ac+vJU0f8gfMl/pttqVpqUNvO4DiKeK5t3Rgdqc0D+4&#xA;PEZL8sZBY6OVWCmEf5Ifmfpoln03XIBcXDk3AiuJ4y9d+bMUHI18cpy9mQmAJRjKuW3Jsjhyx3jL&#xA;coBfyQ/NRb8aiLuD6+CW+tfWn9WpFCefHl0wnQDg4OGPB3dPkw/L5eLiv1d9r9K/5x384Xt9J+mL&#xA;yCxhqWa5Um5kdjvUIDH36lmGXQ0p5cggaORO5Tx/+cdNYSOC3h80k2sMnqojW7qI5DSrogmYctuu&#xA;2A6CNk7WRR26Nv5WVAcWwVta/J78zNQtPqUvmiG7tGp6kcoki5cTUcuCvy3Hc5i4uxMOKXFCMRJs&#xA;yQzTFGdhj8H/ADjh50E689S0+KOu8kbzs4HspiT/AIlmZ+VJ504w0U75hXb/AJxs8ycyw1i0JrUM&#xA;VlB+fQ4/lT5J/JHvV9M/5x98z2uqxXt5cabqUKMWkt53uAJKgj4iIz8++UZ9BOWMxjLgPeOjPHpT&#xA;GXFKpMxm/K7Ujp9zY6X+jtBS8T0rm4t43uJihFGAYi3p4b1+/Nbh9npcYnmynJwmwOnyc6Z9JjAC&#xA;F/jyYo3/ADjp5gaKOFvMitFCawxmOQqh8VHOg+jNuNCASdrPk4P5SVVxclb/AKFy1K6eSTUvM7SO&#xA;7F2PoNKWYihZmeUb4YaGMRQoe4KdIZfVK0Vdf8496rdtG1z5wllMSJFGWtT8KRmqqP8ASOxyMOzc&#xA;cL4QBZvl3s5aecucz+Piipf+ce7a9o2reZL++lH2XcDb/kY0p/HJYuz8eMVECPuFJlpuL6pErE/5&#xA;x0023ZmsdfvbYyI0cpVUqyNsykqU+E9xkp6KEue/XcIjpAORIQ3/AELPpX/V8n/5Ep/zVkvyvmx/&#xA;Ix70WP8AnH4L6PHzRfA2yGO3IWnpodyqfH8I9hlX8nY99hvz2G7P8udvVLZWsv8AnHzSI45YrrXt&#xA;SlimcSyJCyQhpFNVduSy1I33yX5DHYJG425KNNtXFJCT/wDON2is/qx63eLJXkzuiOxPWu3E1yf5&#xA;QVTE6MXdlLLz8jjLdSXNwNW1hpED+s09pbSO3EUDGdpn9viA6fLKoaSMBUR6fKgiWls2TIoC4/Kb&#xA;zVE7fo3SNUjjkUCT1NZswWoKb8IRtTbIS0UT/B9zHwZjlxf6ZJn/ACf8+wSi5h0C7SWI8/WTUbNn&#xA;5A15JxAevh3wy0xIox2+DV+XmDYBv3hPdH/KTzL5ollj8xT6rp6QJytpr147pC9eJULzVh47dfHI&#xA;afs+EL4YiHuAbvCnk+sy+Jt7/GrKiqzcmAALeJHfNq5zeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:InstanceID>xmp.iid:F97F11740720681197A584AEF8C471FE</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F97F11740720681197A584AEF8C471FE</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>xmp.did:A757E2EE132DDF11B930BF4D52823F4D</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>created</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A757E2EE132DDF11B930BF4D52823F4D</stEvt:instanceID>
                  <stEvt:when>2010-03-11T08:42:27-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe InDesign 6.0</stEvt:softwareAgent>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197A584AEF8C471FE</stEvt:instanceID>
                  <stEvt:when>2011-04-26T09:14:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197A584AEF8C471FE</stEvt:instanceID>
                  <stEvt:when>2011-04-26T09:16:27-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F87F11740720681197A584AEF8C471FE</stRef:instanceID>
            <stRef:documentID>xmp.did:F87F11740720681197A584AEF8C471FE</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:A757E2EE132DDF11B930BF4D52823F4D</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF Library 9.0</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -612 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 612 li
792 612 li
792 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
98.5068 492.606 mo
694.2 492.606 li
694.2 120.433 li
98.5068 120.433 li
98.5068 492.606 li
cp
clp
349.405 413.395 mo
376.194 413.395 409.973 415.633 424.536 415.633 cv
439.09 415.633 460.645 412.836 475.782 413.395 cv
490.927 413.958 506.066 417.305 523.54 416.191 cv
541.008 415.071 660.977 416.191 668.551 415.633 cv
676.122 415.071 679.614 416.747 682.528 416.191 cv
685.441 415.633 690.098 412.832 691.262 414.512 cv
692.426 416.191 694.762 427.364 694.176 435.188 cv
693.59 443.008 691.262 454.184 691.262 454.184 cv
693.59 482.129 li
693.59 482.129 688.934 480.45 684.278 480.45 cv
679.614 480.45 644.09 480.45 635.352 479.891 cv
626.622 479.333 613.223 478.77 607.984 479.891 cv
602.743 481.012 589.368 480.793 584.688 480.45 cv
577.122 479.891 561.973 478.77 556.73 479.891 cv
550.801 481.152 500.829 481.012 495.583 481.012 cv
490.34 481.012 478.696 479.891 474.614 479.891 cv
470.54 479.891 464.137 479.329 460.059 479.891 cv
455.98 480.45 450.743 481.012 442.587 482.129 cv
434.434 483.243 414.633 480.45 405.898 482.68 cv
398.934 484.461 371.536 482.129 365.712 482.68 cv
359.887 483.243 334.845 485.477 326.11 484.359 cv
317.376 483.243 304.563 484.359 298.737 483.243 cv
292.913 482.129 290.585 486.04 285.342 485.477 cv
281.821 485.102 281.848 484.918 266.124 484.918 cv
266.124 484.918 251.563 482.129 244.577 482.68 cv
237.587 483.243 220.7 481.566 217.788 482.129 cv
214.874 482.68 210.214 487.715 203.809 486.598 cv
197.401 485.477 168.284 486.036 167.118 486.036 cv
165.952 486.036 163.626 483.243 156.053 484.359 cv
148.483 485.477 129.846 482.68 129.846 482.68 cv
129.846 482.68 126.352 486.598 121.694 485.477 cv
117.034 484.359 108.298 481.566 108.298 481.566 cv
108.298 481.566 103.055 485.477 101.307 486.036 cv
99.561 486.598 98.5068 411.715 98.5068 411.715 cv
100.255 413.395 145.571 414.321 155.469 413.758 cv
211.38 414.512 li
211.38 414.512 281.848 415.633 265.54 415.633 cv
349.405 413.395 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.82 .28 .98 .14 cmyk
f
grestore
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
286.454 407.84 mo
286.388 407.82 li
286.304 407.711 286.212 407.633 286.124 407.59 cv
286.675 407.652 li
286.454 407.84 li
false sop
.82 .28 .98 .14 cmyk
f
grestore
285.426 407.566 mo
285.608 407.527 li
285.511 407.52 li
285.426 407.566 li
cp
false sop
.56 .14 .81 .35 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
284.856 407.66 mo
284.633 407.634 li
284.725 407.605 284.809 407.591 284.883 407.591 cv
285.124 407.634 li
285.038 407.652 284.948 407.66 284.856 407.66 cv
f
285.397 407.82 mo
285.124 407.633 li
285.415 407.574 li
285.321 407.641 285.344 407.727 285.397 407.82 cv
285.415 407.574 mo
285.42 407.566 li
285.426 407.566 li
285.415 407.574 li
cp
.82 .28 .98 .14 cmyk
f
grestore
285.565 408.048 mo
285.397 407.82 li
285.565 408.048 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
281.774 410.305 mo
281.086 410.301 282.317 409.575 282.786 409.434 cv
282.84 409.422 li
282.926 409.422 283.026 409.539 283.12 409.661 cv
283.221 409.77 283.319 409.895 283.411 409.895 cv
283.46 409.883 li
283.53 409.887 li
283.93 409.887 284.325 409.661 284.768 409.523 cv
284.821 409.5 li
284.883 409.5 284.909 409.614 284.926 409.719 cv
284.948 409.828 284.962 409.934 285.003 409.934 cv
285.018 409.934 li
285.583 409.836 286.061 409.239 286.434 409.239 cv
286.569 409.266 li
287.401 409.586 li
287.217 409.543 287.036 409.492 286.842 409.492 cv
286.774 409.492 li
285.985 409.668 285.237 409.922 284.458 410.125 cv
283.512 410.184 282.825 410.297 281.774 410.305 cv
.82 .28 .98 .14 cmyk
f
290.645 408.59 mo
290.243 408.59 289.848 408.5 289.446 408.223 cv
289.606 408.353 289.553 408.485 289.321 408.516 cv
289.124 408.215 li
289.362 408.133 289.596 408.047 289.829 408.047 cv
290.043 408.047 290.256 408.121 290.461 408.34 cv
290.461 408.34 290.659 408.207 290.758 408.137 cv
290.903 408.219 290.893 408.414 290.924 408.582 cv
290.833 408.59 290.737 408.59 290.645 408.59 cv
f
grestore
290.924 408.582 mo
290.942 408.629 li
291.241 408.551 li
291.227 408.535 li
290.924 408.582 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
246.557 411.559 mo
245.545 411.559 244.569 411.329 243.666 410.602 cv
242.961 410.059 242.057 409.864 241.336 409.864 cv
240.325 409.864 239.678 410.254 240.453 410.618 cv
237.946 409.637 236.955 410.719 235.69 408.614 cv
235.569 408.469 234.578 405.911 236.516 404.864 cv
237.498 404.813 239.161 404.582 240.621 404.582 cv
241.284 404.582 241.905 404.625 242.405 404.766 cv
243.973 405.219 245.473 405.344 246.952 405.344 cv
247.875 405.344 248.789 405.301 249.711 405.246 cv
250.618 405.196 251.528 405.148 252.455 405.148 cv
253.123 405.148 253.801 405.176 254.489 405.243 cv
256.59 405.438 258.725 405.536 260.985 405.657 cv
265.129 405.864 268.737 406.075 272.602 406.734 cv
274.372 407.023 li
275.264 407.176 li
275.332 407.243 li
275.301 407.184 li
275.504 407.215 li
275.598 407.398 275.741 407.454 275.905 407.454 cv
276.01 407.454 276.129 407.426 276.247 407.411 cv
276.497 407.383 li
277.674 407.559 li
277.586 407.594 li
277.774 407.566 li
278.288 407.645 li
278.377 407.691 278.461 407.762 278.543 407.879 cv
278.618 407.902 li
278.84 407.715 li
280.018 407.871 281.237 407.984 282.532 408.047 cv
282.532 408.047 283.172 408.477 283.37 408.797 cv
283.059 408.821 li
283.065 408.871 li
282.172 409.071 281.198 409.325 280.352 409.625 cv
280.006 409.743 li
279.932 409.743 li
279.778 409.743 279.633 409.707 279.491 409.668 cv
278.682 409.332 li
278.54 409.297 li
278.168 409.297 277.676 409.875 277.114 409.961 cv
277.104 409.961 li
277.059 409.961 277.047 409.848 277.032 409.734 cv
277.02 409.629 276.997 409.52 276.932 409.52 cv
276.883 409.539 li
276.444 409.661 276.053 409.875 275.661 409.875 cv
275.573 409.875 li
275.524 409.887 li
275.432 409.887 275.336 409.762 275.241 409.641 cv
275.145 409.523 275.051 409.407 274.963 409.407 cv
274.915 409.426 li
274.446 409.559 273.213 410.27 273.903 410.297 cv
274.938 410.282 275.625 410.176 276.563 410.137 cv
275.872 410.297 275.165 410.426 274.387 410.426 cv
274.207 410.426 274.018 410.422 273.827 410.398 cv
273.233 410.364 272.485 410.039 271.749 410.039 cv
271.596 410.043 li
270.579 410.266 269.491 410.688 268.336 410.688 cv
268.102 410.684 li
267.151 410.582 266.239 410.536 265.36 410.536 cv
263.944 410.536 262.6 410.637 261.258 410.75 cv
259.909 410.852 258.559 410.954 257.149 410.954 cv
256.432 410.954 255.702 410.926 254.942 410.859 cv
254.239 410.879 253.61 410.984 253 410.984 cv
252.848 410.984 252.702 410.977 252.555 410.957 cv
252.307 410.926 252.061 410.918 251.811 410.918 cv
250.942 410.918 250.055 411.079 249.174 411.239 cv
248.289 411.402 247.409 411.559 246.557 411.559 cv
280.252 408.977 mo
280.413 409.02 280.631 409.164 280.797 409.215 cv
280.631 409.164 280.413 409.02 280.252 408.977 cv
281.598 408.387 mo
282.034 408.727 282.471 408.829 282.918 408.829 cv
283.059 408.821 li
283.043 408.657 283.059 408.469 282.924 408.379 cv
282.825 408.438 282.62 408.555 282.62 408.555 cv
282.415 408.316 282.188 408.239 281.952 408.239 cv
281.735 408.239 281.506 408.309 281.282 408.375 cv
281.457 408.684 li
281.696 408.668 281.756 408.523 281.598 408.387 cv
277.282 407.661 mo
277.547 407.848 li
277.713 408.082 li
277.547 407.848 li
277.495 407.754 277.473 407.661 277.575 407.605 cv
277.586 407.594 li
277.522 407.618 li
276.534 407.457 li
276.624 407.641 276.76 407.691 276.924 407.691 cv
277.053 407.68 li
277.282 407.661 li
277.243 407.648 li
277.276 407.645 li
277.51 407.618 li
277.282 407.661 li
cp
273.706 407.887 mo
273.706 407.887 li
273.909 407.754 li
273.959 407.715 li
273.909 407.754 li
273.706 407.887 li
273.213 407.277 mo
273.356 407.469 273.485 407.684 273.616 407.813 cv
273.635 407.848 li
273.616 407.813 li
273.485 407.684 273.356 407.469 273.213 407.277 cv
274.286 407.786 mo
274.301 407.836 li
274.286 407.786 li
274.129 407.629 mo
273.971 407.711 li
274.129 407.629 li
272.579 406.836 mo
272.491 406.836 272.395 406.859 272.291 406.922 cv
272.508 407.164 272.782 407.309 273.034 407.309 cv
273.213 407.277 li
273.036 407.043 272.834 406.836 272.579 406.836 cv
240.672 410.7 mo
240.453 410.618 li
240.672 410.7 li
281.598 408.387 mo
281.547 408.348 li
281.598 408.387 li
.82 .28 .98 .14 cmyk
f
276.924 407.691 mo
276.76 407.691 276.624 407.641 276.533 407.458 cv
277.522 407.618 li
277.524 407.618 li
277.51 407.618 li
277.276 407.645 li
277.242 407.648 li
277.053 407.68 li
276.924 407.691 li
.56 .14 .81 .35 cmyk
f
129.264 488.863 mo
129.248 488.841 li
129.231 488.734 129.209 488.664 129.184 488.617 cv
129.35 488.664 li
129.323 488.762 129.292 488.863 129.264 488.863 cv
.82 .28 .98 .14 cmyk
f
grestore
128.976 488.61 mo
129.033 488.57 li
129.004 488.567 li
128.976 488.61 li
cp
f
128.725 488.695 mo
128.875 488.684 li
128.725 488.695 li
cp
f
128.875 488.684 mo
128.943 488.864 li
128.976 488.609 li
128.875 488.684 li
cp
.82 .28 .98 .14 cmyk
f
128.976 489.082 mo
128.943 488.863 li
128.976 489.082 li
cp
.56 .14 .81 .35 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
127.616 491.461 mo
127.425 491.461 127.85 490.699 128.007 490.551 cv
128.022 490.531 li
128.046 490.531 128.063 490.648 128.083 490.758 cv
128.1 490.867 128.12 490.988 128.145 490.988 cv
128.165 490.978 li
128.171 490.978 li
128.298 490.978 128.446 490.719 128.596 490.57 cv
128.614 490.551 li
128.636 490.551 128.634 490.66 128.626 490.762 cv
128.618 490.875 128.612 490.984 128.63 490.984 cv
128.636 490.981 li
128.815 490.867 129.02 490.254 129.126 490.254 cv
129.163 490.281 li
129.384 490.582 li
129.21 490.5 li
128.952 490.692 128.702 490.953 128.452 491.181 cv
128.159 491.262 127.938 491.406 127.62 491.461 cv
127.616 491.461 li
.82 .28 .98 .14 cmyk
f
130.469 489.594 mo
130.349 489.594 130.239 489.5 130.144 489.215 cv
130.18 489.34 130.155 489.481 130.076 489.508 cv
130.047 489.207 li
130.28 489.051 li
130.346 489.051 130.403 489.129 130.442 489.34 cv
130.555 489.146 li
130.592 489.235 130.562 489.426 130.555 489.586 cv
130.469 489.594 li
f
grestore
130.555 489.587 mo
130.555 489.641 li
130.653 489.563 li
130.653 489.547 li
130.555 489.587 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
120.731 492.602 mo
120.282 492.602 119.84 492.512 119.401 492.219 cv
119.143 492.168 118.901 492.262 118.688 492.09 cv
118.542 491.98 118.389 491.946 118.235 491.946 cv
118.047 491.946 117.862 491.996 117.676 492.055 cv
117.489 492.114 117.305 492.172 117.124 492.172 cv
116.756 492.172 116.417 491.934 116.157 490.954 cv
115.958 490.282 115.667 490.036 115.446 490.036 cv
115.194 490.036 115.034 490.36 115.221 490.73 cv
114.526 489.594 114.233 490.684 113.868 488.536 cv
113.842 488.387 113.501 485.797 114.153 484.809 cv
114.405 484.782 114.78 484.7 115.155 484.7 cv
115.497 484.7 115.836 484.77 116.075 485.023 cv
117.336 486.575 118.516 485.805 119.741 486.594 cv
120.354 486.985 120.979 487.286 121.631 487.489 cv
122.84 487.84 123.93 487.883 125.081 488.355 cv
125.602 488.551 li
125.868 488.657 li
125.887 488.711 li
125.881 488.664 li
125.942 488.684 li
125.956 488.844 125.991 488.898 126.036 488.898 cv
126.153 488.836 li
126.237 488.786 li
126.585 488.907 li
126.553 488.957 li
126.614 488.911 li
126.766 488.965 li
126.79 489.004 126.811 489.079 126.827 489.18 cv
126.846 489.2 li
126.932 489.012 li
127.286 489.105 127.653 489.168 128.045 489.18 cv
128.045 489.18 128.204 489.586 128.231 489.891 cv
128.141 489.93 li
128.149 489.77 128.172 489.575 128.135 489.493 cv
128.022 489.68 li
127.979 489.469 127.924 489.395 127.858 489.395 cv
127.629 489.559 li
127.659 489.86 li
127.737 489.829 127.758 489.692 127.721 489.559 cv
127.821 489.84 127.928 489.942 128.055 489.942 cv
128.141 489.93 li
128.135 489.985 li
127.848 490.215 127.528 490.504 127.249 490.832 cv
127.266 490.192 li
127.417 490.403 li
127.266 490.192 li
127.249 490.832 li
127.129 490.977 li
126.977 490.918 li
126.76 490.618 li
126.723 490.594 li
126.608 490.594 126.413 491.215 126.237 491.321 cv
126.231 491.325 li
126.215 491.325 126.221 491.219 126.221 491.105 cv
126.227 491 126.227 490.895 126.208 490.895 cv
126.19 490.914 li
126.044 491.067 125.905 491.321 125.776 491.321 cv
125.768 491.321 li
125.749 491.34 li
125.721 491.34 125.706 491.227 125.684 491.114 cv
125.667 491 125.641 490.891 125.618 490.891 cv
125.602 490.911 li
125.452 491.067 125.034 491.825 125.223 491.825 cv
125.231 491.825 li
125.549 491.754 125.768 491.614 126.055 491.528 cv
125.792 491.758 125.532 491.946 125.247 491.946 cv
125.202 491.946 li
125.034 491.934 124.846 491.684 124.631 491.684 cv
124.544 491.704 li
124.204 491.973 123.838 492.477 123.461 492.477 cv
123.43 492.477 li
123.206 492.43 122.987 492.411 122.77 492.411 cv
122.42 492.411 122.077 492.461 121.739 492.508 cv
121.397 492.551 121.061 492.602 120.731 492.602 cv
125.336 489.438 mo
125.338 489.438 li
125.413 489.305 li
125.491 489.164 li
125.413 489.305 li
125.336 489.438 li
126.458 489.032 mo
126.524 489.207 li
126.553 489.426 li
126.524 489.207 li
126.553 488.965 li
126.553 488.957 li
126.458 489.032 li
cp
125.231 488.868 mo
125.26 489.055 125.286 489.258 125.315 489.379 cv
125.319 489.407 li
125.315 489.379 li
125.286 489.258 125.26 489.055 125.231 488.868 cv
125.51 489.192 mo
125.518 489.219 125.524 489.27 125.526 489.36 cv
125.524 489.27 125.518 489.219 125.51 489.192 cv
126.243 488.864 mo
126.258 489.028 126.292 489.079 126.333 489.079 cv
126.458 489.012 li
126.532 488.969 li
126.243 488.864 li
cp
125.073 488.454 mo
124.975 488.551 li
125.02 488.782 125.09 488.907 125.163 488.907 cv
125.231 488.868 li
125.192 488.648 125.147 488.454 125.073 488.454 cv
115.286 490.844 mo
115.221 490.73 li
115.286 490.844 li
127.721 489.559 mo
127.711 489.532 li
127.721 489.559 li
.82 .28 .98 .14 cmyk
f
126.333 489.078 mo
126.292 489.078 126.259 489.027 126.243 488.863 cv
126.532 488.97 li
126.458 489.013 li
126.333 489.078 li
.56 .14 .81 .35 cmyk
f
600.915 488.566 mo
601.023 488.441 601.105 488.309 601.251 488.309 cv
601.316 488.316 li
601.48 488.407 601.634 488.45 601.785 488.477 cv
600.915 488.566 li
cp
.82 .28 .98 .14 cmyk
f
grestore
602.591 488.392 mo
602.746 488.383 li
602.867 488.309 li
602.591 488.392 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
603.527 488.18 mo
603.313 488.172 li
603.531 488.121 603.755 488.086 603.988 488.086 cv
604.095 488.09 li
603.884 488.153 603.695 488.18 603.527 488.18 cv
.82 .28 .98 .14 cmyk
f
602.867 488.309 mo
602.876 488.305 li
603.02 488.215 602.966 488.129 602.859 488.055 cv
603.313 488.172 li
602.867 488.309 li
cp
f
602.86 488.055 mo
602.676 487.946 li
602.86 488.055 li
602.676 487.946 mo
602.547 487.879 li
602.676 487.946 li
cp
.56 .14 .81 .35 cmyk
f
600.794 486.957 mo
600.699 486.949 li
600.216 486.931 599.771 486.895 599.324 486.859 cv
599.656 486.859 599.988 486.859 600.332 486.781 cv
601.521 486.427 602.646 485.898 603.849 485.599 cv
605.332 485.388 606.414 485.109 608.087 484.941 cv
608.199 484.941 li
609.066 484.941 607.324 485.73 606.638 485.974 cv
606.523 485.996 li
606.384 485.996 606.224 485.902 606.056 485.813 cv
605.896 485.724 605.731 485.633 605.595 485.633 cv
605.488 485.656 li
604.798 485.715 604.191 486.031 603.481 486.254 cv
603.388 486.273 li
603.289 486.273 603.224 486.172 603.173 486.07 cv
603.117 485.974 603.078 485.879 603.023 485.879 cv
602.992 485.892 li
602.056 486.142 601.414 486.957 600.794 486.957 cv
.82 .28 .98 .14 cmyk
f
594.496 489.379 mo
594.259 489.34 594.22 489.152 594.117 489.013 cv
594.63 488.863 595.145 488.763 595.695 488.763 cv
595.945 488.763 596.212 488.781 596.474 488.832 cv
596.22 488.763 596.27 488.617 596.613 488.513 cv
596.992 488.742 li
596.513 488.97 596.031 489.191 595.509 489.191 cv
595.313 489.191 595.109 489.164 594.895 489.082 cv
594.895 489.082 594.621 489.273 594.496 489.379 cv
f
grestore
593.652 489.145 mo
593.669 489.152 li
594.117 489.013 li
594.087 488.966 li
593.652 489.145 li
cp
.82 .28 .98 .14 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
673.134 489.641 mo
672.228 489.641 671.384 489.59 670.699 489.469 cv
663.978 488.223 658.017 489.078 651.504 488.422 cv
648.235 488.118 644.902 487.871 641.453 487.817 cv
640.981 487.813 640.517 487.809 640.048 487.809 cv
638.238 487.809 636.47 487.852 634.72 487.883 cv
632.931 487.918 631.16 487.961 629.379 487.961 cv
627.313 487.961 625.246 487.907 623.129 487.739 cv
620.302 487.567 li
621.242 487.23 li
621.242 487.23 621.461 487.434 621.56 487.543 cv
621.699 487.391 621.879 487.289 622.099 487.243 cv
622.396 487.453 622.731 487.641 623.11 487.641 cv
623.267 487.641 623.427 487.61 623.595 487.532 cv
623.246 487.317 622.832 487.196 622.461 487.196 cv
622.332 487.196 622.211 487.215 622.099 487.243 cv
621.879 487.289 621.699 487.391 621.56 487.543 cv
621.461 487.434 621.242 487.23 621.242 487.23 cv
620.302 487.567 li
618.879 487.477 li
618.754 487.418 li
618.817 487.477 li
618.485 487.457 li
618.332 487.289 618.129 487.243 617.902 487.243 cv
617.707 487.243 617.5 487.278 617.302 487.313 cv
616.902 487.352 li
615.021 487.266 li
615.156 487.219 li
615.263 487.192 li
616.824 487.286 li
616.681 487.129 616.481 487.071 616.259 487.071 cv
616.173 487.071 616.078 487.082 615.985 487.094 cv
615.86 487.098 615.742 487.114 615.621 487.129 cv
615.177 486.957 li
615.267 487.055 615.317 487.148 615.168 487.215 cv
615.156 487.219 li
614.86 487.258 li
614.052 487.23 li
613.899 487.188 613.742 487.118 613.595 487.016 cv
613.496 486.996 li
613.363 486.996 613.277 487.102 613.16 487.192 cv
612.638 487.184 612.113 487.18 611.582 487.18 cv
610.192 487.18 608.774 487.219 607.289 487.297 cv
607.289 487.297 606.203 486.989 605.836 486.715 cv
606.313 486.629 li
606.375 486.789 606.375 486.985 606.613 487.047 cv
606.763 486.969 607.063 486.809 607.063 486.809 cv
607.371 486.969 607.681 487.023 607.992 487.023 cv
608.392 487.023 608.798 486.926 609.211 486.821 cv
608.879 486.523 li
608.509 486.559 608.438 486.696 608.677 486.817 cv
608.177 486.621 607.707 486.555 607.231 486.555 cv
606.927 486.555 606.621 486.586 606.313 486.629 cv
606.298 486.586 li
607.677 486.192 609.164 485.868 610.481 485.469 cv
610.629 485.645 610.677 485.871 610.731 486.098 cv
610.677 485.871 610.629 485.645 610.481 485.469 cv
611.013 485.301 li
611.117 485.289 611.228 485.278 611.328 485.278 cv
611.5 485.278 611.668 485.301 611.836 485.317 cv
612.271 485.387 612.695 485.485 613.185 485.571 cv
613.371 485.598 li
613.97 485.598 614.673 484.95 615.574 484.828 cv
615.595 484.821 li
615.649 484.821 615.685 484.926 615.728 485.036 cv
615.763 485.141 615.813 485.246 615.923 485.246 cv
616.004 485.23 li
616.731 485.059 617.345 484.805 618.004 484.805 cv
618.031 484.805 li
618.117 484.782 li
618.259 484.782 618.418 484.891 618.578 485 cv
618.738 485.11 618.906 485.223 619.048 485.223 cv
619.138 485.207 li
619.836 485.047 621.649 484.278 620.681 484.278 cv
620.621 484.278 li
618.985 484.36 617.914 484.504 616.435 484.605 cv
617.735 484.352 619.074 484.164 620.638 484.164 cv
620.728 484.164 li
621.595 484.176 622.677 484.387 623.735 484.387 cv
623.923 484.387 624.11 484.379 624.293 484.364 cv
625.988 484.082 627.742 483.489 629.72 483.43 cv
635.431 483.348 640.996 482.539 646.563 482.539 cv
648.195 482.539 649.828 482.605 651.461 482.786 cv
651.918 482.786 li
652.281 482.786 652.634 482.786 652.981 482.773 cv
653.25 482.773 653.521 482.77 653.774 482.77 cv
654.302 482.77 654.802 482.786 655.285 482.84 cv
655.931 482.918 656.582 482.942 657.235 482.942 cv
658.406 482.942 659.603 482.852 660.785 482.758 cv
661.961 482.664 663.134 482.571 664.263 482.571 cv
666.027 482.571 667.699 482.793 669.152 483.614 cv
670.203 484.153 671.56 484.352 672.672 484.352 cv
674.302 484.352 675.384 483.93 674.103 483.571 cv
678.017 484.493 679.457 483.243 681.586 485.262 cv
681.746 485.395 683.707 487.848 680.492 489.078 cv
678.688 489.27 675.646 489.641 673.134 489.641 cv
614.953 486.793 mo
615.177 486.957 li
614.953 486.793 li
620.586 486.95 mo
620.586 486.95 li
620.625 486.95 li
620.586 486.95 li
620.927 486.809 mo
620.793 486.887 li
620.927 486.809 li
620.31 486.762 mo
620.371 486.848 li
620.31 486.762 li
621.242 486.668 mo
621.146 486.668 621.031 486.739 620.927 486.809 cv
621.039 486.739 621.146 486.668 621.242 486.668 cv
615.31 487.188 mo
615.621 487.129 li
615.688 487.148 li
615.638 487.157 li
615.31 487.188 li
cp
608.793 486.86 mo
608.677 486.817 li
608.793 486.86 li
674.103 483.571 mo
674.004 483.551 673.906 483.528 673.806 483.496 cv
673.914 483.528 674.013 483.547 674.103 483.571 cv
f
grestore
gsave
98.5068 492.606 mo
694.2 492.606 li
694.2 120.433 li
98.5068 120.433 li
98.5068 492.606 li
cp
clp
616.825 487.285 mo
615.262 487.191 li
615.247 487.191 li
615.309 487.188 li
615.637 487.156 li
615.688 487.148 li
615.79 487.13 615.884 487.109 615.984 487.095 cv
616.079 487.082 616.173 487.07 616.259 487.07 cv
616.48 487.07 616.68 487.13 616.825 487.285 cv
.56 .14 .81 .35 cmyk
f
397.431 236.348 mo
397.431 236.348 398.539 214.328 401.453 210.469 cv
404.368 206.614 406.7 203.867 406.7 203.867 cv
406.7 203.867 421.258 197.254 427.66 195.606 cv
434.063 193.95 434.063 196.7 438.142 197.801 cv
442.228 198.907 449.785 202.758 456.2 204.41 cv
462.61 206.067 471.336 209.922 473.668 207.723 cv
476 205.52 479.493 199.453 479.493 197.801 cv
479.493 196.149 478.91 204.961 478.91 204.961 cv
487.063 206.067 li
487.063 206.067 488.228 201.653 492.31 200.004 cv
496.388 198.352 505.121 192.301 512.11 183.489 cv
519.095 174.684 519.095 168.075 522.59 160.907 cv
526.082 153.75 531.321 157.606 534.817 155.407 cv
538.313 153.207 542.396 157.606 542.978 158.16 cv
543.56 158.707 545.306 156.512 545.888 151.551 cv
546.474 146.594 539.481 142.196 539.481 142.196 cv
539.481 142.196 532.492 140.543 527.832 138.34 cv
523.172 136.137 523.172 132.836 523.172 132.836 cv
523.172 132.836 516.185 131.735 512.11 131.184 cv
508.032 130.629 502.789 126.778 502.789 126.778 cv
502.789 126.778 495.224 129.535 489.974 129.535 cv
484.731 129.535 480.075 123.469 480.075 123.469 cv
480.075 123.469 477.164 118.512 471.927 121.266 cv
466.685 124.028 465.517 128.981 462.021 131.184 cv
458.532 133.387 453.871 130.078 453.871 130.078 cv
453.871 130.078 448.043 137.239 444.547 137.789 cv
441.056 138.34 437.56 137.239 437.56 137.239 cv
437.56 137.239 431.157 147.703 428.825 151.004 cv
426.496 154.305 424.746 151.551 424.746 151.551 cv
424.168 164.219 li
420.672 166.422 li
420.095 185.688 li
399.707 195.606 li
399.707 195.606 399.121 190.649 400.871 185.688 cv
402.621 180.735 405.528 170.825 399.707 165.867 cv
393.881 160.907 389.807 159.813 389.228 163.664 cv
388.643 167.524 388.643 228.082 388.643 228.082 cv
397.431 236.348 li
cp
.82 .28 .92 .14 cmyk
f
grestore
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
382.032 200.938 mo
381.907 200.899 381.758 200.875 381.831 200.809 cv
381.94 200.762 382.01 200.719 382.049 200.668 cv
382.032 200.938 li
cp
.56 .14 .81 .35 cmyk
f
grestore
382.069 200.422 mo
382.079 200.367 li
382.014 200.332 li
382.069 200.422 li
cp
.56 .14 .81 .35 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
381.926 200.192 mo
381.881 199.954 li
381.965 200.047 381.965 200.125 381.926 200.192 cv
f
382.014 200.333 mo
382.01 200.324 li
382.014 200.328 li
382.014 200.333 li
cp
381.754 200.333 mo
381.926 200.191 li
382.01 200.324 li
381.914 200.301 li
381.754 200.333 li
f
grestore
381.528 200.434 mo
381.755 200.332 li
381.528 200.434 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
380.036 201.399 mo
380.081 201.305 380.126 201.204 380.087 201.102 cv
379.839 200.751 379.522 200.426 379.249 200.079 cv
379.106 199.645 378.915 199.336 378.79 198.852 cv
378.882 198.747 li
379.108 198.747 379.663 199.083 379.807 199.247 cv
379.962 199.333 379.265 199.512 379.409 199.602 cv
379.423 199.797 379.72 199.969 379.909 200.176 cv
380.059 200.262 379.423 200.274 379.491 200.325 cv
379.657 200.602 380.481 200.801 380.319 200.989 cv
380.036 201.399 li
cp
f
381.407 203.036 mo
381.208 203.031 li
381.171 202.777 381.214 202.559 381.569 202.309 cv
381.407 202.355 li
381.255 202.254 li
381.569 202.161 li
381.755 202.372 381.934 202.609 381.473 202.816 cv
381.678 202.977 li
381.616 203.02 381.516 203.036 381.407 203.036 cv
f
grestore
381.153 203.032 mo
381.239 203.184 li
381.255 203.176 li
381.208 203.032 li
381.153 203.032 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
380.545 199.454 mo
380.49 199.316 li
380.654 199.29 380.86 199.281 380.943 199.211 cv
380.717 199.083 li
381.163 198.852 380.974 198.648 380.775 198.434 cv
380.47 198.556 li
380.611 198.645 li
380.788 198.586 li
380.447 198.849 380.411 199.083 380.49 199.316 cv
380.433 199.324 li
380.136 198.915 379.771 198.488 379.372 198.125 cv
380.036 198.012 li
379.372 198.125 li
379.193 197.977 li
379.22 197.73 li
379.485 197.309 li
379.65 197.113 378.818 196.931 378.65 196.645 cv
378.575 196.602 379.22 196.579 379.068 196.497 cv
378.872 196.285 378.575 196.117 378.562 195.915 cv
378.409 195.84 379.106 195.641 378.961 195.556 cv
378.813 195.395 378.256 195.066 378.025 195.066 cv
377.935 195.184 li
378.062 195.656 378.258 195.969 378.402 196.41 cv
378.092 196.031 377.845 195.633 377.808 195.148 cv
377.781 194.849 378.07 194.431 377.935 194.056 cv
377.57 193.563 376.943 193.07 376.897 192.449 cv
376.926 190.156 375.749 188.113 376.504 185.809 cv
376.534 185.387 376.415 185.023 376.56 184.676 cv
377.11 183.238 375.104 181.829 377.397 180.57 cv
378.572 179.872 378.312 178.918 377.827 178.918 cv
377.709 178.918 377.579 178.977 377.454 179.109 cv
378.456 177.859 377.238 177.594 379.386 176.656 cv
379.486 176.622 380.788 176.105 381.981 176.105 cv
382.495 176.105 382.981 176.199 383.351 176.469 cv
383.536 177.234 384.099 178.747 383.59 179.609 cv
382.229 181.859 383.12 183.609 382.465 185.633 cv
382.124 186.641 381.897 187.594 381.775 188.656 cv
381.595 190.594 381.792 192.306 381.521 194.188 cv
381.415 195.051 li
381.36 195.48 li
381.297 195.52 li
381.36 195.504 li
381.342 195.605 li
381.04 195.708 381.133 195.84 381.229 195.965 cv
381.293 196.086 li
381.238 196.66 li
381.179 196.613 li
381.229 196.699 li
381.217 196.958 li
381.17 197 381.108 197.056 380.995 197.105 cv
380.926 197.165 381.07 197.191 381.2 197.227 cv
381.179 197.797 381.185 198.379 381.247 199 cv
381.247 199 380.86 199.336 380.545 199.454 cv
381.031 196.375 mo
381.079 196.484 li
380.915 196.633 li
381.079 196.586 li
381.17 196.613 li
381.179 196.613 li
381.152 196.586 li
381.208 196.109 li
380.981 196.184 380.981 196.277 381.031 196.375 cv
380.437 194.824 mo
380.754 195 li
380.437 194.824 li
381.334 194.668 mo
381.238 194.711 381.027 194.79 381.027 194.79 cv
381.027 194.79 381.238 194.711 381.334 194.668 cv
381.011 194.523 mo
381.011 194.523 li
381.322 194.387 381.568 194.224 381.293 194.066 cv
380.99 194.224 380.89 194.398 381.011 194.523 cv
380.788 198.586 mo
380.822 198.559 li
380.788 198.586 li
381.146 196.574 mo
381.079 196.484 li
381.09 196.469 li
381.104 196.48 li
381.146 196.574 li
cp
377.36 179.224 mo
377.454 179.109 li
377.36 179.224 li
.82 .28 .92 .14 cmyk
f
381.153 196.594 mo
381.145 196.574 li
381.104 196.481 li
381.09 196.469 li
381.032 196.375 li
380.981 196.278 380.981 196.184 381.208 196.11 cv
381.153 196.586 li
381.153 196.594 li
cp
.56 .14 .81 .35 cmyk
f
430.208 202.161 mo
430.203 202.129 li
430.271 201.927 li
430.328 201.993 li
430.208 202.161 li
f
grestore
430.172 201.895 mo
430.215 201.867 li
430.207 201.855 li
430.172 201.895 li
cp
f
430.095 201.954 mo
430.012 201.946 li
430.095 201.954 li
cp
f
430.095 201.954 mo
430.044 202.121 li
430.172 201.895 li
430.095 201.954 li
cp
f
429.97 202.328 mo
430.044 202.121 li
429.97 202.328 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
428.274 204.321 mo
428.176 204.305 428.696 203.648 428.84 203.532 cv
428.855 203.516 li
428.868 203.516 428.821 203.625 428.778 203.727 cv
428.743 203.836 428.704 203.941 428.723 203.941 cv
428.735 203.93 li
428.743 203.934 li
428.813 203.934 428.977 203.73 429.129 203.625 cv
429.141 203.605 li
429.149 203.605 429.11 203.7 429.055 203.801 cv
429.004 203.895 428.958 204 428.965 204 cv
428.973 203.997 li
429.118 203.926 429.477 203.407 429.54 203.407 cv
429.547 203.438 li
429.54 203.743 li
429.485 203.648 li
428.774 204.152 li
428.598 204.188 428.442 204.293 428.274 204.321 cv
f
430.521 202.988 mo
430.442 202.988 430.411 202.902 430.473 202.629 cv
430.438 202.743 430.375 202.845 430.329 202.852 cv
430.45 202.575 li
430.606 202.45 li
430.653 202.45 430.653 202.523 430.583 202.743 cv
430.708 202.579 li
430.696 202.668 430.614 202.836 430.543 202.984 cv
430.521 202.988 li
f
grestore
430.544 202.984 mo
430.521 203.035 li
430.603 202.973 li
430.613 202.957 li
430.544 202.984 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
424.935 205.575 mo
424.728 205.575 424.481 205.348 424.125 204.563 cv
423.856 203.977 423.637 203.773 423.496 203.773 cv
423.317 203.773 423.278 204.109 423.481 204.465 cv
422.813 203.473 422.801 204.563 422.332 202.48 cv
422.271 202.345 421.935 199.781 421.978 198.754 cv
422.047 198.695 422.118 198.575 422.215 198.575 cv
422.286 198.575 422.375 198.645 422.496 198.848 cv
422.961 199.512 423.274 199.618 423.594 199.618 cv
423.817 199.605 li
424.043 199.59 li
424.231 199.59 424.446 199.629 424.704 199.762 cv
425.106 200.012 425.657 200.23 426.079 200.355 cv
426.868 200.575 427.618 200.629 428.168 201.168 cv
428.414 201.411 li
428.524 201.531 li
428.517 201.595 li
428.528 201.54 li
428.56 201.566 li
428.508 201.734 428.512 201.786 428.536 201.786 cv
428.622 201.734 li
428.68 201.7 li
428.825 201.845 li
428.789 201.883 li
428.84 201.855 li
428.903 201.922 li
428.84 202.129 li
428.84 202.161 li
428.965 201.98 li
429.11 202.122 429.258 202.223 429.454 202.29 cv
429.454 202.29 429.364 202.677 429.239 202.958 cv
429.185 202.984 li
429.258 202.836 429.349 202.672 429.364 202.586 cv
429.228 202.75 li
429.305 202.536 429.301 202.458 429.267 202.458 cv
429.086 202.579 li
428.978 202.852 li
429.028 202.845 429.099 202.715 429.133 202.59 cv
429.055 202.891 429.079 202.988 429.153 202.988 cv
429.185 202.984 li
429.149 203.031 li
428.911 203.211 428.637 203.427 428.372 203.7 cv
428.646 203.122 li
428.372 203.7 li
428.258 203.813 li
428.215 203.747 li
428.228 203.45 li
428.224 203.427 li
428.172 203.427 427.825 203.954 427.731 204.052 cv
427.728 204.055 li
427.724 204.055 427.762 203.954 427.805 203.859 cv
427.849 203.762 427.892 203.661 427.887 203.661 cv
427.872 203.68 li
427.754 203.809 427.618 204.043 427.575 204.043 cv
427.571 204.043 li
427.56 204.055 li
427.547 204.055 427.579 203.954 427.618 203.845 cv
427.649 203.734 427.676 203.633 427.664 203.633 cv
427.657 203.648 li
427.547 203.793 427.18 204.508 427.235 204.508 cv
427.239 204.508 li
427.344 204.45 427.465 204.325 427.586 204.243 cv
427.414 204.454 427.278 204.625 427.204 204.625 cv
427.192 204.622 li
427.11 204.363 li
427.086 204.372 li
426.903 204.618 426.731 205.2 426.688 205.2 cv
426.606 205.168 li
426.489 205.34 li
426.344 205.516 li
426.278 205.516 426.176 205.45 426.021 205.262 cv
425.989 205.262 li
425.907 205.286 li
425.829 205.293 li
425.715 205.247 li
425.567 205.152 li
425.474 205.152 425.383 205.258 425.282 205.368 cv
425.176 205.473 425.067 205.575 424.935 205.575 cv
428.008 202.238 mo
428.008 202.243 li
428.086 202.113 li
428.168 201.98 li
428.168 201.993 li
428.168 201.98 li
428.086 202.113 li
428.008 202.243 li
428.008 202.238 li
cp
428.719 201.95 mo
428.68 202.122 li
428.789 201.891 li
428.789 201.883 li
428.767 201.895 li
428.664 201.77 li
428.599 201.934 428.606 201.98 428.633 201.98 cv
428.724 201.927 li
428.767 201.898 li
428.719 201.95 li
cp
428.129 201.262 mo
428.055 201.352 li
428.024 201.583 428.028 201.711 428.067 201.711 cv
428.118 201.68 li
428.161 201.458 428.176 201.262 428.129 201.262 cv
428.271 201.411 mo
428.247 201.516 428.2 201.704 428.2 201.704 cv
428.2 201.704 428.247 201.516 428.271 201.411 cv
423.555 204.583 mo
423.481 204.465 li
423.555 204.583 li
429.133 202.59 mo
429.142 202.563 li
429.133 202.59 li
.82 .28 .92 .14 cmyk
f
428.634 201.98 mo
428.606 201.98 428.599 201.934 428.664 201.77 cv
428.767 201.895 li
428.774 201.895 li
428.767 201.899 li
428.724 201.926 li
428.634 201.98 li
.56 .14 .81 .35 cmyk
f
426.161 140.958 mo
426.152 140.941 li
426.118 140.844 426.087 140.777 426.066 140.73 cv
426.152 140.754 li
426.165 140.848 426.177 140.958 426.161 140.958 cv
f
grestore
425.966 140.711 mo
425.966 140.771 li
425.985 140.711 li
425.966 140.711 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
425.903 140.895 mo
425.919 140.829 li
425.954 140.852 li
425.903 140.895 li
cp
f
grestore
425.954 140.852 mo
426.032 141.012 li
425.966 140.77 li
425.954 140.852 li
cp
f
426.114 141.223 mo
426.032 141.012 li
426.114 141.223 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
426.665 143.68 mo
426.634 143.68 426.384 142.946 426.359 142.778 cv
426.352 142.758 li
426.359 142.758 426.402 142.856 426.445 142.957 cv
426.477 143.059 426.52 143.153 426.531 143.153 cv
426.527 143.141 li
426.552 143.137 426.484 142.86 426.462 142.688 cv
426.458 142.664 li
426.462 142.664 426.488 142.766 426.52 142.871 cv
426.552 142.973 426.574 143.078 426.579 143.078 cv
426.579 143.075 li
426.56 142.953 426.445 142.325 426.47 142.325 cv
426.484 142.352 li
426.583 142.617 li
426.536 142.559 li
426.536 142.778 426.579 143.059 426.626 143.286 cv
426.626 143.414 426.656 143.582 426.665 143.676 cv
426.665 143.68 li
f
426.72 141.5 mo
426.685 141.5 426.642 141.418 426.574 141.172 cv
426.606 141.285 426.614 141.434 426.582 141.473 cv
426.543 141.176 li
426.56 141.078 426.582 140.984 426.614 140.984 cv
426.638 140.984 426.668 141.047 426.699 141.246 cv
426.731 141.039 li
426.742 141.125 426.75 141.312 426.75 141.477 cv
426.72 141.5 li
f
grestore
426.75 141.478 mo
426.767 141.527 li
426.793 141.434 li
426.785 141.422 li
426.75 141.478 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
420.149 145.852 mo
419.926 145.852 419.723 145.832 419.555 145.786 cv
419.419 145.414 419.036 144.457 419.68 144.137 cv
421.387 143.434 420.817 142.688 421.833 142.371 cv
422.313 142.254 422.73 142.2 423.055 142.071 cv
423.594 141.86 423.891 141.536 424.462 141.536 cv
424.551 141.539 li
424.829 141.551 li
424.969 141.871 li
424.829 141.551 li
424.954 141.559 li
425.001 141.598 li
424.958 141.559 li
424.997 141.567 li
425.079 141.676 425.118 141.719 425.137 141.719 cv
425.137 141.629 li
425.137 141.571 li
425.29 141.575 li
425.305 141.629 li
425.301 141.575 li
425.372 141.586 li
425.504 141.762 li
425.52 141.778 li
425.45 141.594 li
425.602 141.594 425.723 141.571 425.848 141.5 cv
425.855 141.5 426.051 141.836 426.169 142.118 cv
426.161 142.168 li
426.176 142.223 li
426.192 142.496 426.254 142.817 426.372 143.161 cv
426.415 143.305 li
426.379 143.274 li
426.215 143.043 li
426.192 143.024 li
426.169 143.024 426.465 143.602 426.512 143.735 cv
426.508 143.735 426.454 143.641 426.399 143.551 cv
426.282 143.368 li
426.294 143.387 li
426.36 143.551 426.489 143.797 426.473 143.801 cv
426.477 143.817 li
426.344 143.641 li
426.215 143.473 li
426.227 143.489 li
426.294 143.641 426.712 144.297 426.73 144.297 cv
426.614 143.942 li
426.719 144.188 426.825 144.379 426.797 144.395 cv
426.712 144.313 li
426.626 144.246 li
426.626 144.274 li
426.786 144.532 427.141 144.981 427.137 145 cv
427.122 145 li
427.098 145.02 li
427.004 144.981 426.684 144.907 425.907 144.762 cv
425.762 144.746 li
424.493 144.809 425.688 144.668 423.442 145.188 cv
423.434 145.188 li
423.325 145.188 422.821 145.356 422.192 145.516 cv
421.547 145.684 420.77 145.852 420.149 145.852 cv
425.04 144.707 mo
424.907 144.707 424.926 144.719 425.02 144.731 cv
425.126 144.743 425.317 144.754 425.528 144.754 cv
425.751 144.746 li
425.379 144.719 425.153 144.707 425.04 144.707 cv
426.087 142.582 mo
426.215 142.746 li
426.087 142.582 li
cp
424.926 141.899 mo
425.047 142.036 425.18 142.196 425.262 142.289 cv
425.27 142.297 li
425.262 142.289 li
425.18 142.196 425.047 142.036 424.926 141.899 cv
424.903 141.848 424.852 141.762 424.774 141.633 cv
424.852 141.762 424.903 141.848 424.926 141.899 cv
424.782 141.739 424.657 141.606 424.622 141.606 cv
424.649 141.719 li
424.797 141.868 424.891 141.95 424.926 141.95 cv
424.926 141.899 li
425.165 142.071 mo
425.172 142.071 425.212 142.114 425.297 142.223 cv
425.212 142.114 425.172 142.071 425.165 142.071 cv
425.903 141.887 mo
426.032 142.121 426.098 142.204 426.133 142.204 cv
426.161 142.168 li
426.105 142.024 426.032 141.84 426.001 141.77 cv
426.032 141.969 li
425.954 141.797 425.911 141.735 425.887 141.735 cv
425.864 141.735 425.876 141.832 425.883 141.926 cv
426.02 142.2 li
426.024 142.157 425.965 141.996 425.903 141.887 cv
425.325 141.723 mo
425.442 141.848 li
425.559 142.036 li
425.442 141.848 li
425.313 141.641 li
425.325 141.723 li
425.321 141.719 li
425.317 141.707 li
425.305 141.653 li
425.18 141.633 li
425.262 141.754 425.301 141.793 425.317 141.793 cv
425.325 141.727 li
425.325 141.723 li
cp
427.313 145.289 mo
427.294 145.289 427.219 145.254 427.032 145.141 cv
426.997 145.11 427.102 145.153 426.965 145.09 cv
426.751 145.063 426.813 145.063 426.915 145.063 cv
426.946 145.063 li
427.11 145.059 li
427.18 145.145 li
427.313 145.289 li
427.11 145.059 mo
427.098 145.02 li
427.11 145.059 li
.82 .28 .92 .14 cmyk
f
425.317 141.793 mo
425.301 141.793 425.262 141.754 425.18 141.633 cv
425.305 141.652 li
425.317 141.707 li
425.321 141.719 li
425.325 141.727 li
425.317 141.793 li
.56 .14 .81 .35 cmyk
f
495.688 205.93 mo
495.665 205.918 li
495.504 205.762 li
495.559 205.77 li
495.688 205.93 li
f
grestore
495.488 205.801 mo
495.466 205.761 li
495.449 205.754 li
495.488 205.801 li
cp
f
495.521 205.915 mo
495.528 205.875 li
495.521 205.915 li
cp
f
495.528 205.875 mo
495.649 205.996 li
495.488 205.801 li
495.528 205.875 li
cp
.82 .28 .92 .14 cmyk
f
495.81 206.16 mo
495.649 205.996 li
495.81 206.16 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
497.317 208.215 mo
497.282 208.215 496.813 207.59 496.723 207.457 cv
496.715 207.438 li
496.876 207.59 li
497.036 207.754 li
497.032 207.731 li
497.044 207.723 496.883 207.496 496.786 207.344 cv
496.778 207.328 li
496.926 207.488 li
497.075 207.652 li
497.075 207.645 li
497.012 207.531 496.594 207.004 496.622 207.004 cv
496.645 207.016 li
496.872 207.207 li
496.805 207.18 li
497.196 207.844 li
497.321 208.207 li
497.317 208.215 li
f
496.212 206.258 mo
496 206.035 li
495.918 205.871 li
495.935 205.871 495.992 205.922 496.125 206.059 cv
496.009 205.887 li
496.066 205.945 496.199 206.094 496.306 206.219 cv
496.302 206.254 li
496.271 206.254 496.191 206.192 496.031 206.035 cv
496.212 206.258 li
f
grestore
496.305 206.219 mo
496.34 206.259 li
496.305 206.184 li
496.286 206.176 li
496.305 206.219 li
cp
.56 .14 .81 .35 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
494.618 212.532 mo
494.555 212.532 li
494.523 212.532 li
492.609 210.45 491.484 209.211 490.848 208.512 cv
490.848 208.512 490.747 208.398 490.48 208.105 cv
490.48 208.091 li
490.497 208.059 li
490.57 207.961 li
490.634 207.898 490.738 207.852 490.891 207.825 cv
492.591 207.665 491.911 207.083 492.763 206.926 cv
493.184 206.879 493.548 206.868 493.809 206.798 cv
494.204 206.7 494.329 206.446 494.708 206.446 cv
494.88 206.458 li
495.087 206.484 li
495.32 206.754 li
495.087 206.484 li
495.191 206.493 li
495.238 206.532 li
495.195 206.493 li
495.223 206.493 li
495.329 206.598 495.376 206.637 495.388 206.637 cv
495.355 206.559 li
495.329 206.512 li
495.45 206.52 li
495.488 206.571 li
495.536 206.641 li
495.665 206.754 li
495.837 206.907 li
495.665 206.754 li
495.488 206.571 li
495.466 206.52 li
495.505 206.52 li
495.677 206.676 li
495.691 206.684 li
495.559 206.52 li
495.782 206.418 li
495.782 206.418 496.079 206.688 496.286 206.911 cv
496.313 206.966 li
496.2 206.833 496.066 206.688 496.009 206.637 cv
496.126 206.798 li
495.988 206.657 495.931 206.605 495.919 206.605 cv
496.001 206.773 li
496.212 207 li
496.208 206.966 496.118 206.864 496.027 206.773 cv
496.2 206.934 496.273 206.993 496.302 206.993 cv
496.313 206.966 li
496.348 207 li
496.477 207.234 496.645 207.509 496.872 207.805 cv
496.962 207.93 li
496.927 207.907 li
496.708 207.73 li
496.684 207.723 li
496.661 207.723 497.113 208.219 497.195 208.325 cv
497.036 208.173 li
496.876 208.02 li
496.891 208.032 li
497.009 208.173 497.195 208.379 497.181 208.384 cv
497.191 208.398 li
497.02 208.25 li
496.859 208.105 li
496.872 208.118 li
496.973 208.25 497.52 208.813 497.552 208.813 cv
497.552 208.809 li
497.337 208.5 li
497.513 208.708 497.657 208.864 497.641 208.891 cv
497.532 208.829 li
497.438 208.773 li
497.441 208.801 li
497.552 208.911 497.704 209.059 497.829 209.18 cv
497.645 209.141 497.38 209.083 497.032 208.997 cv
496.884 208.973 496.763 208.946 496.652 208.926 cv
496.708 208.984 li
496.708 208.989 li
496.763 208.993 li
496.907 209.012 li
496.777 208.997 li
496.723 208.993 li
496.712 208.993 li
496.806 209.098 496.898 209.208 496.898 209.208 cv
496.898 209.208 496.848 209.148 496.708 208.993 cv
496.7 208.984 li
496.645 208.926 li
496.591 208.864 li
496.263 208.504 495.641 207.821 494.523 206.586 cv
494.493 206.605 li
494.484 206.598 li
494.493 206.605 li
494.484 206.609 li
494.263 206.782 li
493.923 207.075 li
493.77 207.227 493.559 207.441 493.652 207.469 cv
493.872 207.434 li
494.208 207.434 494.609 207.668 494.763 208.548 cv
495.223 208.579 493.755 211.509 496.191 212.036 cv
496.286 212.036 496.54 211.918 496.766 211.79 cv
496.98 211.661 497.177 211.54 497.195 211.54 cv
497.091 211.629 li
496.609 212.023 495.872 212.375 495.145 212.489 cv
494.618 212.532 li
cp
496.423 207.329 mo
496.583 207.458 li
496.423 207.329 li
cp
495.294 206.773 mo
495.431 206.887 495.595 207.027 495.691 207.102 cv
495.734 207.141 li
495.691 207.102 li
495.595 207.027 495.431 206.887 495.294 206.773 cv
495.259 206.734 495.191 206.665 495.083 206.548 cv
495.191 206.665 495.259 206.734 495.294 206.773 cv
495.13 206.641 494.98 206.523 494.954 206.523 cv
495.02 206.609 li
495.188 206.747 495.286 206.813 495.306 206.813 cv
495.294 206.773 li
495.544 206.918 mo
495.566 206.934 li
495.544 206.918 li
495.388 206.571 mo
495.493 206.665 495.54 206.7 495.552 206.7 cv
495.52 206.622 li
495.493 206.583 li
495.388 206.571 li
cp
498.411 209.543 mo
498.23 209.473 li
498.087 209.402 li
498.095 209.411 li
498.087 209.411 497.966 209.313 497.829 209.18 cv
498.208 209.27 498.286 209.293 498.263 209.293 cv
498.126 209.282 li
497.984 209.259 li
497.954 209.259 497.966 209.27 498.095 209.309 cv
498.223 209.375 498.109 209.336 498.141 209.364 cv
498.376 209.5 498.438 209.543 498.411 209.543 cv
497.122 209.504 mo
497.122 209.504 496.902 209.259 496.595 208.918 cv
496.645 208.926 li
496.7 208.984 li
496.691 208.984 li
496.669 208.984 li
496.661 208.984 li
496.988 209.355 497.122 209.504 497.122 209.504 cv
496.638 209.344 mo
496.63 209.344 496.516 209.223 496.255 208.926 cv
496.247 208.926 li
496.247 208.923 li
496.22 208.923 li
496.173 208.915 li
496.079 208.887 li
496.122 208.864 li
496.2 208.864 li
496.458 209.148 496.638 209.344 496.638 209.344 cv
496.595 208.918 mo
496.415 208.891 496.286 208.879 496.2 208.864 cv
496.013 208.661 495.79 208.415 495.559 208.165 cv
495.023 207.579 494.484 206.993 494.488 206.993 cv
494.516 207.009 li
494.466 206.907 li
494.493 206.668 li
494.523 206.641 li
494.523 206.637 li
494.665 206.798 495.23 207.418 495.802 208.051 cv
496.087 208.359 496.363 208.665 496.595 208.918 cv
490.848 208.512 mo
490.837 208.504 490.759 208.418 490.657 208.301 cv
490.848 208.512 li
490.657 208.301 mo
490.243 207.855 490.098 207.696 490.098 207.696 cv
490.098 207.696 490.286 207.895 490.473 208.098 cv
490.657 208.301 li
496.027 206.773 mo
495.988 206.739 li
496.027 206.773 li
494.523 206.637 mo
494.493 206.605 li
494.523 206.637 li
.82 .28 .92 .14 cmyk
f
495.552 206.7 mo
495.539 206.7 495.492 206.665 495.388 206.57 cv
495.492 206.583 li
495.521 206.622 li
495.552 206.7 li
f
521.825 179.742 mo
521.734 179.645 521.622 179.563 521.712 179.554 cv
521.966 179.574 li
521.825 179.742 li
cp
.56 .14 .81 .35 cmyk
f
grestore
522.098 179.402 mo
522.118 179.375 li
522.094 179.333 li
522.098 179.402 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
522.067 179.192 mo
522.149 179.012 li
522.172 179.114 522.137 179.161 522.067 179.192 cv
f
522.095 179.333 mo
522.091 179.32 li
522.095 179.32 li
522.095 179.333 li
cp
522.091 179.32 mo
521.853 179.208 li
522.067 179.191 li
522.091 179.32 li
cp
f
grestore
521.853 179.207 mo
521.614 179.16 li
521.853 179.207 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
519.934 179.047 mo
520.102 178.887 li
520.024 178.555 519.891 178.215 519.774 177.899 cv
519.793 177.586 519.719 177.332 519.766 177.02 cv
519.821 176.973 li
519.989 176.973 520.477 177.461 520.563 177.653 cv
520.512 177.688 li
520.313 177.672 li
520.133 177.653 li
520.079 177.688 li
520.024 177.813 520.239 178.039 520.317 178.254 cv
520.317 178.278 li
520.282 178.278 520.188 178.242 520.094 178.207 cv
519.899 178.141 li
519.899 178.149 li
519.926 178.383 520.563 178.899 520.332 178.938 cv
519.934 179.047 li
cp
f
520.621 180.867 mo
520.52 180.867 520.359 180.75 520.216 180.661 cv
520.259 180.5 520.38 180.391 520.691 180.391 cv
520.794 180.395 li
520.656 180.372 520.556 180.281 520.574 180.191 cv
520.884 180.301 li
520.931 180.488 520.966 180.691 520.716 180.691 cv
520.505 180.656 li
520.621 180.867 li
cp
f
grestore
520.172 180.781 mo
520.184 180.785 li
520.215 180.66 li
520.16 180.632 li
520.172 180.781 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
521.446 178.109 mo
521.34 178.109 521.239 178.102 521.145 178.083 cv
521.141 177.973 li
521.29 178.02 521.454 178.091 521.559 178.091 cv
521.587 178.091 li
521.434 177.915 li
521.528 177.915 li
521.915 177.915 521.816 177.708 521.727 177.512 cv
521.398 177.473 li
521.398 177.555 521.512 177.618 521.653 177.618 cv
521.68 177.618 li
521.27 177.665 521.161 177.79 521.141 177.973 cv
521.087 177.954 li
520.954 177.579 520.813 177.161 520.501 176.825 cv
521.161 176.984 li
520.501 176.825 li
520.38 176.691 li
520.458 176.563 li
520.813 176.403 li
521.001 176.296 520.563 176.153 520.266 176.153 cv
520.055 176.196 li
519.997 176.122 li
519.837 176.102 520.501 175.859 520.355 175.841 cv
520.266 175.841 520.066 175.708 519.859 175.586 cv
519.657 175.466 519.446 175.336 519.329 175.336 cv
519.258 175.336 519.23 175.387 519.258 175.516 cv
519.52 176.344 519.719 176.188 519.829 176.278 cv
519.559 176.216 519.313 176.421 519.137 175.489 cv
519.001 175.079 519.313 174.171 519.544 173.29 cv
519.465 172.969 519.605 172.375 519.837 171.813 cv
519.778 171.629 519.723 171.441 519.676 171.234 cv
519.458 169.954 519.605 168.946 520.063 168.301 cv
521.446 166.73 521.637 165.196 522.872 165.196 cv
523.169 165.196 523.52 165.278 523.965 165.48 cv
524.321 165.645 524.614 165.708 524.84 165.708 cv
525.571 165.708 525.602 165.036 524.938 164.883 cv
525.161 164.921 525.333 164.941 525.473 164.941 cv
525.696 164.941 525.837 164.898 525.954 164.855 cv
526.071 164.816 526.176 164.778 526.325 164.778 cv
526.566 164.778 526.946 164.883 527.739 165.278 cv
527.833 165.415 530.536 166.341 530.544 167.941 cv
529.977 168.684 529.176 169.727 528.368 169.727 cv
528.337 169.727 li
528.223 169.716 528.102 169.716 528.001 169.716 cv
527.066 169.716 526.52 169.98 526.169 170.254 cv
525.973 170.391 525.837 170.543 525.805 170.543 cv
525.794 170.543 li
525.602 170.454 525.387 170.372 525.2 170.316 cv
525.239 170.48 525.344 170.653 525.641 170.766 cv
525.734 170.829 li
525.759 170.855 li
525.766 170.859 li
525.77 170.859 li
525.786 171.016 525.84 171.629 525.895 172.243 cv
525.923 172.571 525.954 172.895 525.98 173.157 cv
525.977 173.157 li
525.965 173.157 li
525.887 173.188 li
525.575 173.305 li
524.977 173.551 li
524.661 173.671 524.309 173.793 524.036 173.921 cv
523.833 174.023 523.661 174.105 523.505 174.18 cv
523.54 174.583 523.583 175.012 523.626 175.466 cv
523.618 175.466 li
523.602 175.461 li
523.54 175.438 li
523.309 175.333 523.016 175.223 522.7 175.091 cv
522.688 175.325 li
522.634 175.368 li
522.688 175.341 li
522.688 175.421 li
522.407 175.559 522.516 175.637 522.634 175.73 cv
522.708 175.813 li
522.634 176.336 li
522.571 176.305 li
522.626 176.387 li
522.571 176.598 li
522.516 176.622 522.438 176.637 522.325 176.657 cv
522.234 176.671 522.368 176.73 522.477 176.79 cv
521.938 178.075 li
521.938 178.075 521.7 178.109 521.446 178.109 cv
522.446 176.266 mo
522.563 176.293 li
522.493 176.176 li
522.497 176.165 li
522.505 176.176 li
522.559 176.27 li
522.626 175.844 li
522.395 175.941 522.395 176.012 522.446 176.094 cv
522.493 176.176 li
522.309 176.278 li
522.446 176.266 li
521.719 174.954 mo
522.048 175.079 li
521.719 174.954 li
524.571 170.184 mo
524.544 170.204 li
524.571 170.184 li
521.68 177.618 mo
521.727 177.614 li
521.68 177.618 li
520.251 176.243 mo
520.059 176.2 li
520.133 176.2 li
520.34 176.196 li
520.458 176.196 520.54 176.196 520.477 176.208 cv
520.251 176.243 li
520.059 176.2 mo
520.055 176.196 li
520.059 176.2 li
526.023 173.657 mo
526.023 173.657 526.009 173.454 525.98 173.157 cv
525.98 173.148 li
526.016 173.512 526.023 173.657 526.023 173.657 cv
525.773 170.859 mo
525.77 170.859 li
525.77 170.825 li
525.773 170.859 li
524.938 164.883 mo
524.848 164.868 li
524.938 164.883 li
.82 .28 .92 .14 cmyk
f
522.559 176.27 mo
522.504 176.176 li
522.496 176.165 li
522.446 176.094 li
522.396 176.012 522.396 175.942 522.625 175.844 cv
522.559 176.27 li
cp
.56 .14 .81 .35 cmyk
f
396.211 228.083 mo
395.627 225.887 li
395.627 225.887 389.808 213.773 370.59 213.773 cv
351.368 213.773 328.074 226.435 319.918 234.146 cv
311.767 241.848 300.118 258.93 301.865 280.398 cv
303.613 301.871 323.418 341.517 328.074 349.773 cv
332.734 358.031 336.228 364.09 339.724 370.146 cv
343.215 376.195 344.961 381.707 350.786 387.215 cv
356.51 392.621 356.631 393.81 364.769 394.613 cv
375.833 395.72 383.4 394.927 391.554 389.418 cv
399.707 383.914 399.707 387.215 406.106 387.215 cv
412.521 387.215 414.271 389.418 420.095 392.172 cv
425.914 394.927 435.142 395.988 443.962 397.129 cv
456.781 398.777 460.277 392.724 465.517 387.215 cv
470.763 381.707 481.824 370.146 487.063 356.383 cv
492.302 342.617 506.867 298.016 505.121 275.441 cv
503.371 252.867 475.414 229.188 455.035 223.685 cv
434.649 218.18 420.095 220.379 413.106 221.48 cv
406.106 222.583 403.195 222.035 403.195 222.035 cv
396.211 228.083 li
cp
.02 .96 .9 0 cmyk
f
330.018 371.137 mo
329.899 371.059 li
330.004 370.797 li
330.163 371.129 li
330.018 371.137 li
f
grestore
329.87 370.48 mo
329.84 370.413 li
329.765 370.396 li
329.87 370.48 li
cp
0 .72 .78 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
329.586 370.266 mo
329.499 370.184 329.431 370.102 329.398 369.985 cv
329.538 370.071 329.581 370.157 329.586 370.266 cv
f
329.522 370.508 mo
329.586 370.266 li
329.764 370.396 li
329.758 370.396 li
329.71 370.387 li
329.522 370.508 li
.02 .96 .9 0 cmyk
f
grestore
329.377 370.716 mo
329.522 370.509 li
329.377 370.716 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
328.657 372.5 mo
328.635 372.363 328.614 372.23 328.516 372.117 cv
327.071 371.156 li
326.663 370.672 326.284 370.359 325.862 369.801 cv
325.77 369.664 325.854 369.613 326.018 369.613 cv
326.307 369.613 326.852 369.777 327.048 369.902 cv
327.243 369.949 326.715 370.441 326.915 370.496 cv
327.048 370.734 327.434 370.836 327.743 371.027 cv
327.934 371.07 327.36 371.344 327.458 371.363 cv
327.79 371.664 328.669 371.574 328.645 371.887 cv
328.657 372.5 li
cp
f
330.829 374.004 mo
330.612 373.746 330.499 373.438 330.64 372.981 cv
330.468 373.125 li
330.329 373.051 li
330.544 372.797 li
330.847 372.981 331.157 373.16 330.896 373.617 cv
331.177 373.699 li
331.145 373.816 330.974 373.906 330.829 374.004 cv
f
grestore
330.784 374.032 mo
330.968 374.168 li
330.973 374.153 li
330.828 374.004 li
330.784 374.032 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
327.856 369.883 mo
327.713 369.728 li
327.856 369.637 328.032 369.551 328.061 369.43 cv
327.782 369.356 li
328.047 368.896 327.737 368.715 327.426 368.528 cv
327.206 368.785 li
327.35 368.86 li
327.422 368.86 327.485 368.813 327.524 368.719 cv
327.385 369.172 327.497 369.478 327.713 369.728 cv
327.668 369.771 li
327.139 369.379 326.534 368.981 325.928 368.668 cv
326.071 368.528 326.27 368.406 326.473 368.274 cv
326.27 368.406 326.071 368.528 325.928 368.668 cv
325.678 368.539 li
325.598 368.445 325.565 368.34 325.543 368.231 cv
325.522 367.61 li
325.543 367.305 324.666 367.383 324.333 367.09 cv
324.237 367.063 324.811 366.797 324.622 366.738 cv
324.319 366.555 323.94 366.445 323.805 366.192 cv
323.614 366.149 324.143 365.649 323.958 365.603 cv
323.751 365.481 323.2 365.301 322.911 365.301 cv
322.758 365.301 322.68 365.356 322.768 365.488 cv
323.184 366.051 323.553 366.383 323.958 366.875 cv
323.44 366.512 322.963 366.094 322.641 365.512 cv
322.426 365.133 322.442 364.496 322.088 364.082 cv
321.459 363.586 320.575 363.18 320.151 362.426 cv
318.747 359.516 316.543 357.367 315.877 354.274 cv
315.651 353.731 315.313 353.297 315.227 352.789 cv
314.86 350.789 312.143 349.435 313.672 347.035 cv
314.391 345.844 313.762 344.685 313.293 344.685 cv
313.155 344.685 313.03 344.781 312.958 345.016 cv
313.178 343.938 312.854 343.422 312.838 342.896 cv
313.825 342.371 314.809 341.656 314.889 341.59 cv
316.084 340.685 315.983 340.57 316.008 340.289 cv
316.219 340.25 316.43 340.223 316.643 340.223 cv
316.989 340.223 317.327 340.289 317.639 340.457 cv
318.133 341.348 319.227 342.978 319.163 344.149 cv
318.834 347.242 320.672 349.141 321.27 351.853 cv
321.549 353.219 321.936 354.57 322.436 355.942 cv
323.374 358.461 324.629 360.504 325.491 362.969 cv
325.915 364.082 li
326.124 364.637 li
326.096 364.719 li
326.135 364.664 li
326.188 364.797 li
325.967 365.039 326.135 365.164 326.301 365.293 cv
326.428 365.418 li
326.731 366.153 li
326.647 366.125 li
326.752 366.215 li
326.897 366.521 li
326.784 366.789 li
326.907 366.871 li
327.047 366.871 li
327.389 367.582 327.758 368.305 328.206 369.051 cv
328.206 369.051 328.069 369.617 327.856 369.883 cv
326.473 365.996 mo
326.403 366.242 li
326.608 366.117 li
326.647 366.125 li
326.608 366.09 li
326.368 365.481 li
326.209 365.66 326.262 365.781 326.37 365.883 cv
326.473 365.996 li
326.471 365.969 li
326.489 365.981 li
326.584 366.082 li
326.473 365.996 li
cp
324.866 364.129 mo
324.868 364.242 325.282 364.16 325.284 364.278 cv
325.282 364.16 324.868 364.242 324.866 364.129 cv
325.618 363.629 mo
325.399 363.883 li
325.618 363.629 li
325.499 363.637 mo
325.499 363.637 li
325.557 363.633 li
325.499 363.637 li
325.231 363.574 mo
325.231 363.574 li
325.428 363.278 325.565 362.985 325.211 362.883 cv
325.028 363.192 325.045 363.453 325.231 363.574 cv
327.524 368.719 mo
327.54 368.66 li
327.524 368.719 li
312.915 345.195 mo
312.958 345.016 li
312.915 345.195 li
.02 .96 .9 0 cmyk
f
326.61 366.102 mo
326.585 366.082 li
326.489 365.98 li
326.471 365.969 li
326.37 365.883 li
326.262 365.782 326.21 365.661 326.368 365.48 cv
326.608 366.09 li
326.61 366.102 li
cp
0 .72 .78 0 cmyk
f
377.768 404.09 mo
377.452 404.043 li
377.504 403.949 377.543 403.848 377.588 403.848 cv
377.623 403.867 li
377.668 403.978 377.723 404.043 377.768 404.09 cv
.02 .96 .9 0 cmyk
f
grestore
378.071 404.133 mo
378.123 404.146 li
378.176 404.099 li
378.071 404.133 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
378.479 404.059 mo
378.35 404.02 li
378.512 403.984 li
378.629 404.016 li
378.479 404.059 li
f
378.176 404.098 mo
378.176 404.09 li
378.19 403.84 li
378.351 404.02 li
378.176 404.098 li
cp
f
grestore
378.19 403.84 mo
378.098 403.621 li
378.19 403.84 li
cp
.02 .96 .9 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
377.665 402.445 mo
377.601 402.426 li
377.216 402.13 li
377.464 402.208 li
377.517 402.203 li
377.921 402.001 378.273 401.73 378.612 401.516 cv
379.046 401.387 379.341 401.184 379.796 401.074 cv
379.825 401.07 li
380.075 401.07 379.667 401.855 379.446 402.035 cv
379.417 402.059 li
379.375 402.059 379.321 401.949 379.265 401.848 cv
379.212 401.742 379.155 401.645 379.118 401.645 cv
379.093 401.669 li
378.886 401.676 378.712 401.977 378.493 402.126 cv
378.468 402.137 li
378.433 402.137 378.413 402.035 378.403 401.919 cv
378.392 401.816 378.382 401.708 378.37 401.708 cv
378.366 401.716 li
378.116 401.82 377.855 402.445 377.665 402.445 cv
f
377.807 403.168 mo
377.6 403.168 377.399 403.082 377.196 402.828 cv
377.278 402.949 377.254 403.094 377.123 403.121 cv
377.016 402.824 li
377.147 402.734 377.278 402.642 377.409 402.642 cv
377.52 402.642 377.633 402.707 377.743 402.918 cv
377.897 402.707 li
377.979 402.793 377.973 402.992 377.995 403.148 cv
377.807 403.168 li
f
grestore
377.995 403.148 mo
377.995 403.198 li
378.162 403.113 li
378.152 403.102 li
377.995 403.148 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
379.749 403.387 mo
379.749 403.387 379.355 403.028 379.226 402.739 cv
379.386 402.68 li
379.409 402.84 379.415 403.024 379.499 403.102 cv
379.644 402.891 li
379.761 403.074 379.872 403.141 379.977 403.141 cv
380.112 403.141 380.239 403.035 380.36 402.93 cv
380.209 402.641 li
380.091 402.68 380.083 402.828 380.194 402.949 cv
379.968 402.731 379.78 402.641 379.602 402.641 cv
379.386 402.68 li
379.372 402.625 li
379.802 402.324 380.235 402.004 380.558 401.567 cv
380.634 401.735 380.688 401.961 380.747 402.18 cv
380.688 401.961 380.634 401.735 380.558 401.567 cv
380.688 401.387 li
380.806 401.356 li
380.937 401.379 li
381.396 401.574 li
381.448 401.582 li
381.641 401.582 381.688 400.891 381.911 400.684 cv
381.918 400.676 li
382.011 400.86 li
382.043 400.965 382.091 401.059 382.12 401.059 cv
382.145 401.035 li
382.313 400.817 382.411 400.508 382.607 400.449 cv
382.638 400.422 li
382.825 400.59 li
383.032 400.758 li
383.062 400.739 li
383.208 400.524 383.427 399.684 383.222 399.684 cv
383.167 399.699 li
382.729 399.961 382.477 400.168 382.091 400.399 cv
382.396 400.035 382.7 399.762 383.153 399.574 cv
383.431 399.473 383.931 399.617 384.25 399.391 cv
384.62 398.907 384.891 398.184 385.464 397.942 cv
387.757 397.141 389.374 395.203 392.206 394.907 cv
392.709 394.762 393.104 394.504 393.571 394.481 cv
394.817 394.473 396.036 393.313 397.329 393.313 cv
397.895 393.313 398.48 393.535 399.083 394.184 cv
399.583 394.739 400.184 394.942 400.63 394.942 cv
401.199 394.942 401.509 394.598 401.001 394.188 cv
402.509 395.309 403.216 394.375 403.591 396.555 cv
403.677 396.711 403.579 399.289 402.626 400.203 cv
402.488 400.203 li
402.329 400.203 402.152 400.215 401.958 400.227 cv
401.755 400.246 401.544 400.262 401.333 400.262 cv
400.941 400.262 400.559 400.203 400.247 399.996 cv
399.599 399.559 398.98 399.407 398.376 399.407 cv
397.148 399.407 395.959 400.024 394.532 400.102 cv
393.431 400.168 392.309 400.379 391.177 400.707 cv
389.101 401.344 387.366 402.262 385.216 402.657 cv
384.232 402.832 li
384.413 402.399 li
384.636 402.641 li
384.413 402.399 li
384.232 402.832 li
383.741 402.907 li
383.683 402.867 li
383.72 402.918 li
383.605 402.93 li
383.521 402.821 383.452 402.778 383.394 402.778 cv
383.167 402.918 li
383.054 402.996 li
382.401 403.086 li
382.434 403.024 li
382.466 402.992 li
383.003 402.93 li
382.927 402.824 382.86 402.785 382.796 402.785 cv
382.667 402.832 li
382.562 402.903 li
382.372 402.774 li
382.434 403.02 li
382.434 403.024 li
382.351 403.094 li
382.064 403.133 li
382.003 403.102 381.939 403.051 381.864 402.953 cv
381.834 402.938 li
381.78 402.938 381.78 403.055 381.759 403.16 cv
381.104 403.207 380.458 403.348 379.749 403.387 cv
384.687 402.301 mo
384.843 402.446 384.997 402.571 385.12 402.571 cv
385.189 402.571 385.249 402.524 385.282 402.41 cv
385.128 402.278 384.98 402.211 384.872 402.211 cv
384.687 402.301 li
384.653 402.356 384.632 402.434 384.628 402.535 cv
384.632 402.434 384.653 402.356 384.687 402.301 cv
384.095 402.215 mo
384.095 402.215 li
384.12 402.203 li
384.095 402.215 li
384.216 401.871 mo
384.165 401.996 li
384.216 401.871 li
380.226 402.985 mo
380.194 402.949 li
380.226 402.985 li
382.48 402.985 mo
382.562 402.903 li
382.587 402.907 li
382.579 402.918 li
382.48 402.985 li
cp
401.001 394.188 mo
400.934 394.137 li
401.001 394.188 li
f
382.456 402.996 mo
382.48 402.984 li
382.579 402.918 li
382.587 402.906 li
382.667 402.832 li
382.796 402.785 li
382.86 402.785 382.927 402.824 383.003 402.931 cv
382.466 402.992 li
382.456 402.996 li
cp
0 .72 .78 0 cmyk
f
418.868 398.527 mo
418.876 398.508 li
418.977 398.309 li
418.993 398.363 li
418.868 398.527 li
f
grestore
418.915 398.293 mo
418.95 398.267 li
418.95 398.246 li
418.915 398.293 li
cp
0 .72 .78 0 cmyk
f
418.845 398.348 mo
418.79 398.34 li
418.845 398.348 li
cp
f
418.845 398.348 mo
418.77 398.508 li
418.915 398.293 li
418.845 398.348 li
cp
f
418.653 398.699 mo
418.77 398.508 li
418.653 398.699 li
cp
.02 .96 .9 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
416.845 400.531 mo
416.824 400.531 li
416.731 400.516 417.36 399.953 417.509 399.833 cv
417.521 399.82 li
417.527 399.82 417.474 399.919 417.418 400.023 cv
417.36 400.126 417.306 400.223 417.32 400.223 cv
417.345 400.216 li
417.353 400.216 li
417.414 400.216 417.599 400.035 417.735 399.93 cv
417.75 399.915 li
417.634 400.102 li
417.524 400.29 li
417.527 400.285 li
417.66 400.223 418.052 399.723 418.103 399.723 cv
418.103 399.747 li
418.035 400.044 li
418.009 399.953 li
417.349 400.43 li
417.192 400.458 417.013 400.531 416.845 400.531 cv
f
418.899 399.289 mo
418.848 399.289 418.848 399.195 418.95 398.931 cv
418.903 399.043 418.833 399.156 418.79 399.172 cv
418.926 398.895 li
419.075 398.77 li
419.098 398.77 419.083 398.836 418.989 399.056 cv
419.105 398.879 li
419.079 398.965 418.993 399.138 418.922 399.273 cv
418.899 399.289 li
0 .72 .78 0 cmyk
f
grestore
418.922 399.273 mo
418.883 399.328 li
418.957 399.262 li
418.965 399.246 li
418.922 399.273 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
415.56 400.457 mo
415.411 400.41 li
415.329 400.324 415.457 400.013 415.289 399.98 cv
415.051 400.023 414.704 400.121 414.457 400.121 cv
414.332 400.121 414.228 400.095 414.172 400.027 cv
413.743 399.246 412.332 398.845 412.918 397.578 cv
412.918 397.384 412.778 397.23 412.911 397.063 cv
413.353 396.461 411.461 395.695 413.965 395.461 cv
415.457 395.395 415.043 394.992 414.34 394.992 cv
414.137 395 li
415.06 394.935 414.86 394.724 415.239 394.724 cv
415.438 394.724 415.801 394.781 416.586 394.965 cv
416.747 394.965 419.188 395.75 420.271 396.074 cv
420.2 396.066 li
419.879 396.056 419.657 396.052 419.497 396.052 cv
418.797 396.052 419.274 396.152 418.731 396.273 cv
418.379 396.414 418.118 396.603 417.981 396.789 cv
417.903 397.109 418.086 397.254 417.961 397.746 cv
417.926 397.978 li
417.935 398.074 li
417.942 398.105 li
417.825 398.234 417.813 398.273 417.829 398.273 cv
417.911 398.238 li
417.961 398.211 li
417.997 398.34 li
417.954 398.375 li
417.997 398.349 li
418.021 398.395 li
417.903 398.578 li
417.896 398.599 li
418.043 398.453 li
418.103 398.566 418.185 398.648 418.31 398.699 cv
418.301 398.699 418.129 399.056 417.969 399.306 cv
417.914 399.328 li
418.008 399.199 418.122 399.043 418.157 398.965 cv
418.008 399.109 li
418.125 398.914 418.142 398.855 418.118 398.855 cv
417.942 398.965 li
417.778 399.211 li
417.817 399.199 417.899 399.105 417.954 399.004 cv
417.825 399.246 417.825 399.332 417.892 399.332 cv
417.914 399.328 li
417.872 399.379 li
417.642 399.535 417.349 399.734 417.039 399.957 cv
417.43 399.438 li
417.039 399.957 li
416.899 400.047 li
416.86 399.984 li
416.961 399.715 li
416.961 399.691 li
416.899 399.691 416.435 400.129 416.289 400.168 cv
416.286 400.172 li
416.426 399.996 li
416.551 399.832 li
416.536 399.853 li
416.387 399.935 416.18 400.082 416.106 400.082 cv
416.082 400.078 li
416.063 400.09 li
416.051 400.09 416.118 399.996 416.188 399.902 cv
416.31 399.728 li
416.293 399.734 li
416.129 399.836 415.399 400.27 415.504 400.328 cv
415.637 400.349 li
415.789 400.349 415.926 400.297 416.075 400.289 cv
415.887 400.384 415.7 400.457 415.56 400.457 cv
417.224 398.578 mo
417.224 398.578 li
417.344 398.488 li
417.224 398.578 li
417.868 398.427 mo
417.778 398.574 li
417.954 398.375 li
417.911 398.395 li
417.935 398.384 li
417.914 398.27 li
417.797 398.406 417.782 398.445 417.805 398.445 cv
417.868 398.427 li
417.465 398.41 mo
417.403 398.488 li
417.465 398.41 li
417.461 398.406 mo
417.465 398.41 li
417.461 398.406 li
417.457 398.406 li
417.461 398.406 li
417.856 397.945 mo
417.642 398.181 li
417.856 397.945 li
417.883 397.813 mo
417.786 397.871 li
417.606 398.052 417.543 398.148 417.582 398.148 cv
417.606 398.142 li
417.767 397.965 417.914 397.813 417.883 397.813 cv
417.954 399.004 mo
417.989 398.945 li
417.954 399.004 li
420.512 396.125 mo
420.356 396.103 li
420.271 396.074 li
420.521 396.117 420.547 396.125 420.512 396.125 cv
f
417.806 398.445 mo
417.782 398.445 417.797 398.406 417.914 398.27 cv
417.935 398.383 li
417.91 398.395 li
417.883 398.415 li
417.868 398.426 li
417.806 398.445 li
0 .72 .78 0 cmyk
f
505.677 307.188 mo
505.707 307.109 li
505.841 307.141 505.978 307.161 505.899 307.168 cv
505.789 307.168 505.72 307.184 505.677 307.188 cv
f
grestore
505.63 307.285 mo
505.688 307.301 li
505.637 307.271 li
505.63 307.285 li
cp
0 .72 .78 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
505.802 307.406 mo
505.777 307.341 li
505.802 307.406 li
cp
f
grestore
505.688 307.302 mo
505.777 307.341 li
505.954 307.302 li
505.688 307.302 li
cp
f
505.954 307.302 mo
506.191 307.278 li
505.954 307.302 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
507.763 307.121 mo
507.778 307.109 li
507.907 307.023 508.563 306.855 508.703 306.813 cv
508.621 306.895 li
508.496 306.941 508.328 307.009 508.196 307.056 cv
508.106 307.063 li
508.274 306.988 li
508.306 306.974 li
508.153 307.013 li
508.024 307.056 507.888 307.086 507.763 307.121 cv
508.422 307.023 mo
508.41 307.023 508.496 306.984 508.599 306.941 cv
508.578 306.957 li
508.442 307.017 li
508.422 307.023 li
508.356 307.013 mo
508.349 307.013 508.453 306.974 508.56 306.922 cv
508.617 306.906 li
508.606 306.918 li
508.379 307.009 li
508.356 307.013 li
508.703 306.813 mo
508.72 306.793 li
508.703 306.813 li
f
506.528 307.043 mo
506.239 306.942 li
506.133 306.871 506.04 306.781 506.098 306.781 cv
506.133 306.781 506.208 306.81 506.352 306.867 cv
506.169 306.742 li
506.247 306.774 506.411 306.875 506.555 306.957 cv
506.566 306.996 li
506.536 306.996 506.446 306.974 506.234 306.906 cv
506.359 306.942 506.501 307.017 506.528 307.043 cv
f
grestore
506.555 306.958 mo
506.603 306.988 li
506.528 306.923 li
506.521 306.918 li
506.555 306.958 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
505.938 312.422 mo
505.786 312.383 505.34 312.41 505.579 311.896 cv
506.329 310.496 505.485 310.903 505.809 310.156 cv
505.978 309.801 506.086 309.512 506.129 309.297 cv
506.192 308.906 505.954 308.771 506.161 308.305 cv
506.247 308.117 li
506.59 307.992 li
506.247 308.117 li
506.293 308.035 li
506.353 308.008 li
506.293 308.031 li
506.309 308.008 li
506.485 307.914 506.512 307.899 506.478 307.899 cv
506.407 307.906 li
506.353 307.91 li
506.396 307.813 li
506.45 307.797 li
506.396 307.805 li
506.422 307.766 li
506.461 307.738 506.521 307.711 506.614 307.672 cv
506.633 307.653 li
506.622 307.653 506.521 307.695 506.43 307.719 cv
506.387 307.504 li
506.387 307.5 506.528 307.449 506.708 307.387 cv
506.903 307.344 li
506.633 307.435 506.598 307.457 506.653 307.457 cv
506.829 307.435 li
507.126 307.324 li
507.09 307.324 506.95 307.367 506.836 307.41 cv
507.024 307.332 507.11 307.289 507.141 307.278 cv
507.192 307.258 li
507.34 307.211 507.543 307.168 507.762 307.121 cv
507.887 307.086 508.024 307.055 508.153 307.012 cv
508.305 306.973 li
508.274 306.988 li
508.106 307.063 li
508.021 307.103 li
508.001 307.121 li
508.008 307.121 508.09 307.09 508.196 307.055 cv
508.329 307.008 508.497 306.942 508.622 306.896 cv
508.711 306.859 li
508.618 306.906 li
508.559 306.922 li
508.454 306.973 508.348 307.012 508.356 307.012 cv
508.379 307.008 li
508.606 306.918 li
508.79 306.844 li
508.622 306.922 li
508.598 306.942 li
508.497 306.984 508.411 307.024 508.422 307.024 cv
508.442 307.016 li
508.579 306.957 li
508.774 306.875 509.094 306.715 509.251 306.646 cv
509.262 306.629 li
509.266 306.629 li
509.333 306.598 li
509.446 306.539 li
509.348 306.586 li
509.622 306.442 509.989 306.195 510.012 306.164 cv
510.043 306.199 li
510.223 306.145 li
510.399 306.09 li
510.45 306.09 510.426 306.153 510.223 306.359 cv
510.196 306.41 510.282 306.352 510.176 306.461 cv
510.11 306.567 li
510.231 306.484 li
510.348 306.395 li
510.379 306.395 510.243 306.586 509.571 307.344 cv
509.122 307.891 508.997 308.098 509.032 308.098 cv
509.079 308.098 509.309 307.863 509.516 307.555 cv
508.856 308.504 509.567 307.649 508.301 309.426 cv
508.196 309.543 506.719 311.731 505.938 312.422 cv
506.603 308.021 mo
506.391 308.141 506.223 308.258 506.262 308.258 cv
506.36 308.215 li
506.583 308.086 506.68 308.012 506.641 308.012 cv
506.603 308.021 li
506.766 307.93 506.942 307.824 507.059 307.766 cv
507.11 307.728 li
507.059 307.766 li
506.942 307.824 506.766 307.93 506.603 308.021 cv
506.547 308.039 506.461 308.086 506.313 308.149 cv
506.461 308.086 506.547 308.039 506.603 308.021 cv
506.473 307.797 mo
506.422 307.883 li
506.606 307.797 506.629 307.778 506.598 307.778 cv
506.543 307.781 li
506.54 307.778 li
506.7 307.703 li
506.911 307.598 li
506.7 307.703 li
506.478 307.793 li
506.473 307.793 li
506.473 307.797 li
506.469 307.797 li
506.473 307.797 li
cp
507.004 307.746 mo
506.872 307.813 506.829 307.836 506.829 307.84 cv
506.829 307.836 506.872 307.813 507.004 307.746 cv
507.708 307.156 mo
507.528 307.242 li
507.708 307.156 li
cp
506.493 307.785 mo
506.54 307.778 li
506.543 307.781 li
506.528 307.785 li
506.493 307.785 li
cp
509.516 307.555 mo
509.583 307.469 li
509.516 307.555 li
506.793 307.435 mo
506.836 307.41 li
506.793 307.435 li
506.696 307.391 mo
506.751 307.375 li
506.708 307.387 li
506.696 307.391 li
cp
506.751 307.375 mo
506.864 307.34 506.981 307.31 507.094 307.285 cv
507.141 307.278 li
507.004 307.313 506.853 307.344 506.751 307.375 cv
507.141 307.278 mo
507.153 307.271 li
507.141 307.278 li
508.711 306.859 mo
508.771 306.84 li
508.766 306.84 li
508.711 306.859 li
508.79 306.844 mo
508.829 306.828 li
508.809 306.836 li
508.79 306.844 li
508.978 306.754 mo
509.103 306.703 509.215 306.653 509.301 306.613 cv
509.29 306.617 li
509.204 306.66 509.079 306.715 508.978 306.754 cv
509.247 306.646 mo
509.29 306.617 li
509.305 306.613 li
509.301 306.613 li
509.348 306.586 li
509.325 306.598 li
509.333 306.594 li
509.333 306.598 li
509.317 306.606 li
509.266 306.629 li
509.251 306.646 li
509.247 306.646 li
510.012 306.164 mo
510.016 306.164 li
510.012 306.164 li
f
506.423 307.883 mo
506.474 307.797 li
506.474 307.793 li
506.478 307.793 li
506.492 307.785 li
506.527 307.785 li
506.543 307.781 li
506.599 307.778 li
506.63 307.778 506.606 307.797 506.423 307.883 cv
.02 .96 .9 0 cmyk
f
302.651 245.161 mo
302.403 245.125 li
302.538 244.977 li
302.63 245.07 302.743 245.161 302.651 245.161 cv
0 .72 .78 0 cmyk
f
grestore
302.244 245.29 mo
302.275 245.345 li
302.268 245.27 li
302.244 245.29 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
302.215 245.641 mo
302.194 245.539 302.221 245.496 302.29 245.477 cv
302.215 245.641 li
cp
f
302.502 245.484 mo
302.29 245.477 li
302.275 245.344 li
302.318 245.411 302.411 245.458 302.502 245.484 cv
f
grestore
302.737 245.54 mo
302.502 245.485 li
302.737 245.54 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
304.311 247.907 mo
304.149 247.907 303.725 247.316 303.657 247.118 cv
303.69 247.083 li
303.909 247.118 li
304.118 247.157 li
304.151 247.118 li
304.219 246.993 304.038 246.73 303.967 246.52 cv
303.973 246.489 li
304.188 246.566 li
304.381 246.657 li
304.383 246.648 li
304.377 246.402 303.77 245.859 304 245.833 cv
304.409 245.734 li
304.233 245.887 li
304.286 246.219 304.409 246.579 304.483 246.915 cv
304.43 247.243 304.461 247.52 304.36 247.859 cv
304.311 247.907 li
f
303.764 244.59 mo
303.461 244.481 li
303.414 244.301 303.364 244.113 303.61 244.113 cv
303.809 244.141 li
303.688 243.938 li
303.787 243.938 303.953 244.047 304.104 244.137 cv
304.067 244.293 303.949 244.395 303.646 244.395 cv
303.542 244.395 li
303.68 244.414 303.785 244.5 303.764 244.59 cv
f
grestore
304.104 244.137 mo
304.152 244.153 li
304.134 244.016 li
304.12 244.012 li
304.104 244.137 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
295.452 262.407 mo
294.837 262.407 294.237 262.313 293.85 262.02 cv
293.774 261.384 293.411 260.055 294.04 259.434 cv
295.794 257.884 295.204 256.379 296.356 255.016 cv
296.893 254.341 297.458 253.716 297.874 253.004 cv
298.645 251.719 299.114 250.5 300.104 249.407 cv
300.544 248.911 li
300.77 249.254 li
300.544 248.911 li
300.762 248.652 li
300.831 248.652 li
300.77 248.648 li
300.823 248.594 li
300.973 248.614 li
301.12 248.614 301.097 248.516 301.073 248.411 cv
301.065 248.316 li
301.339 247.98 li
301.376 248.023 li
301.366 247.954 li
301.489 247.809 li
301.737 247.821 li
301.829 247.813 301.706 247.739 301.618 247.652 cv
301.89 247.316 302.13 246.958 302.345 246.548 cv
302.415 246.548 li
302.559 246.548 302.893 246.555 303.13 246.629 cv
303.122 246.743 li
303.175 246.762 li
303.259 247.157 303.387 247.591 303.569 248.009 cv
303.651 248.176 li
303.53 248.309 li
303.13 248.418 li
302.903 248.466 303.538 248.966 303.569 249.208 cv
303.567 249.219 li
303.366 249.141 li
303.155 249.075 li
303.151 249.105 li
303.243 249.325 303.44 249.559 303.372 249.688 cv
303.335 249.719 li
303.13 249.696 li
302.934 249.673 li
302.887 249.719 li
302.966 249.902 303.425 250.454 303.593 250.454 cv
303.645 250.411 li
303.712 250.063 303.657 249.793 303.696 249.473 cv
303.817 249.836 303.893 250.184 303.741 250.48 cv
303.651 250.665 303.243 250.786 303.222 251.055 cv
303.341 251.504 303.733 252.063 303.593 252.438 cv
302.759 253.798 303.302 255.336 302.124 256.441 cv
302.016 256.696 302.071 256.941 301.86 257.125 cv
300.973 257.941 302.835 259.109 300.315 259.591 cv
298.952 259.911 299.204 260.634 299.737 260.634 cv
299.831 260.634 299.938 260.605 300.044 260.555 cv
298.903 261.282 300.032 261.54 297.792 262.098 cv
297.692 262.105 296.546 262.407 295.452 262.407 cv
300.393 249.395 mo
300.218 249.395 300.124 249.434 300.249 249.586 cv
300.405 249.594 li
300.632 249.594 300.729 249.527 300.688 249.415 cv
300.884 249.441 301.097 249.489 301.239 249.493 cv
301.286 249.5 li
301.311 249.493 li
301.286 249.5 li
301.239 249.493 li
301.097 249.489 300.884 249.441 300.688 249.415 cv
300.657 249.348 300.581 249.273 300.452 249.18 cv
300.581 249.273 300.657 249.348 300.688 249.415 cv
300.581 249.402 300.477 249.395 300.393 249.395 cv
301.179 249.23 mo
301.313 249.266 li
301.179 249.23 li
301.132 249.223 mo
301.097 249.243 li
301.132 249.223 li
301.384 248.055 mo
301.141 248.329 li
301.302 248.355 li
301.425 248.355 301.417 248.273 301.395 248.18 cv
301.403 248.157 li
301.391 248.165 li
301.39 248.157 li
301.384 248.066 li
301.403 248.157 li
301.61 248.148 li
301.845 248.191 li
301.61 248.148 li
301.376 248.04 li
301.384 248.055 li
cp
303.235 247.673 mo
302.956 247.743 li
303.235 247.673 li
cp
302.647 246.743 mo
302.372 246.743 302.438 246.93 302.503 247.118 cv
302.813 247.208 li
302.825 247.122 302.71 247.043 302.565 247.027 cv
302.589 247.027 li
302.962 247.027 303.089 246.918 303.122 246.743 cv
302.972 246.668 302.796 246.566 302.7 246.566 cv
302.829 246.762 li
302.647 246.743 li
300.044 260.555 mo
300.173 260.473 li
300.044 260.555 li
302.565 247.027 mo
302.516 247.023 li
302.534 247.023 li
302.565 247.027 li
.02 .96 .9 0 cmyk
f
301.301 248.355 mo
301.142 248.329 li
301.383 248.055 li
301.383 248.067 li
301.389 248.157 li
301.392 248.165 li
301.396 248.18 li
301.417 248.274 301.424 248.355 301.301 248.355 cv
0 .72 .78 0 cmyk
f
350.59 209.887 mo
350.469 209.856 350.333 209.821 350.399 209.821 cv
350.543 209.821 li
350.635 209.821 li
350.59 209.887 li
cp
f
grestore
350.672 209.762 mo
350.678 209.758 li
350.629 209.73 li
350.672 209.762 li
cp
f
350.544 209.676 mo
350.528 209.61 li
350.544 209.676 li
cp
f
350.362 209.676 mo
350.629 209.73 li
350.544 209.676 li
350.362 209.676 li
cp
f
350.362 209.676 mo
350.135 209.649 li
350.362 209.676 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
348.592 209.719 mo
348.667 209.61 li
347.971 208.981 li
347.881 208.75 347.822 208.535 347.829 208.266 cv
347.874 208.238 li
348.033 208.238 348.555 208.68 348.678 208.789 cv
348.652 208.813 li
348.458 208.801 li
348.25 208.781 li
348.215 208.813 li
348.168 208.906 348.442 209.055 348.603 209.192 cv
348.604 209.207 li
348.381 209.172 li
348.18 209.141 li
348.178 209.149 li
348.297 209.317 349.084 209.559 348.902 209.602 cv
348.592 209.719 li
cp
f
349.667 210.426 mo
349.614 210.34 349.683 210.254 350.083 210.207 cv
349.943 210.215 li
349.841 210.215 349.749 210.199 349.728 210.172 cv
350.054 210.164 li
350.22 210.246 350.394 210.305 349.925 210.36 cv
350.129 210.403 li
350.038 210.426 349.838 210.414 349.667 210.426 cv
f
grestore
349.614 210.426 mo
349.698 210.469 li
349.711 210.461 li
349.666 210.426 li
349.614 210.426 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
356.045 209.954 mo
355.922 209.954 355.801 209.879 355.693 209.648 cv
355.027 208.208 354.611 209.047 353.99 208.504 cv
353.629 208.219 353.274 208.056 352.958 208.023 cv
352.779 208.016 li
352.236 208.016 351.926 208.266 351.331 208.301 cv
351.051 208.379 li
350.909 208.418 li
350.854 208.398 li
350.899 208.426 li
350.861 208.434 li
350.754 208.367 350.697 208.349 350.672 208.349 cv
350.679 208.434 li
350.693 208.492 li
350.506 208.579 li
350.461 208.531 li
350.499 208.586 li
350.438 208.629 li
350.22 208.57 li
350.202 208.566 li
350.37 208.695 li
350.243 208.829 350.136 208.992 350.077 209.176 cv
350.077 209.172 349.644 209.141 349.318 209.09 cv
349.295 209.023 li
349.463 209.074 349.652 209.133 349.743 209.133 cv
349.56 209.023 li
349.667 209.047 349.74 209.056 349.792 209.056 cv
349.967 209.056 349.857 208.961 349.756 208.849 cv
349.445 208.773 li
349.461 208.82 349.59 208.879 349.728 208.898 cv
349.54 208.887 li
349.331 208.887 349.277 208.949 349.295 209.023 cv
349.243 209.012 li
349.047 208.781 348.812 208.492 348.554 208.172 cv
349.185 208.415 li
348.554 208.172 li
348.442 208.031 li
348.531 207.938 li
348.874 207.898 li
348.881 207.898 li
349.049 207.898 348.396 207.406 348.381 207.208 cv
348.381 207.199 li
348.57 207.301 li
348.661 207.344 348.758 207.395 348.777 207.395 cv
348.774 207.375 li
348.69 207.199 348.525 206.965 348.603 206.883 cv
348.606 206.852 li
348.642 206.852 348.735 206.898 348.827 206.934 cv
348.918 206.974 349.011 207.012 349.042 207.012 cv
349.047 206.992 li
348.97 206.829 348.615 206.184 348.476 206.184 cv
348.442 206.204 li
348.318 206.484 348.334 206.73 348.274 206.974 cv
348.179 206.652 348.168 206.336 348.356 206.117 cv
348.488 205.977 348.874 206.012 348.945 205.781 cv
348.933 205.344 348.827 204.758 349.136 204.531 cv
350.168 203.974 350.847 202.977 351.842 202.977 cv
352.013 202.977 352.195 203.004 352.39 203.07 cv
352.551 203.066 352.676 202.984 352.815 202.984 cv
352.963 203.02 li
353.188 203.079 li
353.37 203.079 353.538 202.977 353.706 202.875 cv
353.868 202.77 354.022 202.668 354.187 202.668 cv
354.435 202.668 354.697 202.91 355.004 203.766 cv
355.206 204.406 355.411 204.637 355.549 204.637 cv
355.717 204.637 355.79 204.293 355.636 203.915 cv
356.156 205.035 356.313 203.922 356.549 206.059 cv
356.586 206.211 356.706 208.781 356.456 209.801 cv
356.349 209.844 356.197 209.954 356.045 209.954 cv
350.243 208.398 mo
350.461 208.531 li
350.454 208.52 li
350.629 208.454 li
350.519 208.395 350.456 208.372 350.429 208.372 cv
350.424 208.445 li
350.42 208.454 li
350.243 208.398 li
cp
350.838 208.09 mo
351.097 208.266 li
350.838 208.09 li
350.892 208.031 mo
351.062 208.141 351.206 208.25 351.25 208.25 cv
351.209 208.133 li
351.058 208.023 350.952 207.969 350.906 207.969 cv
350.892 208.031 li
350.388 207.711 mo
350.482 207.836 li
350.388 207.711 li
350.394 207.708 mo
350.431 207.727 li
350.394 207.708 li
349.774 208.906 mo
349.728 208.898 li
349.774 208.906 li
350.452 208.52 mo
350.42 208.454 li
350.424 208.445 li
350.438 208.461 li
350.452 208.52 li
cp
355.636 203.915 mo
355.597 203.82 li
355.636 203.915 li
.02 .96 .9 0 cmyk
f
350.452 208.52 mo
350.452 208.52 li
350.438 208.461 li
350.425 208.446 li
350.429 208.372 li
350.456 208.372 350.518 208.395 350.63 208.454 cv
350.454 208.52 li
350.452 208.52 li
cp
0 .72 .78 0 cmyk
f
308.469 333.145 mo
308.43 333.027 li
308.629 332.954 li
308.627 332.977 li
308.469 333.145 li
cp
f
grestore
308.506 333.266 mo
308.56 333.255 li
308.5 333.242 li
308.506 333.266 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
308.749 333.336 mo
308.657 333.336 308.641 333.31 308.667 333.267 cv
308.749 333.336 li
cp
f
grestore
308.565 333.255 mo
308.56 333.255 li
308.667 333.266 li
308.792 333.122 li
308.565 333.255 li
cp
.02 .96 .9 0 cmyk
f
308.792 333.121 mo
308.969 332.977 li
308.792 333.121 li
cp
0 .72 .78 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
310.655 332.633 mo
310.608 332.633 310.706 332.543 310.805 332.457 cv
310.901 332.379 310.997 332.297 310.964 332.297 cv
310.946 332.301 li
310.827 332.271 li
310.712 332.271 310.54 332.297 310.405 332.305 cv
310.387 332.31 li
310.346 332.31 310.444 332.242 310.548 332.172 cv
310.649 332.106 310.757 332.043 310.739 332.043 cv
310.737 332.043 li
310.692 332.039 li
310.598 332.039 310.438 332.082 310.292 332.121 cv
310.132 332.168 309.983 332.211 309.915 332.211 cv
309.887 332.172 li
310.04 331.879 li
310.065 332.021 li
310.995 332.031 li
311.206 332.129 311.432 332.164 311.63 332.305 cv
311.743 332.406 310.874 332.625 310.667 332.629 cv
310.655 332.633 li
f
308.452 332.352 mo
308.305 332.352 308.225 332.305 308.501 332.055 cv
308.286 332.118 li
308.339 332.051 308.512 331.95 308.649 331.852 cv
308.765 331.911 308.778 332.02 308.536 332.286 cv
308.788 332.145 li
308.817 332.148 li
308.565 332.34 li
308.452 332.352 li
.02 .96 .9 0 cmyk
f
grestore
308.575 331.824 mo
308.649 331.852 li
308.696 331.824 li
308.588 331.82 li
308.575 331.824 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
311.446 343.43 mo
311.212 343.192 310.593 342.801 310.887 342.239 cv
311.774 340.692 310.608 340.438 310.79 339.336 cv
310.882 338.786 310.887 338.282 310.805 337.809 cv
310.624 336.938 310.173 336.332 310.095 335.453 cv
310.034 335.059 li
310.413 334.989 li
310.034 335.059 li
310.011 334.86 li
310.048 334.817 li
310.003 334.855 li
310.003 334.801 li
310.245 334.621 310.141 334.617 310.034 334.614 cv
309.964 334.59 li
309.905 334.34 li
309.964 334.321 li
309.989 334.325 li
310.028 334.539 li
310.251 334.379 310.186 334.355 310.089 334.352 cv
310.071 334.328 li
310.2 334.196 li
310.374 334.051 li
310.2 334.196 li
309.973 334.321 li
309.964 334.321 li
309.905 334.317 li
309.876 334.211 li
310.034 334.047 li
310.038 334.02 li
309.839 334.094 li
309.761 333.852 309.647 333.621 309.481 333.411 cv
309.481 333.411 309.755 333.086 309.995 332.895 cv
310.079 332.926 li
309.934 333.008 309.761 333.105 309.7 333.176 cv
309.921 333.121 li
309.639 333.371 309.731 333.411 309.886 333.411 cv
309.989 333.411 li
310.237 333.215 li
310.208 333.207 li
309.954 333.352 li
310.19 333.094 310.188 332.977 310.079 332.926 cv
310.124 332.895 li
310.268 332.898 310.425 332.907 310.589 332.907 cv
310.803 332.907 311.03 332.895 311.266 332.871 cv
311.44 332.86 li
311.464 332.965 li
311.313 333.262 li
311.341 333.297 li
311.403 333.297 311.552 333.258 311.706 333.215 cv
311.852 333.176 312.007 333.137 312.106 333.137 cv
312.159 333.145 li
312.163 333.137 li
312.178 333.137 312.071 333.203 311.97 333.27 cv
311.866 333.336 311.77 333.403 311.809 333.403 cv
311.825 333.403 li
311.958 333.398 312.132 333.364 312.247 333.364 cv
312.372 333.403 li
312.386 333.398 li
312.417 333.398 312.323 333.485 312.22 333.567 cv
312.122 333.648 312.022 333.73 312.069 333.73 cv
312.083 333.73 li
312.296 333.723 313.157 333.523 313.052 333.418 cv
312.845 333.27 312.63 333.235 312.423 333.129 cv
312.755 333.137 313.044 333.188 313.163 333.364 cv
313.239 333.477 313.065 333.789 313.249 333.871 cv
313.647 333.918 314.284 333.836 314.427 334.067 cv
314.807 335.023 316.151 335.286 315.932 336.485 cv
315.985 336.657 316.169 336.739 316.114 336.938 cv
315.903 337.762 317.942 337.383 316.13 339.004 cv
315.423 339.645 315.489 339.965 315.757 339.965 cv
315.909 339.965 316.13 339.855 316.303 339.648 cv
316.069 339.977 316.022 340.157 316.009 340.289 cv
314.868 340.528 313.833 341.297 313.755 341.379 cv
312.999 342.071 312.827 342.48 312.839 342.895 cv
312.335 343.161 311.833 343.371 311.446 343.43 cv
310.471 335.09 mo
310.264 335.258 310.089 335.418 310.218 335.418 cv
310.305 335.403 li
310.534 335.207 310.598 335.09 310.483 335.09 cv
310.471 335.09 li
310.616 334.969 310.782 334.84 310.882 334.754 cv
310.911 334.723 li
310.882 334.754 li
310.782 334.84 310.616 334.969 310.471 335.09 cv
310.413 335.09 310.305 335.117 310.161 335.184 cv
310.305 335.117 310.413 335.09 310.471 335.09 cv
310.626 334.778 mo
310.626 334.778 li
310.774 334.739 li
310.913 334.696 li
310.768 334.739 li
310.626 334.778 li
310.768 334.645 mo
310.661 334.719 li
310.768 334.645 li
310.819 333.028 mo
310.706 333.23 li
310.819 333.028 li
cp
.02 .96 .9 0 cmyk
f
312.838 342.895 mo
312.827 342.48 312.999 342.071 313.754 341.379 cv
313.833 341.297 314.868 340.527 316.008 340.29 cv
315.983 340.571 316.084 340.684 314.89 341.59 cv
314.81 341.657 313.825 342.372 312.838 342.895 cv
f
316.303 339.648 mo
316.377 339.551 li
316.303 339.648 li
310.067 334.348 mo
310.057 334.348 li
309.992 334.325 li
310.071 334.329 li
310.067 334.348 li
309.926 333.376 mo
309.953 333.352 li
309.926 333.376 li
0 .72 .78 0 cmyk
f
310.028 334.539 mo
309.989 334.324 li
309.989 334.32 li
309.993 334.324 li
310.057 334.349 li
310.067 334.349 li
310.089 334.352 li
310.186 334.355 310.251 334.38 310.028 334.539 cv
f
303.141 313.684 mo
303.129 313.665 li
303.235 313.629 303.301 313.598 303.348 313.582 cv
303.334 313.676 li
303.141 313.684 li
f
grestore
303.302 313.48 mo
303.356 313.496 li
303.366 313.48 li
303.302 313.48 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
303.206 313.453 mo
303.168 313.384 li
303.206 313.453 li
f
grestore
303.038 313.536 mo
303.302 313.48 li
303.205 313.454 li
303.038 313.536 li
cp
f
302.819 313.598 mo
303.039 313.536 li
302.819 313.598 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
301.389 314.152 mo
301.437 314.059 li
300.586 313.949 li
300.141 313.73 li
300.096 313.665 300.769 313.598 301.047 313.598 cv
301.133 313.598 li
301.146 313.598 li
301.187 313.598 301.073 313.648 300.946 313.691 cv
300.815 313.738 300.69 313.785 300.735 313.785 cv
300.748 313.781 li
300.762 313.84 301.049 313.816 301.239 313.84 cv
301.248 313.84 li
301.348 313.84 300.762 313.962 300.83 313.962 cv
300.973 313.969 li
301.063 313.969 301.17 313.969 301.276 313.962 cv
301.373 313.958 301.467 313.949 301.537 313.949 cv
301.639 313.949 301.696 313.958 301.647 313.988 cv
301.389 314.152 li
cp
.02 .96 .9 0 cmyk
f
302.651 314.438 mo
302.569 314.372 302.614 314.297 302.979 314.168 cv
302.698 314.215 li
302.624 314.204 li
302.932 314.125 li
303.122 314.168 303.319 314.204 302.878 314.336 cv
303.098 314.348 li
303.024 314.38 302.819 314.411 302.651 314.438 cv
0 .72 .78 0 cmyk
f
grestore
302.598 314.442 mo
302.7 314.469 li
302.713 314.469 li
302.651 314.438 li
302.598 314.442 li
cp
.02 .96 .9 0 cmyk
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
301.852 313.5 mo
301.789 313.478 li
301.957 313.431 302.155 313.392 302.231 313.349 cv
302.01 313.355 li
302.442 313.188 302.252 313.168 302.063 313.152 cv
301.77 313.263 li
301.805 313.267 li
301.862 313.267 301.965 313.246 302.057 313.195 cv
301.75 313.355 301.719 313.426 301.789 313.478 cv
301.737 313.488 li
301.442 313.442 301.086 313.406 300.711 313.406 cv
301.352 313.199 li
300.711 313.406 li
300.543 313.406 li
300.565 313.34 li
300.823 313.152 li
300.782 313.121 li
300.711 313.121 300.573 313.146 300.43 313.16 cv
300.272 313.181 300.114 313.195 300.03 313.195 cv
299.999 313.195 li
299.961 313.195 300.081 313.152 300.204 313.113 cv
300.313 313.078 300.424 313.035 300.411 313.035 cv
300.391 313.035 li
300.323 313.035 li
300.172 313.035 li
300.034 313.035 li
299.885 313.021 li
299.875 313.021 li
299.825 313.021 299.946 312.961 300.067 312.902 cv
300.174 312.853 300.291 312.801 300.264 312.801 cv
300.249 312.801 li
300.059 312.801 299.19 312.926 299.264 312.996 cv
299.749 313.195 li
299.446 313.181 299.19 313.148 299.135 313.023 cv
299.106 312.953 299.362 312.754 299.225 312.695 cv
299.114 312.685 298.977 312.685 298.844 312.685 cv
298.547 312.685 298.243 312.685 298.2 312.59 cv
298.161 311.969 296.905 311.648 297.426 310.758 cv
297.42 310.621 297.268 310.543 297.375 310.392 cv
297.797 309.767 295.772 309.82 297.952 308.734 cv
298.872 308.273 298.856 308.021 298.553 308.021 cv
298.407 308.021 298.192 308.082 297.985 308.207 cv
298.997 307.521 297.838 307.699 299.952 306.922 cv
300.098 306.867 302.682 306.031 303.788 305.992 cv
303.915 306.168 304.332 306.426 303.86 306.773 cv
302.524 307.767 303.454 307.965 303 308.742 cv
302.764 309.138 302.624 309.508 302.575 309.859 cv
302.516 310.478 302.79 310.978 302.614 311.646 cv
302.555 311.945 li
302.532 312.099 li
302.479 312.125 li
302.524 312.103 li
302.524 312.129 li
302.237 312.254 302.334 312.271 302.426 312.277 cv
302.493 312.297 li
302.473 312.488 li
302.411 312.488 li
302.463 312.504 li
302.463 312.582 li
302.426 312.605 302.358 312.638 302.258 312.685 cv
302.254 312.699 li
302.456 312.668 li
302.442 312.853 302.456 313.035 302.524 313.219 cv
302.524 313.219 302.155 313.406 301.852 313.5 cv
302.301 312.461 mo
302.313 312.474 li
302.155 312.57 li
302.403 312.488 li
302.411 312.488 li
302.389 312.488 li
302.418 312.328 li
302.155 312.438 302.215 312.449 302.301 312.461 cv
301.618 312.16 mo
301.625 312.16 li
301.77 312.138 li
301.918 312.113 li
301.93 312.121 li
301.918 312.113 li
301.77 312.138 li
301.625 312.16 li
301.618 312.16 li
301.659 312.138 mo
301.631 312.152 li
301.659 312.138 li
302.473 311.849 mo
302.182 311.974 li
302.473 311.849 li
302.471 311.668 mo
302.397 311.672 li
302.124 311.82 302.034 311.902 302.155 311.902 cv
302.407 311.781 302.614 311.668 302.471 311.668 cv
302.057 313.195 mo
302.11 313.176 li
302.057 313.195 li
302.372 312.488 mo
302.313 312.474 li
302.321 312.465 li
302.329 312.465 li
302.372 312.488 li
cp
297.887 308.273 mo
297.985 308.207 li
297.887 308.273 li
f
302.389 312.488 mo
302.371 312.488 li
302.328 312.466 li
302.321 312.466 li
302.301 312.462 li
302.215 312.449 302.155 312.438 302.418 312.328 cv
302.389 312.488 li
cp
0 .72 .78 0 cmyk
f
300.522 322.703 mo
300.491 322.677 li
300.458 322.484 li
300.459 322.5 li
300.491 322.599 300.504 322.664 300.522 322.703 cv
300.458 322.484 mo
300.458 322.477 li
300.458 322.484 li
f
grestore
300.55 322.738 mo
300.55 322.727 li
300.543 322.676 li
300.55 322.738 li
cp
0 .72 .78 0 cmyk
f
300.533 322.598 mo
300.549 322.566 li
300.533 322.598 li
cp
f
300.543 322.676 mo
300.533 322.598 li
300.484 322.438 li
300.543 322.676 li
cp
f
300.485 322.438 mo
300.43 322.224 li
300.485 322.438 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
300.155 321.113 mo
300.149 321.087 li
300.075 320.824 li
300.098 320.876 li
299.952 320.13 li
299.932 320.027 299.893 319.859 299.872 319.77 cv
299.874 319.77 300.075 320.523 300.112 320.691 cv
300.114 320.707 li
300.112 320.707 300.081 320.595 300.053 320.484 cv
300.02 320.391 299.995 320.289 299.995 320.289 cv
299.999 320.301 li
299.999 320.309 300.059 320.578 300.098 320.742 cv
300.102 320.759 li
300.1 320.759 300.069 320.656 300.044 320.551 cv
300.02 320.457 li
300.069 320.676 300.159 321.113 300.155 321.113 cv
f
300.325 322.43 mo
300.315 322.43 300.298 322.36 300.255 322.161 cv
300.286 322.364 li
300.265 322.282 300.231 322.102 300.204 321.93 cv
300.212 321.911 li
300.225 321.911 300.253 322.004 300.315 322.278 cv
300.286 322.145 300.255 321.98 300.255 321.95 cv
300.315 322.239 li
300.325 322.332 300.333 322.43 300.325 322.43 cv
f
grestore
300.204 321.977 mo
300.204 321.93 li
300.194 321.883 li
300.204 321.977 li
cp
300.204 321.984 mo
300.204 321.977 li
300.204 321.984 li
cp
f
gsave
0 612 mo
792 612 li
792 0 li
0 0 li
0 612 li
cp
clp
302.961 325.016 mo
302.945 325.016 302.902 324.95 302.804 324.746 cv
302.154 323.355 302.39 324.137 302.025 323.52 cv
301.834 323.219 301.685 322.993 301.563 322.855 cv
301.365 322.625 301.284 322.739 300.974 322.43 cv
300.854 322.305 li
300.801 322.239 li
300.786 322.227 li
300.729 322.078 300.706 322.036 300.699 322.036 cv
300.717 322.11 li
300.726 322.157 li
300.656 322.09 li
300.654 322.078 li
300.625 322.051 li
300.611 322.02 300.586 321.953 300.549 321.855 cv
300.543 321.836 li
300.543 321.836 300.572 321.942 300.604 322.036 cv
300.476 322.012 li
300.476 322.012 300.354 321.641 300.277 321.352 cv
300.271 321.305 li
300.308 321.465 300.361 321.641 300.383 321.719 cv
300.338 321.528 li
300.398 321.715 300.422 321.782 300.431 321.782 cv
300.44 321.782 300.418 321.692 300.398 321.602 cv
300.308 321.321 li
300.315 321.352 300.361 321.508 300.398 321.641 cv
300.312 321.371 300.277 321.282 300.272 321.282 cv
300.271 321.305 li
300.254 321.254 li
300.211 320.993 300.135 320.684 300.036 320.328 cv
300.226 320.946 li
300.036 320.328 li
299.999 320.188 li
300.017 320.223 li
300.104 320.48 li
300.111 320.508 li
300.111 320.508 300.029 320.243 299.961 320.028 cv
300.015 320.161 li
300.004 320.148 li
299.959 319.993 li
300.008 320.121 li
300.004 320.102 li
299.988 320.051 299.947 319.938 299.9 319.813 cv
299.872 319.727 li
299.861 319.707 li
299.799 319.551 li
299.801 319.555 li
299.799 319.543 li
299.728 319.36 299.67 319.207 299.672 319.207 cv
299.738 319.368 li
299.681 319.207 299.633 319.102 299.629 319.102 cv
299.699 319.305 li
299.688 319.286 li
299.581 319.012 299.353 318.536 299.315 318.5 cv
299.334 318.508 li
299.374 318.508 299.379 318.395 299.394 318.286 cv
299.406 318.18 299.429 318.075 299.493 318.075 cv
299.545 318.075 299.622 318.137 299.743 318.309 cv
299.752 318.309 li
299.771 318.301 li
299.792 318.293 li
299.861 318.36 li
299.947 318.45 li
299.967 318.301 li
299.995 318.141 li
300.042 318.141 300.176 318.375 300.56 319.219 cv
300.822 319.813 300.945 320.032 300.972 320.032 cv
301.002 320.032 300.892 319.707 300.729 319.36 cv
301.226 320.383 300.854 319.34 301.656 321.348 cv
301.715 321.48 302.646 323.914 302.972 324.871 cv
302.961 325.016 li
300.771 321.969 mo
300.851 322.168 300.924 322.34 300.935 322.34 cv
300.909 322.23 li
300.815 322.036 300.763 321.93 300.758 321.93 cv
300.771 321.969 li
300.749 321.977 mo
300.749 321.977 300.831 322.161 300.868 322.258 cv
300.831 322.161 300.749 321.977 300.749 321.977 cv
300.627 321.95 mo
300.635 321.969 li
300.642 322.02 li
300.693 322.09 li
300.635 321.926 li
300.618 321.895 li
300.627 321.95 li
300.625 321.953 li
300.565 321.801 li
300.642 322.036 li
300.625 321.953 li
300.627 321.95 li
cp
300.638 321.719 mo
300.638 321.719 li
300.586 321.582 li
300.538 321.442 li
300.586 321.582 li
300.638 321.719 li
300.54 321.442 mo
300.556 321.477 li
300.54 321.442 li
299.961 320.028 mo
299.938 319.961 li
299.906 319.86 299.872 319.762 299.875 319.762 cv
299.877 319.762 li
299.894 319.805 299.922 319.911 299.961 320.028 cv
299.959 319.993 mo
299.933 319.911 li
299.894 319.805 299.857 319.707 299.861 319.707 cv
299.9 319.813 li
299.959 319.993 li
300.729 319.36 mo
300.688 319.266 li
300.729 319.36 li
299.315 318.5 mo
299.313 318.5 li
299.315 318.5 li
cp
.02 .96 .9 0 cmyk
f
300.694 322.09 mo
300.641 322.021 li
300.635 321.969 li
300.628 321.949 li
300.618 321.896 li
300.635 321.926 li
300.694 322.09 li
f
161.512 249.012 mo
152.867 249.461 145.789 263.879 145.789 263.879 cv
145.205 269.383 145.785 295.262 142.877 300.77 cv
139.965 306.278 133.557 339.313 132.391 343.168 cv
131.231 347.024 131.228 353.625 128.317 358.586 cv
125.405 363.539 120.744 371.797 120.162 377.852 cv
119.58 383.914 120.746 388.309 126.571 392.168 cv
132.391 396.024 137.051 398.227 141.129 392.168 cv
145.205 386.114 147.535 383.36 149.283 374.551 cv
151.03 365.742 150.446 353.625 150.446 349.219 cv
150.446 344.817 152.194 328.301 152.194 324.446 cv
152.194 320.59 152.194 317.285 152.778 313.43 cv
153.36 309.578 153.333 302.024 159.184 301.871 cv
169.958 301.598 180.149 325 181.315 330.504 cv
182.479 336.004 192.379 363.539 194.125 366.84 cv
195.875 370.145 196.455 370.7 202.862 369.594 cv
209.271 368.492 210.432 369.594 214.51 363.539 cv
218.584 357.477 235.478 328.844 243.627 316.188 cv
251.782 303.524 259.353 290.309 262.848 290.309 cv
266.342 290.309 267.942 295.262 268.526 300.215 cv
269.108 305.172 269.823 314.875 270.491 320.453 cv
271.801 331.395 269.258 361.371 269.836 369.047 cv
270.418 376.754 272.746 386.66 277.405 390.516 cv
282.067 394.371 280.321 397.125 287.307 396.578 cv
294.297 396.024 298.955 394.926 302.45 386.114 cv
305.944 377.301 307.11 379.5 305.362 373.45 cv
303.614 367.391 296.043 366.285 296.043 360.239 cv
296.043 354.176 293.86 301.457 291.383 285.352 cv
289.991 276.301 287.305 252.867 287.889 249.012 cv
288.471 245.16 289.637 243.508 287.889 239.653 cv
286.141 235.797 283.233 234.145 278.571 234.145 cv
273.912 234.145 265.76 236.895 264.012 241.856 cv
262.264 246.809 264.01 245.707 261.682 250.114 cv
259.353 254.52 231.399 295.262 225.575 301.871 cv
219.75 308.477 206.938 322.793 206.938 322.793 cv
206.938 322.793 199.369 311.782 193.543 302.422 cv
187.719 293.059 175.491 279.844 173.741 274.891 cv
171.996 269.938 170.248 260.578 170.83 257.821 cv
171.414 255.071 171.996 248.461 161.512 249.012 cv
f
537.152 250.661 mo
528.505 251.118 521.426 265.531 521.426 265.531 cv
520.84 271.036 521.426 296.915 518.516 302.422 cv
515.598 307.93 509.195 340.962 508.032 344.816 cv
506.863 348.673 506.863 355.281 503.954 360.238 cv
501.036 365.191 496.384 373.449 495.802 379.5 cv
495.22 385.563 496.387 389.962 502.204 393.816 cv
508.032 397.673 512.688 399.88 516.762 393.816 cv
520.84 387.766 523.173 385.009 524.915 376.199 cv
526.669 367.391 526.083 355.277 526.083 350.871 cv
526.083 346.47 527.837 329.953 527.837 326.095 cv
527.837 322.242 527.837 318.938 528.415 315.082 cv
529.005 311.23 528.97 303.672 534.82 303.523 cv
545.598 303.247 555.79 326.648 556.954 332.152 cv
558.113 337.66 568.02 365.191 569.762 368.492 cv
571.505 371.798 572.095 372.349 578.497 371.242 cv
584.906 370.145 586.066 371.242 590.145 365.191 cv
594.223 359.13 611.113 330.496 619.266 317.837 cv
627.423 305.172 634.988 291.961 638.484 291.961 cv
641.977 291.961 643.583 296.915 644.165 301.868 cv
644.747 306.824 645.458 316.527 646.13 322.109 cv
647.438 333.044 644.895 363.023 645.473 370.699 cv
646.059 378.406 648.387 388.309 653.048 392.169 cv
657.7 396.023 655.954 398.773 662.95 398.227 cv
669.93 397.673 674.587 396.578 678.087 387.766 cv
681.583 378.953 682.751 381.152 681.001 375.105 cv
679.251 369.048 671.68 367.938 671.68 361.888 cv
671.68 355.828 669.497 303.109 667.023 287 cv
665.63 277.95 662.95 254.52 663.523 250.661 cv
664.113 246.809 665.273 245.161 663.523 241.305 cv
661.781 237.445 658.872 235.797 654.212 235.797 cv
649.551 235.797 641.398 238.555 639.648 243.508 cv
637.898 248.461 639.648 247.359 637.325 251.766 cv
634.988 256.168 607.036 296.915 601.208 303.523 cv
595.387 310.13 582.579 324.445 582.579 324.445 cv
582.579 324.445 575.005 313.43 569.184 304.07 cv
563.355 294.708 551.13 281.497 549.38 276.543 cv
547.63 271.59 545.884 262.23 546.47 259.47 cv
547.051 256.724 547.63 250.113 537.152 250.661 cv
f
468.716 286.176 mo
465.56 287.074 466.532 292.375 466.824 294.852 cv
467.074 296.989 467.414 298.981 470.763 298.703 cv
473.224 298.5 473.817 297.184 473.966 293.614 cv
474.11 290.032 473.672 286.317 472.36 285.762 cv
471.047 285.215 470.177 285.762 468.716 286.176 cv
453.285 297.739 mo
453.871 301.043 458.672 299.637 460.711 297.328 cv
463.621 294.028 461 291.821 459.402 290.309 cv
457.797 288.793 456.453 288.473 453.871 290.172 cv
450.524 292.367 452.703 294.438 453.285 297.739 cv
462.457 277.098 mo
465.078 276.957 467.552 276.676 467.121 274.067 cv
466.685 271.449 465.517 268.149 462.313 268.696 cv
459.11 269.242 455.907 270.625 456.634 273.238 cv
457.367 275.856 459.836 277.231 462.457 277.098 cv
447.606 281.496 mo
447.754 282.875 448.625 283.699 450.81 283.84 cv
453 283.973 453.142 283.012 453.871 281.082 cv
454.599 279.157 453.879 278.516 450.81 278.192 cv
448.195 277.918 447.461 280.117 447.606 281.496 cv
427.985 270.137 mo
431.095 269.336 435.379 269.543 435.961 272.844 cv
436.543 276.153 438.802 275.774 440.556 276.328 cv
442.302 276.871 443.918 274.559 446.032 270.86 cv
447.114 268.946 445.324 271.778 442.992 270.672 cv
440.668 269.574 444.478 268.684 445.888 267.438 cv
449.06 264.649 452.728 264.117 452.728 260.024 cv
452.728 255.071 444.61 254.02 447.524 251.274 cv
450.438 248.516 454.056 252.473 459.806 256.36 cv
461.239 257.328 460.953 257.887 462.716 257.711 cv
468.177 257.172 469.36 256.61 471.692 260.465 cv
474.017 264.321 470.879 266.633 470.879 270.485 cv
470.879 274.336 478.149 276.746 478.735 280.051 cv
479.32 283.363 479.481 288.106 479.481 293.059 cv
479.481 298.016 475.961 300.282 471.888 303.032 cv
467.813 305.789 467.942 304.485 466.195 303.387 cv
464.449 302.285 461.664 303.223 458.168 305.977 cv
454.672 308.731 454.777 313.059 459.267 314.91 cv
462.138 316.098 466.224 311.559 467.384 314.864 cv
468.556 318.168 463.474 323.449 460.563 327.848 cv
457.652 332.25 454.478 331.789 450.399 330.692 cv
448.235 330.106 447.317 327.399 449.099 323.469 cv
450.677 319.989 454.341 317.434 455.157 316.918 cv
456.027 316.367 454.285 310.614 450.724 306.492 cv
447.149 302.356 447.442 298.434 441.798 297.965 cv
437.431 297.602 436.845 303.125 433.353 300.371 cv
429.856 297.617 435.035 295.02 435.614 293.367 cv
436.203 291.715 437.989 289.141 437.402 285.84 cv
436.824 282.528 435.277 281.485 431.399 279.442 cv
428.981 278.176 431.735 278.199 426.496 276.551 cv
421.25 274.899 422.724 274.66 426.216 271.36 cv
426.914 270.59 427.099 270.36 427.985 270.137 cv
0 0 0 0 cmyk
f
1.04 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
468.716 286.176 mo
465.56 287.074 466.532 292.375 466.824 294.852 cv
467.074 296.989 467.414 298.981 470.763 298.703 cv
473.224 298.5 473.817 297.184 473.966 293.614 cv
474.11 290.032 473.672 286.317 472.36 285.762 cv
471.047 285.215 470.177 285.762 468.716 286.176 cv
cp
453.285 297.739 mo
453.871 301.043 458.672 299.637 460.711 297.328 cv
463.621 294.028 461 291.821 459.402 290.309 cv
457.797 288.793 456.453 288.473 453.871 290.172 cv
450.524 292.367 452.703 294.438 453.285 297.739 cv
cp
462.457 277.098 mo
465.078 276.957 467.552 276.676 467.121 274.067 cv
466.685 271.449 465.517 268.149 462.313 268.696 cv
459.11 269.242 455.907 270.625 456.634 273.238 cv
457.367 275.856 459.836 277.231 462.457 277.098 cv
cp
447.606 281.496 mo
447.754 282.875 448.625 283.699 450.81 283.84 cv
453 283.973 453.142 283.012 453.871 281.082 cv
454.599 279.157 453.879 278.516 450.81 278.192 cv
448.195 277.918 447.461 280.117 447.606 281.496 cv
cp
427.985 270.137 mo
431.095 269.336 435.379 269.543 435.961 272.844 cv
436.543 276.153 438.802 275.774 440.556 276.328 cv
442.302 276.871 443.918 274.559 446.032 270.86 cv
447.114 268.946 445.324 271.778 442.992 270.672 cv
440.668 269.574 444.478 268.684 445.888 267.438 cv
449.06 264.649 452.728 264.117 452.728 260.024 cv
452.728 255.071 444.61 254.02 447.524 251.274 cv
450.438 248.516 454.056 252.473 459.806 256.36 cv
461.239 257.328 460.953 257.887 462.716 257.711 cv
468.177 257.172 469.36 256.61 471.692 260.465 cv
474.017 264.321 470.879 266.633 470.879 270.485 cv
470.879 274.336 478.149 276.746 478.735 280.051 cv
479.32 283.363 479.481 288.106 479.481 293.059 cv
479.481 298.016 475.961 300.282 471.888 303.032 cv
467.813 305.789 467.942 304.485 466.195 303.387 cv
464.449 302.285 461.664 303.223 458.168 305.977 cv
454.672 308.731 454.777 313.059 459.267 314.91 cv
462.138 316.098 466.224 311.559 467.384 314.864 cv
468.556 318.168 463.474 323.449 460.563 327.848 cv
457.652 332.25 454.478 331.789 450.399 330.692 cv
448.235 330.106 447.317 327.399 449.099 323.469 cv
450.677 319.989 454.341 317.434 455.157 316.918 cv
456.027 316.367 454.285 310.614 450.724 306.492 cv
447.149 302.356 447.442 298.434 441.798 297.965 cv
437.431 297.602 436.845 303.125 433.353 300.371 cv
429.856 297.617 435.035 295.02 435.614 293.367 cv
436.203 291.715 437.989 289.141 437.402 285.84 cv
436.824 282.528 435.277 281.485 431.399 279.442 cv
428.981 278.176 431.735 278.199 426.496 276.551 cv
421.25 274.899 422.724 274.66 426.216 271.36 cv
426.914 270.59 427.099 270.36 427.985 270.137 cv
cp
@
444.333 164.774 mo
439.966 164.774 441.063 168.899 441.063 171.376 cv
441.063 173.852 439.47 174.575 442.091 173.337 cv
444.712 172.098 448.126 172.204 448.126 170.551 cv
448.126 168.899 446.751 165.626 444.333 164.774 cv
467.813 153.958 mo
467.728 155.262 469.313 156.723 472.813 155.489 cv
476.302 154.247 479.212 156.942 478.345 154.047 cv
477.47 151.161 478.398 154.145 475.341 153.321 cv
472.281 152.493 468.255 147.762 467.813 153.958 cv
444.376 158.45 mo
446.117 161.751 447.746 166.36 450.798 166.77 cv
453.859 167.184 458.333 165.286 458.599 161.501 cv
459.078 154.782 453.896 152.399 455.638 147.864 cv
457.388 143.317 458.642 141.141 461.263 140.313 cv
463.884 139.489 465.501 145.036 468.126 145.45 cv
470.742 145.864 473.72 147.192 475.027 144.262 cv
476.915 140.055 470.353 135.614 474.544 133.348 cv
480.402 130.184 485.095 137.309 488.583 139.38 cv
492.078 141.438 487.294 147.325 489.044 149.805 cv
490.79 152.278 494.273 145.965 496.023 143.903 cv
497.773 141.836 502.798 137.094 505.419 139.98 cv
508.035 142.872 500.501 145.293 502.685 146.532 cv
504.867 147.77 515.398 147.836 515.398 151.559 cv
515.398 155.27 512.255 155.84 506.574 155.84 cv
503.652 155.84 498.813 154.172 494.095 155.247 cv
489.638 156.262 484.747 156.032 481.984 156.825 cv
479.009 157.7 478.359 162.532 475.953 163.797 cv
473.773 164.938 471.13 165.505 468.431 166.876 cv
462.751 169.766 459.246 168.688 456.191 169.926 cv
453.13 171.168 453.837 172.766 450.777 174.825 cv
447.72 176.891 447.552 175.23 441.876 176.883 cv
436.195 178.536 436.609 179.297 435.302 178.055 cv
433.988 176.817 434.695 177.95 436.441 176.715 cv
438.188 175.473 434.656 170.926 435.535 164.735 cv
436.402 158.54 436.395 157.247 440.763 155.176 cv
443.941 154.915 442.63 155.149 444.376 158.45 cv
f
437.712 313.301 mo
436.402 314.532 436.106 317.703 437.853 318.254 cv
439.603 318.805 440.763 318.805 441.789 317.153 cv
442.806 315.496 443.82 314.266 442.363 313.574 cv
440.91 312.887 439.168 311.926 437.712 313.301 cv
f
437.712 313.301 mo
436.402 314.532 436.106 317.703 437.853 318.254 cv
439.603 318.805 440.763 318.805 441.789 317.153 cv
442.806 315.496 443.82 314.266 442.363 313.574 cv
440.91 312.887 439.168 311.926 437.712 313.301 cv
cp
@
502.642 173.027 mo
498.715 170.551 495.219 170.551 490.853 170.137 cv
f
503.954 170.907 mo
501.734 169.301 499.431 168.148 496.57 168.29 cv
495.398 168.348 494.977 169.032 493.806 168.911 cv
493.661 168.898 493.102 168.527 492.884 168.469 cv
492.251 168.301 491.505 168.329 490.852 168.266 cv
488.306 168.036 488.333 171.777 490.852 172.009 cv
492.38 172.145 493.681 171.852 495.208 172.032 cv
494.755 171.786 494.302 171.54 493.852 171.293 cv
495.602 173.805 498.677 173.859 501.333 175.145 cv
504.398 176.622 506.544 172.798 503.954 170.907 cv
f
464.204 180.875 mo
469.88 181.699 473.816 186.656 480.367 187.48 cv
f
463.845 182.113 mo
466.953 183.095 469.392 185.54 472.172 187.152 cv
474.638 188.583 478.039 190.465 480.97 189.536 cv
482.949 188.898 483.039 186.758 481.504 185.641 cv
480.274 184.75 478.867 184.598 477.422 184.129 cv
475.688 183.559 474.07 182.54 472.492 181.668 cv
470.078 180.333 466.978 179.754 464.203 179.583 cv
462.603 179.493 462.442 181.68 463.845 182.113 cv
f
365.491 241.168 mo
368.52 239.258 372.917 240.207 375.975 241.856 cv
379.032 243.508 383.69 248.738 381.653 250.25 cv
379.614 251.766 376.848 249.695 373.21 247.774 cv
369.569 245.852 361.999 243.367 365.491 241.168 cv
f
365.491 241.168 mo
368.52 239.258 372.917 240.207 375.975 241.856 cv
379.032 243.508 383.69 248.738 381.653 250.25 cv
379.614 251.766 376.848 249.695 373.21 247.774 cv
369.569 245.852 361.999 243.367 365.491 241.168 cv
cp
@
428.681 254.105 mo
431.735 252.27 433.778 254.247 435.231 255.758 cv
436.688 257.278 439.457 260.579 437.414 262.087 cv
435.379 263.605 432.758 262.501 431.013 260.434 cv
429.263 258.376 427.078 255.071 428.681 254.105 cv
f
428.681 254.105 mo
431.735 252.27 433.778 254.247 435.231 255.758 cv
436.688 257.278 439.457 260.579 437.414 262.087 cv
435.379 263.605 432.758 262.501 431.013 260.434 cv
429.263 258.376 427.078 255.071 428.681 254.105 cv
cp
@
245.563 426.24 mo
245.063 425.887 243.814 425.574 241.342 426.574 cv
238.87 427.572 238.709 428.664 238.804 429.3 cv
238.856 429.591 240.724 430.066 241.154 432.496 cv
241.489 434.368 239.013 437.584 239.159 438.3 cv
239.319 439.021 241.189 439.02 243.331 437.283 cv
247.89 433.601 249.076 428.724 245.563 426.24 cv
.03 .02 .91 0 cmyk
f
270.01 466.205 mo
269.502 468.9 267.869 471.562 264.937 473.232 cv
261.997 474.894 258.301 475.654 254.465 475.646 cv
252.353 475.644 248.767 475.213 246.974 473.929 cv
245.265 472.709 244.42 470.654 244.488 468.226 cv
244.56 465.791 247.892 465.287 248.738 466.593 cv
249.883 468.354 252.887 469.658 255.206 469.679 cv
257.465 469.697 262.106 469.275 262.206 466.104 cv
262.303 462.929 257.303 461.472 253.245 460.015 cv
249.183 458.554 245.124 455.511 245.822 450.347 cv
246.524 445.183 251.142 440.283 260.244 440.412 cv
270.608 440.562 271.678 448.611 267.644 449.611 cv
263.606 450.611 265.532 446.084 259.342 446.002 cv
255.86 445.968 252.706 447.683 252.402 450.74 cv
251.983 454.979 261.228 456.304 265.288 458.683 cv
268.49 460.564 270.596 463.093 270.01 466.205 cv
f
118.065 431.961 mo
115.194 432.086 112.2 436.176 112.2 437.621 cv
112.2 439.316 111.608 445.57 111.19 447.441 cv
110.788 449.262 109.358 456.859 109.069 457.91 cv
108.78 458.957 108.614 461.231 107.891 462.582 cv
107.169 463.935 106.247 466.133 106.104 467.781 cv
105.961 469.431 107.735 471.363 109.182 472.41 cv
110.631 473.457 111.038 473.414 112.803 472.41 cv
117.053 469.988 115.768 459.777 115.768 458.574 cv
115.768 457.375 116.876 453.438 116.876 452.392 cv
116.876 451.344 117.282 449.349 118.493 449.231 cv
121.053 448.988 121.809 454.478 122.368 455.902 cv
123.311 458.332 125.165 462.289 125.6 463.188 cv
126.036 464.086 126.751 465.836 128.342 465.535 cv
129.936 465.238 131.186 465.441 132.2 463.789 cv
133.215 462.152 137.18 454.375 139.204 450.935 cv
141.231 447.492 142.241 445.106 143.11 445.106 cv
143.979 445.106 144.176 448.25 144.323 449.594 cv
144.467 450.945 144.848 463.306 144.991 465.392 cv
145.137 467.484 145.051 470.508 146.209 471.556 cv
147.37 472.606 147.59 472.949 149.334 472.871 cv
151.698 472.767 154.325 470.224 154.122 467.219 cv
153.936 464.474 152.774 464.156 152.102 462.215 cv
151.557 460.642 151.291 454.57 151.09 452.024 cv
151.006 450.945 150.493 444.728 150.348 442.629 cv
150.202 440.539 149.334 433.806 149.481 432.754 cv
149.624 431.699 149.913 431.258 149.481 430.211 cv
149.045 429.16 148.321 428.711 147.161 428.711 cv
146.004 428.711 143.975 429.461 143.543 430.806 cv
143.108 432.156 142.985 432.349 142.405 433.547 cv
141.825 434.75 129.356 452.813 129.356 452.813 cv
129.356 452.813 124.864 444.742 123.606 439.981 cv
123.243 438.609 120.672 431.844 118.065 431.961 cv
f
307.098 458.344 mo
309.026 456.199 311.293 452.488 311.461 448.031 cv
311.58 444.817 311.042 440.613 308.274 437.805 cv
305.66 435.164 303.153 435.25 300.637 435.414 cv
297.537 435.613 293.891 437.754 291.91 439.703 cv
289.391 442.176 286.973 446.305 286.789 451.09 cv
286.623 455.457 287.209 458.508 289.641 460.903 cv
290.985 462.223 293.412 463.875 297.278 463.621 cv
301.053 463.379 305.167 460.488 307.098 458.344 cv
296.426 470.961 mo
290.356 471.34 286.542 468.844 284.43 466.848 cv
280.606 463.231 279.688 458.625 279.952 452.021 cv
280.239 444.797 284.035 438.563 287.991 434.824 cv
291.106 431.883 296.828 428.653 301.7 428.344 cv
305.655 428.094 309.59 427.961 313.694 431.961 cv
318.042 436.199 318.889 442.555 318.7 447.41 cv
318.438 454.141 314.875 459.75 311.848 462.988 cv
308.817 466.231 302.358 470.586 296.426 470.961 cv
f
328.19 448.969 mo
328.19 448.969 336.014 443.813 338.208 442.426 cv
339.196 441.805 343.477 438.192 345.721 441.867 cv
346.995 443.965 346.376 446.348 344.467 447.41 cv
342.825 448.321 334.67 452.664 333.067 453.766 cv
330.692 455.387 328.583 458.435 328.059 461.93 cv
327.534 465.418 327.399 469.844 327.399 469.844 cv
327.399 469.844 326.081 471.465 323.577 471.582 cv
323.477 471.59 319.68 471.84 320.02 468.594 cv
320.544 463.547 320.745 447.723 320.745 447.723 cv
320.745 447.723 320.536 441.637 323.049 441.43 cv
329.706 440.867 328.19 448.969 328.19 448.969 cv
f
364.235 445.262 mo
359.311 440.297 344.09 457.375 349.905 460.028 cv
355.637 462.649 370.169 451.239 364.235 445.262 cv
373.135 437.41 mo
373.215 439.246 372.534 449.055 372.212 453.578 cv
371.883 458.192 371.954 469.473 365.755 476.821 cv
360.547 482.985 348.686 482.426 345.061 481.867 cv
341.436 481.305 340.251 479.559 340.182 477.813 cv
340.12 476.067 341.569 474.7 342.885 474.7 cv
343.991 474.7 351.335 475.399 356.065 474.203 cv
365.688 471.774 365.161 460.68 365.161 460.68 cv
365.161 460.68 358.835 466.727 349.544 466.91 cv
345.088 466.996 340.153 464.633 340.512 458.942 cv
341.241 447.535 360.087 435.164 373.135 437.41 cv
f
382.032 465.445 mo
384.657 466.563 396.758 458.344 393.302 456.57 cv
389.84 454.798 377.186 463.391 382.032 465.445 cv
401.403 452.328 mo
402.13 456.691 403.7 472.734 398.173 473.145 cv
394.813 473.391 394.751 470.341 394.751 469.091 cv
394.751 467.884 395.014 465.227 395.014 465.227 cv
395.014 465.227 383.481 475.137 377.089 471.333 cv
366.93 465.301 382.065 450.676 391.419 449.751 cv
391.622 449.094 391.52 447.313 388.358 447.227 cv
385.194 447.133 377.897 450.594 375.245 450.087 cv
372.86 449.637 375.239 446.208 376.563 445.169 cv
378.868 443.363 383.544 441.367 389.085 441.367 cv
394.88 441.367 400.036 444.122 401.403 452.328 cv
f
412.677 440.402 mo
409.224 440.105 409.113 443.203 408.228 445.445 cv
407.332 447.691 404.672 459.091 404.274 462.555 cv
403.884 466.008 403.578 471.613 407.431 471.708 cv
411.293 471.801 411.422 467.953 411.985 466.102 cv
414.556 457.695 419 451.617 421.567 450.773 cv
423.617 450.105 423.052 453.855 423.052 459.188 cv
423.052 464.512 422.759 471.145 422.759 471.145 cv
422.759 471.145 422.66 474.605 426.017 474.605 cv
430.466 474.605 430.367 470.313 430.367 470.313 cv
430.367 470.313 429.677 452.645 428.981 449.094 cv
428.427 446.242 427.203 443.109 424.239 443.109 cv
421.274 443.109 413.466 448.626 413.466 448.626 cv
414.652 442.266 li
414.652 442.266 414.849 440.583 412.677 440.402 cv
f
440.649 425.164 mo
437.684 425.273 436.395 429.188 436.501 431.81 cv
436.598 434.422 437.286 437.039 440.055 437.134 cv
443.422 437.246 444.008 434.98 443.911 432.177 cv
443.817 429.453 443.313 425.074 440.649 425.164 cv
f
439.267 441.148 mo
433.43 441.238 431.754 465.54 432.149 467.691 cv
432.543 469.844 433.039 471.52 435.703 471.613 cv
439.56 471.747 440.649 469.184 440.551 466.008 cv
440.454 462.829 440.649 450.215 441.243 446.008 cv
441.625 443.27 442.133 441.102 439.267 441.148 cv
f
463.88 440.402 mo
450.63 440.492 443.712 456.477 442.427 462.828 cv
441.138 469.208 443.91 472.887 448.656 472.833 cv
456.962 472.738 466.945 466.941 467.634 466.38 cv
468.324 465.824 471.992 464.156 471.195 461.895 cv
470.798 460.773 466.548 459.281 463.185 461.238 cv
459.25 463.548 453.005 468.344 448.759 464.891 cv
446.173 462.79 455.177 449.751 461.509 447.872 cv
463.781 447.785 462.691 449.938 462.595 450.962 cv
462.492 451.992 462 453.855 464.177 453.766 cv
467.742 453.613 468.427 450.023 468.427 450.023 cv
468.427 450.023 469.91 444.609 468.031 442.266 cv
466.341 440.165 463.88 440.402 463.88 440.402 cv
f
542.961 465.727 mo
545.591 466.844 557.692 458.625 554.231 456.848 cv
550.771 455.075 538.117 463.672 542.961 465.727 cv
562.336 452.614 mo
563.063 456.973 564.629 473.016 559.106 473.422 cv
555.746 473.676 555.681 470.618 555.681 469.372 cv
555.681 468.165 555.942 465.508 555.942 465.508 cv
555.942 465.508 544.41 475.411 538.017 471.614 cv
527.859 465.586 542.992 450.961 552.349 450.023 cv
552.552 449.375 552.453 447.598 549.285 447.504 cv
546.117 447.411 538.828 450.872 536.177 450.372 cv
533.785 449.918 536.168 446.484 537.492 445.446 cv
539.798 443.637 544.474 441.648 550.009 441.648 cv
555.81 441.648 560.966 444.402 562.336 452.614 cv
f
574.621 449.156 mo
574.621 449.156 582.449 444.001 584.645 442.613 cv
585.634 441.992 589.914 438.38 592.156 442.055 cv
593.431 444.148 592.816 446.54 590.902 447.598 cv
589.259 448.501 581.103 452.855 579.501 453.949 cv
577.13 455.574 575.023 458.626 574.492 462.117 cv
573.966 465.605 573.833 470.027 573.833 470.027 cv
573.833 470.027 572.517 471.648 570.013 471.773 cv
569.91 471.773 566.117 472.027 566.458 468.777 cv
566.978 463.734 567.181 447.91 567.181 447.91 cv
567.181 447.91 566.97 441.833 569.48 441.617 cv
576.142 441.055 574.621 449.156 574.621 449.156 cv
f
603.954 417.594 mo
600.587 417.035 600.294 419.278 599.798 421.34 cv
599.349 423.211 595.648 440.31 594.556 446.853 cv
593.165 455.258 592.602 464.606 592.48 467.039 cv
592.285 470.961 593.376 472.738 595.941 473.021 cv
597.813 473.223 600.587 471.613 600.587 468.25 cv
600.587 466.196 600.099 461.524 600.099 461.146 cv
600.099 460.774 603.359 461.238 607.013 463.113 cv
610.673 464.981 615.517 468.621 616.802 469.465 cv
618.091 470.313 622.54 473.485 624.41 471.801 cv
626.294 470.121 626.191 467.603 624.313 465.824 cv
621.145 462.824 615.813 459.465 610.574 457.696 cv
608.395 456.953 606.915 456.478 607.415 454.328 cv
607.691 453.11 616.898 441.149 619.574 438.532 cv
620.902 437.228 623.392 434.871 621.544 433.766 cv
618.583 431.988 614.626 434.793 612.552 437.039 cv
611.441 438.231 604.938 446.478 604.938 446.478 cv
604.938 446.478 602.763 449.282 601.579 448.719 cv
600.391 448.16 602.763 438.703 603.063 437.223 cv
603.755 433.766 605.434 424.61 605.634 422.926 cv
605.824 421.246 606.406 418.008 603.954 417.594 cv
f
634.099 452.922 mo
636.082 455.336 646.754 452.18 644.379 448.625 cv
642.242 445.426 632.711 451.238 634.099 452.922 cv
644.188 441.711 mo
652.981 441.711 659.004 449.473 654.263 453.766 cv
649.521 458.067 631.532 460.31 631.431 462.649 cv
631.379 463.762 634.599 465.168 640.922 464.418 cv
647.301 463.672 660.192 456.848 662.668 460.406 cv
664.575 463.133 649.621 470.586 639.836 471.801 cv
631.832 472.797 627.974 470.586 625.696 467.603 cv
623.426 464.606 623.024 459.652 624.215 455.449 cv
625.388 451.305 629.946 441.711 644.188 441.711 cv
f
675.911 425.074 mo
672.458 424.977 672.355 427.313 672.259 429.563 cv
672.157 431.809 671.559 442.087 670.38 443.109 cv
669.191 444.141 665.434 444.141 664.048 444.234 cv
662.669 444.328 661.27 445.477 660.988 446.755 cv
660.493 448.996 661.282 449.376 663.359 449.47 cv
665.434 449.559 669.095 448.341 669.095 448.341 cv
669.095 448.341 667.638 451.345 666.523 453.578 cv
663.259 460.121 662.566 467.582 664.45 470.587 cv
665.734 472.645 668.579 473.484 672.355 473.391 cv
679.868 473.207 684.105 471.621 683.923 466.195 cv
683.825 463.298 679.177 464.234 677.591 464.98 cv
676.009 465.727 672.259 467.509 671.462 466.477 cv
670.673 465.445 670.38 457.695 675.122 446.945 cv
677.298 447.134 679.376 447.227 681.052 447.227 cv
682.73 447.227 684.216 446.852 684.216 444.888 cv
684.216 442.927 683.923 441.992 682.341 441.43 cv
680.938 440.934 676.902 441.43 676.902 441.43 cv
676.902 441.43 676.997 435.445 677.988 431.988 cv
678.958 428.598 679.868 427.505 678.876 426.102 cv
677.895 424.699 675.911 425.074 675.911 425.074 cv
f
496.2 431.348 mo
493.345 431.489 492.032 438.266 492.032 439.782 cv
492.032 441.559 491.434 444.778 491.02 446.746 cv
490.618 448.653 489.191 456.617 488.902 457.711 cv
488.609 458.809 488.45 461.203 487.727 462.61 cv
487.001 464.024 486.087 466.332 485.941 468.059 cv
485.794 469.786 485.891 471.809 487.341 472.907 cv
488.786 474.008 489.184 473.961 490.954 472.907 cv
495.195 470.371 493.911 459.668 493.911 458.411 cv
493.911 457.157 494.18 453.024 494.18 451.926 cv
494.18 450.832 494.587 448.746 495.79 448.621 cv
498.348 448.371 499.945 454.11 500.509 455.614 cv
501.445 458.161 503.294 462.305 503.73 463.246 cv
504.169 464.184 504.876 466.024 506.466 465.703 cv
508.059 465.395 509.309 465.606 510.32 463.879 cv
511.333 462.157 515.29 454.008 517.313 450.403 cv
519.337 446.797 520.341 444.301 521.216 444.301 cv
522.083 444.301 522.277 447.594 522.423 448.996 cv
522.566 450.414 522.945 463.364 523.091 465.551 cv
523.234 467.75 523.148 470.918 524.305 472.016 cv
525.462 473.117 525.688 473.477 527.427 473.395 cv
529.79 473.289 532.411 470.617 532.208 467.473 cv
532.023 464.586 530.859 464.262 530.191 462.227 cv
529.648 460.578 529.388 454.215 529.18 451.543 cv
529.098 450.414 528.583 443.903 528.438 441.7 cv
528.294 439.508 527.427 432.45 527.57 431.348 cv
527.72 430.246 528.009 429.778 527.57 428.684 cv
527.138 427.586 526.415 427.11 525.263 427.11 cv
524.102 427.11 522.083 427.899 521.648 429.313 cv
521.216 430.723 521.091 430.93 520.505 432.184 cv
519.93 433.438 507.48 452.371 507.48 452.371 cv
507.48 452.371 502.184 442.961 500.298 439.407 cv
499.602 438.086 498.372 434.649 498.516 433.86 cv
498.661 433.078 498.813 431.223 496.2 431.348 cv
f
181.098 461.344 mo
183.026 459.199 185.293 455.488 185.461 451.031 cv
185.58 447.817 185.042 443.613 182.274 440.805 cv
179.66 438.164 177.153 438.25 174.637 438.414 cv
171.537 438.613 167.891 440.754 165.91 442.703 cv
163.391 445.176 160.973 449.305 160.789 454.09 cv
160.623 458.457 161.209 461.508 163.641 463.903 cv
164.985 465.223 167.412 466.875 171.278 466.621 cv
175.053 466.379 179.167 463.488 181.098 461.344 cv
170.426 473.961 mo
164.356 474.34 160.542 471.844 158.43 469.848 cv
154.606 466.231 153.688 461.625 153.952 455.021 cv
154.239 447.797 158.035 441.563 161.991 437.824 cv
165.106 434.883 170.828 431.653 175.7 431.344 cv
179.655 431.094 183.59 430.961 187.694 434.961 cv
192.042 439.199 192.889 445.555 192.7 450.41 cv
192.438 457.141 188.875 462.75 185.848 465.988 cv
182.817 469.231 176.358 473.586 170.426 473.961 cv
f
203.04 433.061 mo
200.169 433.186 197.175 437.276 197.175 438.721 cv
197.175 440.416 196.583 446.67 196.165 448.541 cv
195.763 450.362 194.333 457.959 194.044 459.01 cv
193.755 460.057 193.589 462.33 192.866 463.682 cv
192.144 465.034 191.222 467.232 191.079 468.881 cv
190.936 470.53 192.709 472.463 194.157 473.51 cv
195.605 474.557 196.013 474.514 197.778 473.51 cv
202.028 471.088 200.743 460.877 200.743 459.674 cv
200.743 458.475 201.851 454.538 201.851 453.491 cv
201.851 452.444 202.257 450.448 203.468 450.33 cv
206.028 450.088 206.784 455.577 207.343 457.002 cv
208.286 459.432 210.14 463.389 210.575 464.288 cv
211.011 465.186 211.726 466.936 213.317 466.635 cv
214.911 466.338 216.161 466.541 217.175 464.889 cv
218.189 463.252 222.155 455.475 224.179 452.034 cv
226.206 448.592 227.216 446.205 228.084 446.205 cv
228.954 446.205 229.151 449.35 229.298 450.694 cv
229.442 452.045 229.823 464.405 229.966 466.491 cv
230.112 468.584 230.026 471.607 231.185 472.655 cv
232.345 473.705 232.564 474.049 234.31 473.971 cv
236.673 473.866 239.3 471.323 239.097 468.319 cv
238.911 465.573 237.749 465.256 237.077 463.314 cv
236.532 461.741 236.267 455.67 236.064 453.124 cv
235.98 452.045 235.468 445.827 235.323 443.729 cv
235.177 441.639 234.31 434.905 234.456 433.854 cv
234.599 432.799 234.888 432.357 234.456 431.311 cv
234.02 430.26 233.296 429.811 232.136 429.811 cv
230.979 429.811 228.95 430.561 228.519 431.905 cv
228.083 433.256 227.959 433.448 227.38 434.646 cv
226.8 435.85 214.331 453.913 214.331 453.913 cv
214.331 453.913 209.839 445.842 208.581 441.08 cv
208.218 439.709 205.646 432.944 203.04 433.061 cv
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (momsuser) ()%%Title: (MOM's Logo- Vector.eps)%%CreationDate: 4/26/11 9:16 AM%%Canvassize: 16383%AI9_DataStream%Gb!R&q0MTkcT(in!9X?!.6E3e;b@@I5RVFCU&./Z;G*WJ"3`n%qo='MT4MX_$"96;T(dHT2&'LiOsO7sA]o8/Mppd`5F`.>e,NsL%'`'JJTq0:Rm;T\<_cqS-;-o^bQ9Y:Xd1E0<IQhDBj/F`Y3nZ`gM=\#/5U@H6'0dO6s)o0uS_hHHB$M',DE-dhWUSA>329H?Jqm47%?!Il[rN#$UQPZsQ=>C&@@r2YFDN8*JYje2G5+hJeb<FfK5l(ET%k=/<6)opZ2u1Do&WA,p+sP^`Vja&>oMkb7qf9jjL@^,G=U_3l%2kPn(R*L.A_J$)f/X3[<T@p`\i%ZloRA;W.-)J@c%Fd@BR\?5poRDamiI=b(n;I<^aT%f"9^3'7Ms:.t1pf"(&Jd+<U,i,neE1F,%:/U)9Ph[n3]PoeI/q?'/PTd5::AarKl_NY:\T)7)2?<hT5"UH/7i:_',i.^0$'!7ldh2j1K6l\k0+dgXK'O:=Bhe%N`?C[BKG2X1%1kn1+'B<%+]p`og8W87u@SSs*PL2jr:BDIX!?;CHP-V]N,^(aJ#K'+k6mlY\-pc<MQka&^=(I_nSS@YGgC[2]rm+.8'7s*9(CP[9%2?50BH`=fSW:4A^+D?0HI@G>5LiH91_*tG#,Dq@L.jh+<U4]74-R`Vms,XM]B)t%_Tms<aHmY'HRE<5lb=YQ?1&)]G6"qkSV6Ljd%jZ%LS]Tl/WX^i&n-'M.UR=nbc,f`J11E!-TaZuC*q?LqO1/KKbJQhOP5+rb867nLW2d$ng=;L1@*0bJK1'ql?*0bLaH&#3ikU#j4%N2.0EPfdJjLDrFN(:4B3Tbb",C+1Ta(;VBJJJQ'LZs2MmGo,0;TC<4l"J5[Nn;0Db(;VB*)ud]QBG9;Lga)Zg(:4H5Tao,Z1J'bq%3T2^O,2j/^OuGtU$2&sp66!`NPY3cpC63pA$ebiX!/X7.[$m3kM8<Pt"mqL!9XmFGL%`>1r.<K3q84SR*1jqne:RD1-]oV#'#I_%%+#$;J!0g.Q,KYnk8%9&:#i?oAOHpRFJT='n_+PnDnffreIo$AR-YXp7%c/P7-Df'Qpk2g=^S-(/-feS.KK@I@LKi2CWUCDD&I_(>%,or:n7FF)eS7i8W"fYj"1*q;qe.Jhs]S(2g\KhcdD1m)2-"/1Janqm(r$.GiSk6;WaIMaS5iD,rU;'<=-gs%M;K#Q]QGb.>pPF&d%HEZNS]WLCZeC,-]93bNY!#/"pKXV\68@2"]8pCYInn'^NiIC?`=N.66O/>L*nsB9,+Un?!J&sp14-:X]PeZ9d.Ree:J'#HIRf#pY%-/<5)+2a0QjY-F2/<\o5?h2P%/sXKkjY-F2/sG28?h08@rt0SfZ@bps=7TSl7K0%Td;_(9i(>!YF2Ld!R1b8t-.;#p=%\b9)c`\k%kno&EUfd6taX%t&9CQ:4S\flM#5iMOT`td_8TPl9`FA>,.KUl],JTp94@OBb8J^U.G7&<pPq\%O4@s$'8<k#k,/$8WQ$9_N'aGRP%QRS\:8^OG)RMP/(onnEK!hCr`*3#L%TjAq6LdGAo"k_2s$u[CfNA=c`fZDmp&l^eahBmIJRbWKOE%NAEjTmJ*3GKG&8/'_9$2Vr/%n*%G!BcgW4Fot2\NVXl=3X+UJ&)eVH"qlKrJGY#g7,GHP10%!t*KtI%3i-@ViA%\a/^"-5a$a&Sl&&S_X2K3Q?(qE,.uW:q7!UIg%@K\3o"9"Wt)8\HZ3C5r,">,;A"?/Gu\$<ZCZ(7Ng4/!.o!&+s;b2d7DjFq+L<+>9lYmngZ0ns.OoL[b;U<8Wg?s0@03YP/QdOb2Y%'2(_,BpN1hT>nl+$n>i8].'IQ)$YX?'e/d)6M`p!m%O3F;P'SkC"1F+P/9&KD\U(.1'AEC&olpGn0\(PV<BQNY@>qD%!jj`qaMn:%n$+Uq?Lg``L\0E]es9ubTk9O`BqV;YTGLb(/QRV7&W-QIjpO[m7@u>R==!J^97AD;ec._d@SMSRM6YGN4]2Am#[3'E=i;m@@u-L5%QGsP)*7o45.V3=h(8KhSXH.<F).[2#Y;q\,qTd3qU&ZDIE[34=)M,6%MK0tZi!Q/YP1,<$`8:h'_@.Y#l=3[gP=jmB*gKPPi@R_n%8`DJS_NY`hmLkg&KrKVXN`!3H"oZtE>5pg)GCm1Bo26PSTj;->1[<kbmslhkHkWoA;Ge^JS^^PQ!S33o>5D?"2>Wun(Vj.kUGTl?%%Z'4;$a<T\El)sP.tb6`oFVrJes@T3(JuQaAhicX\>J7Q;9(bVrrG@LTnif<01]:JX2mZP.nM*#09NA6r?duR^aM_iQ/7%:KA410%oi_D6[+^2fD4k8*(\\qFmQX*OTW=S.$S4#u(%JOHSZ]7Ra&M]*\u<po=U3:_HX%6AAdN$>h\i0%=EcbWO"gM]OJlh/FZkscW4!\U%O!GI#,5]0s=qCei8Io+W[+2q4?=S;#T0thGlJG"ue6'!*;A*UgSJ@ikd=Ptdo`.-VnP#*@9_Cdp*>hDNYA5_1"tUT=Nf)K3j#<[V%Ce".WYnCI#BMp@52-B!%ZF7-AK;:.d]<MQ32CU!+0j/8$S>?h,@X<I0cr?=`3BZP`8NMq0&l#0'A4>:PKSbRr5,Hbn24Bb>b!DeY%rF/e*)tSZD1as*%m@1&&0\0ucW$Tb%0AnEErlJ&IEEa]kJ=`fQM^0Ir'WnDuC1R\4ck;2U86Zp6T43\-+aH8G$rC:79pP!9)@Tk,%ennmR0g1DZ`I8Z4W\JM%.U,`"Y<\2R'0@c9S9P+09uPmOl*IE+;q-%hmhinG2$^8V*-4aDL*BWSEimlTq+o2B:jS2LSWUsQ\B+8A%91n&OAD;oDa/"qSDOm@$Ip&%cMgE5g)GDtfmi+f(La63/DO>&"\#eZ.O^>-WhlQSo',>X1O,CmZqJC,4ohT.GX7R1Ub<]210Ch_W%^4YdG&g"@lO,5a>."'NX,E.4^ZR'J48.oP-3c4LjZKLMAP%Pp2(?4R6lM'fCP9fZD`HqSgM.Y^)-?Q!p-daC5"EY)0#lNY(rfo4a%5n@'e2]cZ1&,\8`e(YT1'iRMqn<fORXWk3Q\907;;51sukS#,AQ*#\$hdE1l0t"]'Z/:0+1*^"88i6Y_h\B'=gUA#6"n7N0-GG.H%I1qJqL>K=uCF`3BEBkN:<-frZ-_:\rHb&(l,SaTa49tAj1CRACOZm?8kD6d5eRAffmJ.@`^Gpk+MJjq,Kii_3A($5>+nhI[iWB2B%:^cDOXC<ifT0T3Q\"i9!`p3IRZ,NGM/3h1`"oAFBQ!]f<k%(btPe>+khO@L=cqI-:>LJnApeD*49^8gE9uWk9pktB2Dpc(TqNU2:%8X9bY:mca5gEL]ufJ(kN)ccb?$.*(8)g!?Xq@0;/ch+IY'U/27QGNTPXhlk_%QkQeb=M4;\UR)R/hdEkd[RaES@ln!1J**4"5a.*%-q'++k5UU1T^T[EcrMuIK^Z/SM&nt<!MX-:.:UFZNW]oO,^PQ.6EC9`5nI[=;G[Jo0E%19a7@5P+d,/7VHEC994BMOm50[PiW%$+%1@u1l.tbU:3gcKeU4E@2JEH2D\g'Xh8:8M;QG1IjMpQ2YKgROocZO.MXbF5-?C+Q).Q&=Y-UmG9WR\a4*#UR_TlG_t;dTa35ZC=4%B.8>hD(4VCPj!V7?P:Q15)6UKCYJ_[E,0G=;G=skNC56.Ktg`F5g7$O,`WZV$,rhIqN"H%7j68a/?A[qopGrPEk!D:WS^MrK?@Po%8H2rS)Xq*p;iKXlD](].PSZnj&1#/XTj:>97A@:@Q3E*/.#V.ai$jii>4FCJL3e[bO1`R[dS\L@4FZ9JMgW<$Qm>HQ?:lqHTS*.G%Qr;,$cf8+ZV?YbOV&t[$$%a2o$HN7^"/Rj61(sn!Vi#:'iF`^ois9rDp],eP<COb5/Y_6$K-jIGGWM;/[&9\/7<+tMKk,mdA!dnT%Of]1'Vi"rr(umt_Y\Xq86bcPnWi5P#`1&aY&s,2fObfm0L]iYGj,&Z!i(/eH\.0Ki;hV?i9>WQJ#*_F^TFT@%TG.).S5CO5U*K=s%@Shrd(8^c`PJDaY#t?*Tp]X\>TE-u:>GQIF/1\$C-.S8/,.[fW6<8sF\H$_b2jR2f*<fPC:B:fR)QjK[n39H7dOV&C:li\eM8PgG%:(S9F"Q1e3:)1l(,&a<UUnalL+f`%-Zk9YFC9X'TcjHjCEG,C&LGfd$=FsZ3,\g'6<B,Lo,X?$N730Ee@EPC[OqK2k]I1*QCP^OR%c4Q'M3>5/Lhid?!h1Xce;6ifi%!j(76&N<Dpd+`gaFNcM.q@s;8XtoD)i/%O'?U*k5s#[K,d\TN?i`4;bp`(D`U&3VTSMJ!`^.qu%G5r8rCI5Nn6)Xk-irg.U+?Yqg(G-&shuZ%mYr4%#i]Tg@g'KId,h.o(6^:%[5h_Gp:tcs8=]3W<"Ra<`7prknMoG?;XIUo.KA*Jd%lSp=KQB9Yt?cdKn*GVF.j>Z=?igNq@Z<a+T@(k'.O?OlQ4F*,Qa#9ThoG5E;CI\H3ZD7=T*\iI6fD^gk`MRb'-!j/YA?Z,ijIMUf%grNjqs5:jej[R#TkRVH#EG<Z,U]TD8[(=;N2psGU&&$.q*f2D'i:TXt'_k807S2\\V,AW!5J]B'GYs>/"`P`Z.@S'idfb9XNYJ/q%`tHAa/\iG]Oqgg+WeeDEAaqFNQ,0S)[i10;25]K?1mttcbEG-V*?sCnkmqV*RS18M)T$SY*KW&P4"b7<MrfoaP/=ug=&W(F3.Y@.%N[n@tDE#R.<)aI,bLu^PF6`6MrFqUB[KP5Q2K2uH^\Qa'kOaWBP]+h.E5@;k_jSg`&3'"_]TX&(Qgml9n+sLdr9%&S;-kVGbEK^9%nT:W0.mN8lqTakV0O#(!1%%^rJeLA8+kML!ToooFOTJa4Acl^Zn`;<^q+6&g_^%ISnAqs/n<uMmFs]2,_K,Y;Ce^g;)6C8;L+Y[0%:SIc;#EB";@<+LS$sLUq<mY>cKZ/E](0'$.""O4eL<at^j5E8ebeAfp,6S541+#o-M.6GZkt]::q2_7GW[EddYSd)RI.P[3_>dV'%")`Jr-[heHf]Xa5:4Hl[Q.XdflHFJ]F7I6.RS=Z-U5]SVg@U(cei#6M8moR'im4!a4!M)So^<+ciQO?q0?>PaQK,rRcPa:Yr:&")%,LRS2bYV6V.[9PY6&?O]8*J^06e]1VF%AB*.Hf_5o]$"$q*pGEG/g)>cBgK4fgeg[D]Q($os*tA&7]hAE(1CBoG80s>,77h[Z-9l%Qq)I`M.guOAp]eoUq'uH#BQ['BG>#''!+ee=@_<!Cg1TUY-<naU(f%#H3I^U5OgH0UjHbV>bkBR7nq"VG!u1dU^=ej4lAe"pk+&D%'8]i.)*(4+?3J*$1q>^8#^p=rp.Zd_G/m7ON^6X0E^kqbZTu3;eCg1]N[E63BY%G.#A!V7W&gGE@=L7gal?+eUiJ;CWo*B<0qmNg%7m6ORK6i\7r#[IMVm6u*]TJlIFP<6u)Nho.G3]K_T@Afs)EP$fM]$8p2'oU:1=EMNI"m$"8ad1a@+]\KL]>9HUdAM]>)B0r\$iHp%\>Vk@%=t/C!qHLur-oL-EdtU_FGJo8if>WS&L=A,Wt4p?SFt0<Yj;eF!&U6<if6--euts!hGD*bSDO;DN$kP`KSD$dfNg-)\bI3j%#TZh/T*DP*po7N2YMluEn2_kW9&X:MB-tdMHT[_*s69m]'4bXC#Wcup2-'\AaKik4k9fjKa?Yr(+sh<TYQ(BQR7o!@%E=?hOTA`o%cP`_ESeQ8#G'/Sm`'nOM%4MPI>?A<HleA>?]dN@=aGHiA-Z$2?fKj#!*Q;A9ec/8_4o:T5Xq"J3AW;H,op53go]P,>AH//@B'13(%IDKni?-KH4ro<qYdILX4b5Vj_FT2+1J+74M06`'EGhDo.DMr(%hGgkj`;4E,gpPE%A#C2orp=;_QLL>tr&sC"^?d[GXSD6B-lH=F%TJ(aRpp+D=jdQ3ePN3%E=bF<7"WI7'r9&[m,MQqdl9#"L_`YAGc08-inMkmq?Q\IYB_65,nA?n?IH:+g8k3J`3Y%ugOWEge<Q6],%>k7jPnjaFjJ[jjuACs7f9$iN+)Ic/u09Euj_Ptb^oR/EZPWJfFe*lUs>sFnU8Cs?nZfseXX"tfSg7FJ=A:HKGMh*)B8T-X*jG#GQ%:1h&(b-@nqJ6^)Slc]q=oAS#9gem'0;:FHb2UV]J3\UWm@8LJ6i`GuN<set,c=iSUGWI;<$SmIb=(LNkY<MlQpe-aHfHM1TTFa[h%`mQT0>Y.7uBC],:hNZcrNakr3:K_Wm.AA]uM\ft:(7hW_8b9f@\JPi)]Q:ph7kZ!KRe)4e*D(tm:.(+qAEqkMQ;Qj!^:0I:c>I:M%RIo(WhAZu<8161bplAA3#=s.b(2l#N7QaXmL(SLP/]V@X4nlTC8(CJ9Ub#%uHW-WapK,ns)7c1g1rW>"##1s%o:3])VJ&$2M\Hr_%9@^4Z-W3p%^8,X2Y00/L=g?qpl@u4$W$\K9<'PD!fNQe/<?4:N[4=SA5D9"FCT&MOX:*fuK"^6A3X?UhV;NX>(tHC.Scqu(\^@e-%"&dgB$*/3P79+0(<Dh!k;U%,+8G,]f7G_4oXu4?LFeFQM"@Tu%h/ISJput%nec7M+h&?a\hK4@6Focc0DI$1AmOk$<@o6=kLSk2-%UpC7gWq_FHpGE]b7r,g2[;\?._]l`u_29W\G@oeeS+Zb9Ven?e)26IWM<=0a.-4_T$WgXWiLS<RR(*)*'%pa(OPZYIFM`iM>d_n-%K)2KPGZ3%'SH1sFHqr9m'3#?eCT?AkYM0ZO(<j`4&^0tKo^ak$7XhE*b)>N.G$RCRpheM-::*"N0Wg?GA^XInUU!S$NOgU>D:DTb%*As%;grAHG7mgGlITlC'ccIBd+4#Vdl,9U.cfSXQ]9!2a>H>_*N/TQO_\6!LAa*61rauu^oEGV+;PTZ_4/ND9'.oR1J/GO_WCP_S%F,3.iQtq%re4<3ARcJh>kN8.Y5@M[5lM^XcZBn2&l/IU;//UPa6ka(((T:*$/?c8$[Is2lL-ubcd+;1AYIu7]'3V!BZhqdG&s0.E%XKca.I:^]4Clie(Qrd0!@`V*=KNF:Q=^N!r27+6]H9^W\Fi0%i=?kl>3e+,6?fP>]?>%JTYh%C3(qrP;fspds6:#U^hILNC;H.9`%*6W[<9LjjuCu/8m#@"6OUPp<u<$RQ_!RlkCYg.XLQ!+nY2I'bk07I_Og:BXj]I^*Wpd%E<n!TWmaTAZn>1=E[_;KJ^P)TVUk4Yk)%k66<P@@q/M3[qKdA`Qf6Z`'L")4F=]SQX\)l)\OV@c.T7Ml,MArT,Br#Mn^s*LI]0jeQP4+Q1tEa[D"G-o7'P>3i7DZK[74HLJ_q%Yk*G7U1m54JW/cm\+t"!GkF)sU9,l]6c2mn-Y['ia<sL'SfGaID+_-d4WTT/4MT7eY#aK,(Lq/E_;;p`5cnHA]I)32A7Xko=W]U^%T%GB)B$Wbu=,>Mi2iP?d)FT=!d-"U4<N`9FJ`^GoWN#Fh/OiuC=7$#lN1@ufS+B[&P-Iqec#DgtkNBb!6o>i9dPn*qVL`4Gf1\YS%7?mqD@E.t$F#%l<`U3/$.u:)W;LKodMY4eGBmQt@?*+6'%-RYT=fn"V=g"0L)]K.>/gO!KO:3[>=_[k[CgCg?)U?^bHXbr,68\cQ%D8MeJncX;QV9#N^^I``=eM]4(^s7$;]TH#DVHqj*CFi@-$B&Sn2PeeWMF09`J+8lH7LWp>T$]GO;B/<gA=Dl\Greg^TuBhF5J'+.%$03.&4XZf@i'm#-3`IX9Q(P8H@,ecU>X>QK*Ho<kUZ>^gS35"2mOJ%UpfY')lFAGOb?g&Ve!Fcm1`elWW-RX>1^HuLKp288^Q8iK%k(S)?N]>gJPIaDK.U=T_KBc1EOGi^)G'KJEQ,6tU?j0QDs+Km<8t7u4HEJekhf$L/F"#--9^?cLgr3>;T0-A!V>/G*nU'VJE4AQ5%e4%t#fMO-iRC^.YH"C/qptd!i\mG*4O;i1XL$Ur"'.=%?9?pc+IlcAP=klOEH<L)lHUnmlL%/[HZhUq9^J`BT%6Hb69>,$;[u`]C%4:jK.j>m*$Gb:^Ka1nJBrjf'H8q.p;c-YF&d.#]P0-0K)[l;YapC]Dkp++u`aYE59EM.Okr!4!=cQ1's97Qs?ipc90fB\CRgFuJ'%XFCi+;(C!c$,`O!m-stJ?Q?](4<Ym;\n(*Nj'SJ:=#dbcJs0&-mb\AqV!%O[S6hdT;Eq@__c/*@s,8[!mlVL*AYV$!?KkpJO4]ch%n>V0[e^"`Y8-d6qH?ncb"o7.;ebC:>GcJ@`m!8$gTcD9%k"%,f0?M+ZMOhHdEqfO!/DWI:_dN'L2el/Qks#<5]HeS^2\Y+J^,Y[0%6_\>PpZkfNmI7Cql/[jb=5[3]/4h77a&$^iLR[QMSB(0o5b?/Uhf97h)QD!db9$j(rC!8&eU=4pq0Y1nQd,f5,+OG;ge%PCl5`Mq%-5aS2/g`t;W)E.P-K%TA+R2,'Kh?_45>/MDV)Dq.M4^EZPL%A>*n)Te#>1VNg2FONnJi:-h7K.M_u4i#>dMC=l*EDJ/c<=o#7br4%rmYZrAj.U>cfK=,E*nPg1=odqqk;7E^QXeDcQDn3@mBoh`5):@.WsL<.eqH:hk(g.?2)s\P-84;]TF%*F<=)(0alkAcL*d/Ud=fe%\l1S&/In0!`F?C31`^4/I#nL$.(CO!:"46efnI=LIdXfQoLJ>N6ufDa(fl4C7uf)CmI1>_`G+I?0.SVeeUj%h5r@ckCVI_l6>]Tk%l(VKmg)!Vf0tG*djFd&Qf"qi\CH^.\U\>`O7*CVOni"C,hW(#brCYq,b(4l+;`#53J>XhuQtEl>)HoCslK9!AmEil`^<6&s8al)5%8NkN5H5SQ>j*M7%K1\-<lt22EOr<dIa9$3ap&iCQj>3WArFoe1/Zu(Q=*[DdU/"Xa.Cp/,>h,?5KC^t?-X8+j9F(-RO-%8]ZjX:A%pW8[nM,Z2I]"Z2h-QK8F#;OY)jC@=*IP:O^`UW#<b-\l(Nt@+N5R&nm#H(W[G8s5g0XmZ]*q\1@EA8?0Ih?J\.t)`D8OVt<Mcdgd%rF8h_i<Va:XVKk'K@<=En/nKEr9JpEF8+hNHH46HlXcUc*f"dgU+$0F_P38j0;r,qjIHaj>UAZ8g%OT5In.`s1mY)!Fd2/DbML_*%#A'^YPp/rr/lDd>*oC3O:O`LBcKCh@@eU?G`TV@?_DFJ0=Ks^#Hk^U$2N4Y`g`n=G5;#EtQYiV1CrMZ;>T)3Lo\cVioWlM*>3c))%H-2[`Z]e@geiBNY(,#ikk5?a(O+*4k7JdMhG4B[C6/NaTkZOgVIMNq<nJ_al\n4H[Z0!(2dYm#HRkN55mtbmT#RDCOCrW/pB=I*Z%GDT92/'eJ:R67FDL4cc/Pk6(t`63((N;=i_)F>&JLS5h/!"3KfL'U3CMG<Y8"GU-7Z,#+?(<IifOk+RtD\,%dQBsDXgD>e6*3++)%L-Ao\2(LD-ms@@[@dZ_)!lE8rc]nXpSP_A)Y\42O/D<f%TbE';Km$HAAg'L[l7[F>:E"D<HHK$X03E8qo-t1rD6Y;ug]I%@Jgcq"%IY(aR>YGjL67nd7F`j`!<EWlK/c[FlbT^oCS<2BsC,8gIA1H.><LZD]arJm>)SIBTP<il];0>dbgm>YX.DR0!+7m"W.+6O9Q1,8+%P3Ri:7U8ILORO01!4@u!<8U(r:qeBZfBN`Uq'0UBU1:LeQ$5bX*3`YH+Vope>g+qXP6&-GGqFH^%>&2RQ?llFY+M>#h:EuY_8EaD%VuK>h#E0'I6"B#Lc@&q]AN?)AN(,OZmq1%sBHK9%SkEcsGW<>TYf$3YU"gUc*g<9kj\@':%J/hCg?f/.i9:Z=MeOOqR*a8(j?"Th%?fTr9Wf1qdfbS^4\G(5(m+:h%\Q#X.(=`jD[X%"Y;S"J;hh<]R@)mtnW"r#+cQ0;me@;%WI;i,5C#m)(JgR2cZZ7_OMA27?3i&3'%7Z6(gM>*@;MJiZid`!u:0Lk]O?IRN+WLMUu5Z:UKgLeI\oTQdt.f^XNkdAboEd@Q)!+!ZE6Jd%JH'cX0NN!5/8iodCCeRPkY><`r%&2]A?R5K'CpQ73u8WUbU<Kt=jHR/GXNu(7O`[Z@65lJGTZbR5gBg,OF/_,_M%mo4?(2jO5ro/q7D1UMOlCnnc)=U3\(VsjY:Y*CZ%oC#XK@2kY<!96K@1QuS=IU$eGf69*Jm\k=Bj\uL?RoBrJk*&BOg]8nDEH:Q#]mi"1;=a`g$0A?`Q'%P+h<QBm6&cr^(0jgN#Mi'#%E"]q6JutM9;K<gf@4Frl>R7"3#J\[CmFa@&\8u6"R;0pk,A)qpCF9#PoB;;7H?Ed2_<nZVrO4IqDA`'Fioi.J-6eGq\D0BU0JRf*%Np'E.;BRJOQ0nU1.1js^Ar`B4Ek1aV=GE!uhV\6d>^<VC]omPOIaUWjJk(riFK/EW.,Hcf%GLRKF!VI1Hu_#%=3Z)ZCJ+gAh_C86%dpjjb>':iaI23l*k1@8=_^tLR*U\>cG.;+Kj9gM.FViA15+H$a-e-hk#L)U<l8->LX'f;\MUc0`=eqe.]=CQZK9pd/F&ECf"g.Q<%Gf\gR=?0Ip%PFcOh\V4rF7k(G2o5IrND?r&fClbhTV\n[Y5:C34PU("ZX8:G&.O)VDli+Olb!kGW.mn\K)^JefW)s$b'?l`m_9ZJ%p3JB_A<-0c#]Z5SrAUSV*Na[lM@f!bBIZ"?A;Bbb&u#`,(Z[fFIp!d[)mao,fGbVF\Y\.%McSKa(g"gKe#k4NpO,hs"]Kc*p5'V^%CKLI4s!JJEPg=],k36MXM6.h^_'h-_jhi>T5b_m%Vhlu)EQj>gW\u'?EVMGLJ2Se-m;TQA`iH`D>Ij_#IR1m_>_V(p]2p&Y^1=oE%<]><b7\%Pi_jE5.G9bF$XUg%9p'[J(MrSr.J39[X_r[u!*P4nf<%_56bO='=2Y'R;^u0V:b.RfJb/Cu])eAphd_lq5dDl_)\[/p.%deV5YV3ncB$o9jA`dkU:"ZY"=gm,?JE>7dJC0-)t.&W3Uq+KNScGhH=Juj$rBgd?[FaV^"g5!^EV,,%5i])?#/7!LK?L6IgI33eK%"8<)c7-<Fgo;MIrJ2E8jdG&q,i(ng%LGt=FXBg3,g`J*`1?LV1n\CDpe@AdCNO9K2Bo5#*lMRKA'1'_".uqt_IXcfYLRsu.jO+2L%Y4P]d)`:>g0+i05:Yqs%Y?$qVrMcjSagJ:o$30E4iAb$7C2bpZ#H,mFA/Q%XVO?B!.R+<U#O6_1(1p!n%d.LV\bmY3bZXMA_HsMA%B0+i[="a^.$Z__dDip+h^FJ\K"@\"VHQQi02dQJ=O?j`VcWW)Lb5G@^V/\Yl35M=#h[a"hcfW94*?H1HOCH86R7[C*C8=3>(Jq^/%BlB<Jr/=%3lYO+43%</&T!q6nc<CiHR3gMH!g@rr?^3f2+-H+M^Gsg71\32C>%l]@Iq#9^f7(XmXg6%9')q^,&<DW.4'-,fr\PKK%;NT+Y.CY[DjqbRgmF(1B*0&%X</B%)%lor$)fTV%E*GIdNLhqoaG;RR_YCkRpT=#sQRaXee0%D3GYlIFn:O&R-F@btEYV68pA(tp%O;9^fm'`.gH!2W,b4tNTOAAlVBRKW(5'`:p'gm_]4GPWh%FU:*j21b-CT2oV:L5SFiS/g[OM1K3WLS&%d7PI!'38@aOh9p46e@Im%J'dDW@D?Fpq;U9r,ZaMV2*7hib>S"]4td)O>WLt/Eo/$GI/5Go>iud$qJpY-L9Ju\GY0>\0=#Y=2fdGPOj[l85a+@ro1.=5cf]3g%'fY<U'njL!7HnkCKFJVRK1=+:&(YnF3VN%qVK<o"rW:A2$3IKN`Sun!^P<Mo(k%Z!GrLdhN(fDQ@!hXoEuF<Nk<88u^uY&$CrBh?%cb74q@2VlgJC5oCbjY5$'>hinnqnpSb]U906dtD.;'D9u*NK"2j9D;rrJ6>he3*MrbhpC_9HmHJ!CIH)`I]UK6Jjf7AN2"WE:lf5%Q^Ao>Ts2jn=WSp?]]>._Sf5h;q=GS86(G-Tbs6N9pI#IrQ[otl8R'4f><Pu]p-^NFMD#4lW<MS*XU.ABBA<qoWXl,bHP-sf6?VuP%<=Vd?Th?"eW]V$9Gi;Kk/cqpecPJ)!TMamS3)13Kn5M_Za@sJ16H[%GHZ>MaIHC[CV<SW1A^s9ca5bj.D?@$*Qtk:AQFg,AU\<V7%Le1L[N&s/'8fY]W%E7*tl\e[1qR8,'8u&4V[<d5:=H:S<KB*u?ag_JVSA),jSW2OlD&lE::Hj8gO3t?54/r!A"s1Q+ZIn7m(,j$=%iDZ7/PQTO/!+Ol5aJrSG&p;+G&]2bGNA*HL1@BoaDTqq+5.DY9e%FR((]J!Lb*`c&TEOiWkDWjiOgTihSU,4%:G>/HM@:$%3ROOc%.WOiq,`->JEa2-u%a%JV11.iFGDPisK^ROWh9Z"PcQ<+Z2W+A\R.J'WfS]m%I+I>ceoJm.]<d''8AGH(q5.(Z^>>)8q-<KBhXjSA%V24CGH!qO?NPh=bNFnX#hemI>@=XTT\SUrjlYdD3H8-LL*cQtckCH,%8FDXT"q*sS"91cK"Y45r[le=[ktq-T*5\LH^!L^TiJ[5'%^Rr0RHb3(OcIaWDp!Q'T):h(sG8#<VeS;VsH*LKO)Y1qYc>gC6noffDcI>R=U4^3DAEBFRB[$FF0t62]K>n1@*Xd&Hj$BYf&OU;_%=I^6H<,'msnXO@%QP5,neRVHKK1,8Q(L4ZaPPJR8)9md2^KcfbM:sB4-eU=J2G(8cF)b+*3"DGo;?nM\G5r6G`ho4'Bb#FKZ_R8V%'&:_)qn6$rme@a?E@BP@4?bu)OB`Pi-(7?(>eP?JgrJ1?$[,a!nD#EK$+Ahq&8GWPE!@5C`b-RhJ-:AbAL?6L>deJfM!ssH*WoDh%/2Uc'On8F`6k"H`,I;R"<(`"-4YX"M<(l1UAlSQ.UR(pBBL8$#jc9X'7*VYj6fkI_WgG2H<md+HQ2JNj0,K#9'q'15*8hhJ;-S!H%PoV&)c:c"d4hNOjVM[P!\lOOHd_QUdJ_#p)F+=H"roKsI0`=JIf1>_lc':*6@JTlllOFf&d$$cgO6#-ibI;.nlJ/EhCsKLLR?i1k%?_Vf0o*nW^o:#a(`:_OA)`6tiEZV%%8'g;D;gM9!5K#l<kmu[("/](eqiee&cIjY8)gfun.MpXpPG.bI;1IhB8#N2miR=Jmd:>4]%>*$[n+#=J5)tp>Z&!bG\m"92sVs'W%6dAmdVNG+%cbZT\rL,]j;RR!$R"$I*h,ZP0=@Nb^B5eijI2oJW+sbJP*)hDKEfB:!@kQGT%kMnYF9[6lPm_eok6YCWq?+<'IKffZbqu,UR\pBji52LEZ>Binb&Ws)Mf&D9"+R(+0c\E(EWak_Dm,=G9X[S(?4&EX"A5KH;"Ap7U%c-*eJ'nNqXSfMD1atH8Q_#p,N,Kd"tQOgheXfpR_B`-c#]Z6%eh0%$/)/NNI4%hOl*H+#6BlcYl[?NLVl&aC--`19<RbF!*djM8t%+daO(YATd#^7:8)9:U;d'q@AP=>nAIK&)!6G&hkVC&7RW*)*/(YVb&M.D:$fSP4B;_XrUbhQIA9X(NGf?ab7JTbZ^Id.tR/q,]Mu%NcMFu@H*[Hi\fTPb9<;l@Ia(k(_tZ`OP*7U2L^\kKFP4GrI!$\U-te8VW2*'.nX$o%dLPUOf6p-aCNQ(<JbB5+,#<>/Aq`pDh+2$%98>\d4^m(3/F&cj]T`grdmcnEC4Rj,F:OePRI9]#)^qujRd#D];P!+=Z#1n[>@lR#FbeF(FX@'7'+(qm8KT>YT(eACL7^hI2fj!A%L+1hb6iYEW&VsXL)YDIJe!m8C88uO)GZ7FSn6.]G<@iZj7t%"/-*QX:QAngQ2cH-US314KX@[&('5a,OAH1!^j+LA^/&-qCQ>D.f%0S@h^OiZ2#N1:29j=O8H,sJ\hc>4ijSQ_33>]t\Ie&gSbjCFDJ+h`HUJe`RX$*,*M4h-3acr;*N@boq!lD/CJWhMD\<2]YskHDPu%Im"2.jugp=BW9Dp]r`q5+"(;TYk[4K@`FKCnIJ#EGQ.Q[:Rq%%?dJs<';sP1!EF5bk3uLCKqnfl_G5an5b_%+YWpU5F,&2jM)l2D%1]a?ui!,b2"HE[`+UU7B1ATH,P*C#B"V<iR3Q1*:FI_C:+#kA]W<hc)UiXhJ]e:MsHr@gQ3slgVD1\!\M5Znm.d2Y/kAi>0"3e[V%$o%h>'8A<4D@?*Tc@Tt_/Ut?qc>[TB:k2"m>?32F.U!B>ET>U#_,B<T<I!H6pI"pu];2A13Xa$)7h):gS9=ePE'U_'r0AF0_Ee/[%4Tlu?ea+Cbl,ArBquIcJCQb]/98?!EF88(Xm7),C^9:CLXB@fuM[#c4Lf8$;Q":`1@dJ(q,B0b2T?1Y]9sJqDbip#l/8>jum(2T,%5mT@d+J/$$a.?Yc>]_=kNaP5$-.S0=KNKH\,Q[SskpA7*Z,jj>0'$OuoT8i;X?8G+b#YC0b(U/U'E3OuEq2HUO@a!n9V_H@@B*EP%TD1q\cL/:V.MB6""O=^s1&+5YF#Vd>>]:p;_Z_EmZdtjQqTMo.e\g.j%]idoj\e-YHCOhQq-qlQ="*(=Fgt_.r$^b!>s2h*_65"3%qY1K2!m>E/'teoF\O+dl9gqgL]GQ(6`VOK3F*`:lLb"JEB@e7$=>:gh-_HSecZm&+%YH1+<40uW%_!SA:V0;>G'-Z\A`if12>7[E%VU+f0ZLI]aQ(GOa(3dokp7d!_2%d+3Nc"o7aFB-;eWXUi,n14%lBrm8Z'@rS\KIEd>6mgiS;P7SU_sMNo/*qdVr+DIA#b"u`L*hD%Yeh>:cQUs*AKY?"*TMla\WfSBa?3abVghLVdEfrP^&:pY,(13_/miOUO]GBKM<t%bfF[<Ed8f#]etH**-AT!dgDFYMjV?oT[pY0%%&UfW\crn,8eDXHTc99"eO9s@RQac"#.N9Ul5<VmajhEW?HGK3;%eiiceot]T<f1ZUPY@/c&)E3l_jDVGTIP`CG7%6<=t-5KKF4=B%DYVV@_6;aeUklD:n`\UE4'@O>(b*nPDHSL=-`"k&oYhQ<orUhDr";6-A-3*OI(H%EmlAZ-BjuI<YY^E2RS;(OK_K!N]a7T>Q^i;`%0ghaXjt12"[#-h$I<h8"[l&BfSU48TJe:mhq%7cH]Orm97S"s\;pHma&JhKJO.,g[M)!HRdi69><Gr=NHGId$gnVr=dg2qj9iZeg%/!ICg%mBi`E,F$$=%&G%)Fo>-^V\hHc@;-0\1SBAeBHn&\$_eW5)Dh&6=(\\A@"J2-V2Fa,>Q_9k5nY5.4:(93o'=ZlL-hm3kS$n%[!JO7IUQoIZnQ7$N![oK+4\U+F,UfT9ZQ'pkdB")K*t&Bc1]hI.FP9Kl:')+.9QTE$VT<&*n,iP5,]PURtGTCD2@hu*hA`D]rOON%@uSpr2J?lc\t?qK-:lI1p[8V7N$6W)Z``0k.C.'G[bYO2%jh^6NDjcI/Y=cGX6[Ur@k$S"7/F=thdE66^9"d9V\(n;1dfD_m@3"'%1",B>:O$=1X:?[q+98e1mnhGc_<IuciJOWKUn*-,7GDP%K]U*E*0:A*3mI?VM=5lgdmh$VIs`a0g\TmD4VEm;14J%MF%fkG,qr6N%PP8+c8Ai;lE,c.S6OH_E75PSKYj:s9aW[I6q2-VKSRr/U1N,:PA$:gLXuupPgEM!<@B],PE)Jj45ZeTOaJp]%MhY.&j)9U8>O%=X%__[p@1j]ne[^:?^F<B["db*5Y]oJ3V(=LdOQ[,>&dK$)m$A5N;`s7Z`Rra7I?EqcWe",7tgp*AhBebT`o$^nCotmq\fl?,Po@Ldp%UstThG34cOUJ`?<0'I<lO%N5`A7;Lo8M\7*7A5)tD%<RQ1MJ6n.\-jElaLUq="6kX\lbc'q<+"4gZQV[_Y$:l`h[]r;EMWQS/[gG%W&KLD*XF$W-KWAC<?]-LR$?/c)qi_haKRLLoc05d;EAL,Yr["Qb;-G.RQS=M]Ti"7V)e!-RsQRI8nF%5MuJJV@9>@3],GLlak!M4%kp=5qTDE"\j3ju41a7FqgZ<rWq;_3FC`]9E8q2;fTb3nT/q&%],]>afnu`#6hY]%4G-AX9rk4ZbTg<DUOZko6VDpAlnW-c,io$7a%If#=Tqso-,*uL<T+)^rL?J!_q;5k\.[Vm/R=Q.9cL%=_J3F+b^^+'%Hl&$&cR.ek]p#[\@Q7bD-?GASbqS8pX*(/hc5(DP-hbi7U%c[<9k4QDo>,F-SSO1qmlU8f:E<h>bVN2C4PR>&gk4,LP#V:u5VnGXHQ/)1#gbPU:'_RB`n5?V'dejdC#j![?&bF_O"LmhoVj&7X%%0%1IERZ9QanRMmNP!3qBg;D#$[-L(#hE`#RG9U5&.3-^+dmclull8aM6ZE#Y#3PsFLJ2m&8%0`9\?A@@pV!"?4lG0aVFW/=R(P=C%RQO!EUe0pKXe=2eI<r@f>&bk4O]EsKPDh=&hLu;R\pF.@>eWg$.q:/`hpb3Wbp,)mD[Ns'V#B?66NnpUE\bA@;UF\G%,*Tq7N-c&%1.QZ+%4FrSe=sp'#8<nH2MpQ+>r/8s;l&?2=/`37>Hp\-MA5uN4#?R7'r8d[d'iWF==;X4&G[4]4oQc8ibI/U<U]dGfCaQURKqHB%/fXJ:AUEK==USoLCb7k(c?*>.]cH_LMUVA9d=1_I"on$21IgB*guBp:[tr(k61Nuo;MB%.HjJl"n_gO\5;eI`H1\bR,2JgE+sJj*%c-O'$Q9K&:ckdp6I)ug>LGAqG0$GV2HOr=nV5V0(bsA0C!MPmoI(nrJI3?_3ptK7#93&NBr$tbZRk)N3&BWEj_X5>bTF@9GL.L"*%gk&EHhi1W9$rlc1En<Q@O(%*QqCt1h?d+@ql\NuO"FEgppk/("`+q%@79*/q1`,a>p#ULsj,[F;SD9ccB@0o=W-o/b\qTpSo2mc2%TH_/'fmW1,Sc")+U;"Ej#]smjKo"Fr^GW@abHK?aTXJ[T/.5k[k0!+2gJE*J=k'A4pX--U.=*:]9W_IHB]mH8h2(Z7I#f\E]JJ`_%F)/KOXI,h?4\rnNhXm%>fpNb0gj6*eEOaUmj1QEa^We8aLmTn!/%&m7.5U=Ujk&gP,sBnh#N=]3*HYTG>o@8$2']GEhCF#O9oC$_%eERu19fn4E<kf]YBD""D6Y;!JI&DCjZq@H1RTB6EEN>&CkYlGt*@B>oaMbr[?V=geKos!@7aENt&O+eBl=r'8/$H^T/TNt!42uY[%^!C;coSoq/6'Wc%/:b"a(E:/K6(qV_M8A>doMj`:3X>=b)u\'nf3qDAE,m6<=U*&8nfc.*3\aZnDX>/0SDYi1"UZ?G'uWCS"5W/\%>XhG1,P!]$SEf=TR[j=6ToAuIMpIe!j$j62?3;iS0+uN5;LXk%ksU-[^(W&7X^0CS!Iq30iCjHQFZuQi(]+rL<E0K$%ek_K*Mo*l%HV_Y0*tdCQ=YgH>(KjC/k.kH-<9UUGdNO!FLLqeH`4g.kJu1/kBOojjO/:1+Ol/9ecG'2ZH)QTlR_0$4^8Fo<VT[r,$Z+Y3_hp(k%RQ(L`VXp99;Xs&G^bMsfh2u2NMmb@\`5n7CBQWe7.AWNE<hZRY2tr=I>&g&SkZQuu=:UT`CM_#q<E&YGiEgN.NI?M\IO;crY8gO+%[q2hQ_*j]mk,q<sETU;H,L44dkDoLT+6&:D>HVqCdeL'd7PJOLI]aLkZi4E$9NG(S*?i@"1*gG%'sL&]hRD9t-gS@W7#3Zi7\5jj%E/5u-[c<k%aiT^C*9,Q9+o04=7IjZ*B\Q`pCkf_NW,YR5GUj`#&!IKTVI9_,,WXX!&[eG9OEF7IjhB(8A,oI'N]3NtS$qc:HZNoG%EedAdQPPI^?n7hBn`86*55K-q(#=pKTapmo$9+(:`B)Ra2CJMgV`pj\:H%joZ!N$YL#"A!3pdMl8\hFG%a:B@9ub6<6J'&iN^YUe%2J1e2UIuF"%W3%*Z&0hM5P`Bh)H6Za,si5+b!Mb/h5&[m8G5C?h^)"R4A:>lGjU5E_"&ET65M/ineU2DT*pOKNuf9YPF.$Z#$ics%`981VU3*Z8b\u8h@nbR-Z*]3Z@N]:Q)T3Z&G`>af<H_:SC!aH>YVhis]$`IL/$3Bs_em;Z(1iT@3S]dAP!;G"0jg,Jk6YpK2lgYJ%_3fBu[a@@-^"Gc&WThI=/bD/Pj2.X']lMk@FR8A>*OF-9LUF#2FG&FN#%1J!=ENTZG)W[9(-5KO3YPj9\<GW_*0P_Qif@f/3hJ@(%h7nMEp"6Y>GLjH&X3&Egn%:gb_=s%obq#ihG2lR&/7PNl&08*;[fS6u=.@EC4'#JOW2j$8(.4[.NGgs"m6kssC6USq$tn`ELnVKH%A+hCA]Et);a$%t#hZ0$eKlEeQ<3ncE8*&f#5Ga$Gqc[FDlc?X<BC!>@ct^#QA%orqk!V>?CpHt#IQH7Ro5iTZq$en/h<#Kt/4+sb%`Z?\bI&(,O[dV$O!&J!SOiC"_.nBZ!hVD+>d1i:"Y\W.21U:[uo_lDH/XfQ'!lN^IU>>3Lm1mNQRkC6H."6.P_<U&7NGMm9"Em,"%cCd$fLW2N8ls#@CGgHRQn(2FAZFfYC`h'6OHddhYr?Z_7:*Uu68)Q<^ZO#217Mb`H;`";-gO/aJ^,(7bIcCq4c411t3=+9D0PfY2%*P%0._2%1d3'2&0^ebG&_:=hF[;a?:Ni>Zh\=.r!D&DrP)@M1,lp<cP54%:dCR"Ja(QX9^c1k\$[:TE&mF_9_&-9*nI5DrP2)>UC%D!./nM^64_m66CjC`_"[*5rtBnaA>3`3F9Z;=)-?^Ggc(E3Ft*CG`C>$RH203Okl/)%C^u+`%Gq.V#0.AS(>R<nib0ooDRPTe]ZK%2btmW0MHlq7+]'8FB$.MgafKO(,/lnj&+P"F=!E8JD'4L2EY7J.^:V+?tjDa*1OJ*8s3:Ldi$Q.c$jQ<HA]98`5h#8#88W&IQO*l%,i_Wl1tb@mdLAlYK44#dFBC;X-^tT>h7:KMc"-"+q0`36^R*f9Pr:Z>RY_h&8(M`+]3F,o"R9&Q[&E&kdHV/@>M*!9[2cLd:GuDp%cq4p-=gS(X&t"N6_1j0MRr=EY^^a@A-R(I)Z3gtDF=qi,(1TUe_a$,6)rOYec/QE"9"BO\hbD1NX1L^_:tmCNcJdVU%\7_Hh+G]6%Q8s'<)0BE_\pFpXFU"C:[brJmFOh=Og2+UmF6K\]kT'$hjNq%Bd-7h>\'C\RcCf6gpQIsWSO&$TGO-K.cFP(BIbI.!STP.-3XW>h%%\7_HS`l-:c_8g*82edJRi-M+Q@%Q71P#nJ)j+YHl"qCJlS`XQG.fg)V,UdYN]V"qa(ojOg5kkM4uG7O95_J`fC50r1u!g^X'%?]%43d[]PJI;YJgf>14ptc7S_Jo_f_(YRp=gBif3`>M?+63-Sg<pOa#.9Z$^+Ohjrc^r@FCZ/>OrP.F_f7YT$7nH2V8@'qS(WpOSA<p%f&k'1;8Zq=c'i8/]$%^'egA"CG=$0_(mN%,>pI?eZCCBiNII2#2VDrJXWUe_M&9a-Y,e._Y+::I-omcJN;FOqdr)ugF4NrK]4/\B%k2Z`7O#CiUkMXa6Mh>cmld2/1\0=bp1s'j7'N6`IcYa*MqRJb%[$Iiba7Q(3omt#rC7(f(0hNSBDT-@T2G`Zuao]J-'hn57?5D,[%`$TbWejgP/hIkHDR-lY/n$u>J<p$Aqq8M$@#tYo8Zr$rI&S8Z]?5B(`q.5T;m=F.;O)JKUf"g5KH$jCK@a(*'PJ\mPCJOSu=j"mB%H"P2G^pKlZNZ<CO1Mb["A*-E-)`L[%B\RQ$)u*,6.iY#pq74cmgN!?MW3/j&'YCqjgsRBR:2_`.!%8&l2"Rse,p-oKpYtP\`[&Q4%B<nuZg9m=7R@FjT(S;1tG6%_Y=GF-tp$>\@ZjBOXWH)38BQ[n)I*Q5nijQSiY@iXd&u/4h9pq\9=(*+2X?;iLooUWmBd`WP8G[2[%%;Yp`o6"3@,\+nNf14!UR;<ME=ICX1Ss!Z:S:T3Fc\O?>^fLFO,0=[\Ca&[cVL2Qlm<2Rs1cpb.%8h<EUgM*gWdp=BB1iEZA]C.$%Uru8_FLI/Q1);.S2B0W:1@4?rACg-C[uhA;6'D66NjIrg>SiNZ*G&huk&bbj12#"g_="qb/o3pdj>FY/dtXKQ>p;&X]*=uecgFL`%Lr_!V47&l=D'"foa;3"tDS&2:/ZY.qeEuhu2MoMB`;+s=lZV":9[5r:8_VU'Hb1O1bEYKem#>fZ^2Z6[nuT9\SA_bGW:c/O3ti&9%KraSgW.UROZu]80,25[V48!I)8PV4Yb\FSp0!%bhdqrAEb8+?L=1?jh7`-7H27rbYXRk_A1!VOQGl7gYS6T]U8<mABm;:B@Qk)?k%D<pDRf6Tq&)<`&UchH3b4ri5dZR.6;F$AA;kDsJO%qiN_HJeO;47,kPSI`2AL[(K%iNQ&5\Hf:\LGM%)e9$2u[eXn=h,)PjhgY1U%%*fjs@!g1SZZ/UQ*qJ8hE`$c>gN,QK_-G2p=U--"gFgk;o#3S("gYfh;Kp'`\Sl1p:ZTYNM=(0=h<sP#@"`@aKNno*C1jd<'jcEc%RlkUUNU2^734n>*'.BpQB&c&DlRgh]AO&r(hc]=CQJKnq.1]>/X:oS1SP['!a#MO`0,[X=$chZF]`d]Y]]Y[71"1#BIXTooSQ+d3%,C]*T)a;O?EZ-WdA(;%Uc!E,p*P.p_$L3:+SomEYR'3D,T;H22bo2+HO-j'o)O_Sob%Zj^_LO7n"jbc2dT.#r<CZ8k4u-#CJ+o=m%MLb(I,PC_R%iM@oK>]r/;EG,M6#.nB1/\^SSa<4'?d.*#,&=/4S3CeYO_Xn5B_@VBG[DQ\+;Ta0DS!pq:=RC3K.Gb3lWk_@HZ:Vl%(!b<hm55Ugr3<XkHF/[e+r/Bs0)J@sgF7#S3u)Y>H0)K6E4Ri]g;6(;$>12UfR#*<=a\HUr!\RWG"dJTr+(`(-g_+pbt`rDqdWEK%4&?A!cD9s7p"=sU!lt@8HP#u_5"p1'4_/fD`<C*:3ZF+3>/IPs\c>l^.ks(B()tB?3g+;oKIT#t0Kb.'TGqoeS=qu:XrkA#1\LS7%R4:@@pWZ$8;66+<pXAhMX#,\pgh\]cnPD:-0:J`D5dPSor<O[r[n6bQoW[-2/(^[^q1B=M$$!IV'i2P&89VU+;s.UU_@BmDP`ji4%n"1N`n<G=(/>$K\T$3AR*_iudi+B^%7>;hs<ndakndmG(IPXW?>E`JSMjYfDCUHm!_PPrgZWo&R2T&:Vm++_S.\tc40RVEXN)ZG9%"rCg1bqeYF5)Ti]"0N:q77qR->f-[ngrJT<?^3h!P24hma_jU?F/5(j_e0/;b'e[*leuEq%-aktH`q2YVFZgi/!o]aX]1A&JHaI\%nM\"Us"n2c?At_&ogjS[f;(V.=iLZa5^'^e.mk\!o2Ao_Lao_VO26@h>4&k-]B*)^_'6<7I+gHPP)ToGp/664Ff0!@Ep8q`;;s*Q%Y0;`3fBalmhWH'.?MAW,SC'K?L1dOQFHbL7;7MlYcaM,RS3#HTRWHETqt_isO^#/qDbl_@RC:H&hD^pNFk;e`p9"GN9Xh9l;KJ/X%p@lV\mk<.4kN*Y"GI;Vqh7?/Gk1Ok2`aLdKVDFYG-rIL&A^_OYdM\YfZV*3I;,#?0^[.=^B9Z&u6g!D5bLi[RmC1B<e$2?6>J6qN%3[7I::C,W5S'G\FDf8&#,b*(mSOPJ;mO=XN.$m]<19u[O3hnZmp0>+UACDF8g6L@W^9ZuScFMY=2P!\tSTaJc5-jF3#&Ppi]k5_2%Oeb4pGkZ#8,Pa@T)nDk)ZK[>/B=JmqVeiqE:i#M6hBJH7gpc'O2VghBgH(gA'bm17[dS%DD)o%-2P&5(bH^eX3[4Va[sG72F@H6M%HdAQF=tNn1"2An8SP_#1IeL@"2P!_AR!*%O+5(a*\TI]<AbU"%,A(V,bM#TISW-=G4_3"ZjjI;ea1(pKnB>)Ln,uR3^XuqRMd\D-%bba@3_;-+)&t`uE$fYIYqn>*9Ot=;)XmW6roIfM#C$j0R)C:ZZUsB]=\)CHA;h<@`8Ph+cH8[*bPpBS2^t.mn)sNOu8S!%c\W(u_%]6lBf87?(</GR0<mCer^0("V=@.!dQ69?G0CpUR+bc+&do8E#paB:=5k"^9KPs(I]o5!d</^/p.ojPJagf\0.fh8-IFXFWkrabPn%],_i4Ys]Sd27^]G20X3fMAMahpL>+=[(,>F:9G4FFj6JAqmOU1@+2&Nm-H?DB[l1(cFKCop6K?2QG'Pgr47?8&o(V$]5oUNXCc6$%#1?:mn#14Mh4!X:f'?sCgs<`j7(TdQIiYsQ%*^_NfZd"j`[(;aM6(;-qU95cSK##ANEj^UCAaG/FN.r\RB?3K\ls?:$Pi<GTpkl5%%Fs7sDQ'GWh,%lF2E-*OG.oi%O1q0O680,&j1l]'c/<CsjCr3t(s]9I&4=juDR3$qofKc>Yk<j\(,rJ`'5Q\SMH)g;Isbuo9%uQF%&:h$DNBB=ET-&U2[W[D+`\(1jIe/"/.rF)9C>hR2\)u0.TLR9"QSbh4M4<q,^>$_O\%!l*D`8NM=Lko"c24JS,/YaUIm1/\dEqa6%`tSKUmKC.J9(>r_eJQSDq4&f+=KNQ?]PX_ApEXX$&Wa)I==5k?\AAWfQ[^<D_=P8s1W<rbh!'PT-,7n'Nk;F)iQ;URgYZ5KaUNG0%hDi70DBG:-V8/[?b$3>CCu:JdQb4TM475"EQ/U-I.sX^0/t1SjL:]>;]`qPJ=R0n8Z[8]4Cf8qZ@[FT1_gM/m5I%Y<csDnDl`d!`%gH"I9L(%ll68b0lHUt5drAD`8ht3Eh!b]tqQI-Q^#gOJ(CB9="dE-\e[N:J)\T$i926&GU:",IN2Tfqskg;3RWp#3kAC(c-GE-I<%mX6lU=@V<TfLTId$bEm7Fqe/M`jCm@AoHD+P)JSCrGh#F=K5^'BIcbn-]+fSkiV<fcRU0ddr#e^I&HJ6iBeNt2`Jr"3JJe(2/G42%ad-GXL-n#B&?rCt2.MJ;a7.4#0uWrA2U-4n5(8oke6mN54ZT4l1a?h][)hZm%H3]RNlEXQa8j@:34Y"ZZa,'jmG``Zh1E7GpXl%s%+jX3?o6Q>gA9l%V0'h1?a&VB;<.o%BN:9DQAiqRLB2LTZd;,;LSfI1H1\]BK4dUj(;ba\QfODA2ZGf?D[W+3<d_OlaCWR6b9=fK&%mUkJqUO5%V)j8ZV/2"NGaYqYKUreB"SFiu/P40)kIWs'p<SM&$_NoK8hu&#j7nf%C>cW*ZK[es-pTUX'`:QSbXKK)AAQ24.=^o61%)jm[8(]''Xif@I>'9h4d"0ZERR]u^G)CFDdNaW.T:4?/dcKWdHFLURM>P_foq=d6l@^,^a^M0`[MY+F(J+_'JnjZ0HHf*7Q2ijgE%VTMsn'bdD-Woik=4jk:.<&GjAiiX^CJA6q4R+W5=)qR/+XXEPEQ>jUiD*a-X)Pira9\,C3:8cT]\`J(tmO-1;EPZ=qZe@;T+K*EI%DD=5Eg>+u*2)`46[-J(+N<kAd9%'nKP"5e1"]64UKeZ5:!^!igX]7##du@A](p&]f;T#9eJn@Al7Q7ZdPW%9"AWZti5C%;HXL*+3%1rXmI[e+:6;pK7Sp67JgZFPu@X_JdH(Y_Wm^InsTPH@^`c/Z_]p(rX8=p77=lJ>XF\I),6(9a?^Wr"Q21V)k?X7rpUj\(LK/3Z"1%0;lgT62GrN7X?`V@?h'Tm</0ufR%lSk;FNP)_G32Gcp_*O_+LJdIKI2TnOIO]D5oOB.X,-I$^.ipm>sJ8=,q5ZXu9(FmCs?[4km4%\Z\$!NGu,H?nc6)B9'&?fX\^k_lQN&_leqbG*lc?f?3$8+Z(,D.dKl9d/,&b1\#q5@W:*ROY"1JIqOZ+7'_%83<tF`2pS[3kIbN'%YnBX/q(J=<hXm<?)rA)nUm6@#4/;pmmCcpXVs^'*o2NMrjJU,+n=8?jp8/8m@GSH.'<m9%]!U.u(;SL-rjrKWf&#k*^QJ.P3>U?s%a5Wu3<ml\']gJX2Cm,$92[<0oUO.n%0cO%eku8*J&8TaTD<1bLoXE-JeB?/h#>hfqFc.e9lPtqMFg3O)!-P;N3l>4Y#AYZ[?#J.:%*8<@Z:a6U2*5IgZ.oUWXEhf4@Nk@drTK,Tt=G^q/P0gP`.\6=@nYLUPh8m%tV0q"OZMpgrq2D$TqnJA6rJbXj\<N&uOZiU#PNeok%GU7@9)t:;GPg:`b\,T+s/FQ*cgSK:@n#tO*;EdfS!Jmbr?VQ?f^9a(CCiZT650en7Hi<Z$agJUaTm"'":YR^S@ac+)D%5t,Z]5A1%jB-8AYFeQ?Fgq3aHT%,f?9dbSOQfGd_gD>U,UD73B6H2_VYBr?dc?tfos<KmU5E4CFK_<r9WgP6lUN_@begp]pp/qnIb%4t]t\U"%Hi:$ap"Sa9&;,?.X;b]_6Zr!Ir=$YUIB*)Yp\J%]3&<Q&>0@quksqVm7k1]\VgJBD#<KN?Z\No+XDdddn,t5iHi:%D\gG%^2nmni%B\/JhX5D4sna.L_h>Y*:ekiUCpMd=.on&'98,#dQqH52k)J#X]Fg%G-Jr4ZNTC-lWXmbpeh$0dkePFnsZup\PGd!aI0luQuY&3Y#%1L-i?>mN2YgAP>BlODJ"N7@7`p!_u?Xk`3NEmE4$p\J#K:qDd+f6dHIqq<'(nilL7ZX+[/i'+jq:@Z]fa1$EPKCQ'mRqHdZhs4pg%6u9TlG-cPoX?Cilo=k+8Ib)")m3aE$h>Rh<HU%9$=g'dMG7eY<YFkKiIQQ?*\%sC#X8D[85"nJ\eSd,8nZA?TgGllToj5C-Y2[o5%R,.3'>=l9Mh!-8"%./;CT<)@R\,'s*Q+"5mA#a#XhWnh9k.L\fq>O^gp"N!nlhYu,m,bqKHEWqL`TH"?gYM2)fq'^HHi:BKL6liO%e(g"c?<,]=kK3!i5DrIc2S.Md`/][l^re(6jh6,o)kC#=8mC0<B9jST?cOnu3DWe]]jA8@]mcHq/%<4D:Lgn8DY;aqpRq@h5AQ6t%fF7>R]@YB_0pG`PGJ)PR3[%NAOa"Fhch^[,"+P-fHi:%9+QC<*j'Fs^50Rp=qIq7T^X^Xc]68gRrN$6Z2-HHXn+F".*(3R/Q7Bd&%_a?S)5r';o<d/rTcBX8-AO[7em]/[dGSS]74'QX9f;:.blrZApX'ND!eoZ9-O#l?U%C:F*#Yl%p;P;J'@(1Ri&S-R*]J%!q.hqMY%L1Bo#O]8;D(Bf'0\GQHf-5(?3O(/]e#ptcCbeMFJdq-QujjP+Ifuqe7Ja7^BF"uHejP]8cR6>:K*1#BT8[IjD^LeXE45$_8[SrrM%I8Cc/>^b/tAgVTl>5c-Q7VB-Tk1@jsHrl/00(7O0T=<Wg"2=6%`:rq#,B336$To4@K"L:?#X[n!FYMpT&N=k)FlIbNp[/-O^nj!i%Hh:6l^@.YX"Q:odE;AB@QS,jo4V""SiWY47cLM\$HJkaEiUi#->[Mmc_XK*%/ALbI\L2XPKnd4X9[!?P3H1G$H3'/<E7u72^/).j%q;C6DHK@#&BTPWmi;D%$Hr54PQo]H6SG&0t+NZcuT&T4@0semIGk:7h#l2S/@?S9D4^?M=7VsG'?%.Hfr5\6G`_lSC>]_onPmbo.%oDCG:3PJ/kjQ',_VUoi:<BpIPC(]Cd#MaUG,n/[m-:7jt/K.fq"`8`ue_TE+4k@PP_4;.tX[T(#b35V__cb.B5`.@oj5l'UmsQ@b%n<X3EGW/MOe("MGG'Qs[]PCe-e`=bN+HncJj"a-6IJ3'fY_lXW(S:b?d]N&>9"slSKl>g5.Hk)YhWjo^[/?N?3S`u*'8_<[-KX+J%2a^"T7j5HLm0BU]k;NNRr"8:O#f58/^c\0J@V9li@162Bm=u`F)58=3\.AU-*%O_1cYNU]`2>NLrh9W$%**uCnj31*G*L0uE,FK*%NV\#U$jnA)Q[n;&W<j#3P7P4>Y:a5=?+BrY%]bKTU4'R#X=b?[I`_hYWZZD*rZr:aq/B!%Q23d:IMT_a*H"cgnfI5@73ND9at-3%%Z\URd,d&Od=SdkTPB@dmdKFafh(?OY$'6Xm=VOWq\-].SQQr:W?FV*>-;5o^Ot=DZU%#>Wd9cJartN<CSmS4:RR0H7\3T,\3JsNY%<Y1VG^1:8V9.MQ%TmT@EMB4_4j^?+&?9"YHO45X.V.5Z+VJc+-RropZ&KO]gI_\i2YgLPN4;YLh&X)t%p_B!=l[-`YX@W5[Rk@R%%T3c3nB3Lo`[>0MJ7F>f+Z9OM>n.8Pe8!g6Ri"J9c4f:s!k>BY.9"jNnre<8?1qoa(VotENh!O@3YL=9%d=VRP8.Z@"k5mnr%c_@?%\iiNHGl2H+Gq6c2n3+p?pIqW1N;bg$J'1:N5l(Da$>o%MD0]0C\M02HZ?/lTDO&&#m=A_cjOFCTjK'2g6p-7=jXpn&q<SMoS^Ogm%\2H0'])-eBh1qME1)WE2Je'dWg!'n@,m$u@qd3ktJmjbO(]A`P6YSr+m]3jM3YD&ECH_1sSEOV.:M`bgTG],XDauLRqA#ifC^j/-%"s;tFGnTiQkn\XkPp=<Fo.KoL(lUbHkZ-,)q1HodU-[+,">#=(D,N+sLb[K_1<FHjW,k@:T#LEK$X5\_`UUctM[&';]ZU67;tj;c%A&S#%Y<"1C@gljY-0kZl>iNqm&U2Yk=e_0CD]6`AE".OI-lT'N*-CNs/BZb67Z\Kp4e[qAb>+OEDM538%\,H#IF2=[m:k?*X@'N:%R<@K21u%<8ealE2'M\e@PX'W+ocTRV`\6m3dS&S-*C&!hW^.=`F.GM2=i%QTn?VJ(RJ#Kb`Le&`&;_j6#8'%I;*ZtGM=78#+rs<N%5\E6en#)P)nI\n@AFp*@N0$6nC$4)$4rYLF5fa77"o9._:IgT:Oc:hCL;369mpPScS.`((N@@%96?d3#l;[Ol<r'N7c0`W@"47,g%hd$8V#>joc:&FZ7Ed;b$,A$D`"$n>!5of$-JrtAk8%5ZmFlO58Yn(<(/*>L4V0IEkq#'5UEqo-8fpP3])GPU<V!AU>'Oh*f+WMR:%'B0VJ"IY^@5.QWVTJUT0/9o/.<m+0=^0JiTclM$Ve1ndq"gPq(f.4/"F*=Zi9?POK-6TZFf9_<3KF'/U3O.ugI5RDre[P%apDmiH%nmH$'0[^&D3'C-ueFc@C!kjPm=jXdp1t)Pfk`:RBdt8TL<O)b$dR>Yd`90&^6*=kWJHj&o]O/;lHb1?X+h'\iU]F5a=TtL"afV!t%(E]89M@K[-2JiZ?)VB]Im60pdr-T<W1=AeQR!fNPi\_SFDX5$=nrpb%^"`U@!^NlQgK>AsU6f$pFu4e=Y.SM_1^0SM6-i.l.uhIr%p&25`BHi#s]Cd:GHF]#E_`l_4ohl#]d7R>$TXIr4HAZ$,eP`_(T>rb8f(1?5LQ?>9lb2P*b\'Sh/6_-k[<u-uZNO^2@s7L7ka5/n%Z0ckMce@q]3bAgfV.88%=.`[:[VU\dNkK1Mb_c`H,I5KkHG'mkd.;H5!5E\FhM)\m74YKSO@SA3.SO]O>oL'pnhrYfDau<hZ\:n[%^#AO#4!N^!+90SU`1Z\c;d>4P''K4\%ZhQqT8fFu0f,ugQ=b/s.9EB"dfDH&/fG]<nmkosi\7-[0RagPgWtJG]\s-aXR_pj=,\We%)[OeP<>'P.SL#tdX9QV8=YKQ'eWBR4*Z%,8.I9Bin"*Hu[,[.GFqtsXb^@Qg$QO%>2-%%,Ii;/?M0=p3;lP9V.0Xh`q<gp+30,Hk%Z(mK`,8FHR<ES+sF8m_fI_#<e)KUTAWX;^m/*C>;B0S-^Y;gjl6bWDEM$e-qph/s[cF!dLDA3f;D7kE$4l^K`&[[ZR@ZMC9!,3Fu%`rTCDjZ3Ic*^g9_O3l37%+\4-'5>+tjHphO;Tg0E%WS]S+UFi7j&95lb_Ll5!sq0e*%FB<\`<$aijn)ijnQ<"rIN1h.uuV>Ro&<p%#+lG^@<[GNKjZSKhaRAgPHJj.&)Sk-pJ5)SRQ,&u@oUn,(9Ipmq8Veh.<*jpbDkke<N1>)iu(.&HJH2lLaq80UnZ]A\I[cLI>Nh)%TC+e3c^^bE?_lG58`0Aa$j)>!oo3/a0n`W+d*Kagq!R@"P.nV"ASSf`kH(8AUXl2h9NC`QMR?$/n)NujNSB&;?]$W&@T1j?.EA#h%;q@'[S<LI<fT^Mh$=VU\Cs"doKm+$1MbX.ghN:EA'&eL"*RCP.T?-D?bR<%>E%meAK8pU8KK5)_mj@u^-h)MAs3IDrm4Eh_ahjHg%7[PNLI\'<!ptiC(47R;6M3!nV7foENMZGF&R]%R]FTUTHZ1OH`N2hZBVk)6`oorOs_=/l6McEP]I1K&r>_2f$kOMnAB3`9V+Y*?`%%(cSaCss-3Hn;fpe0PR!L>aUBNZZ2sku^"BSG[ZXKg*"\l6/XiFmD4FUubCa9Q5/t;5e'gq/eLg&E]k9nb]W]qFol.<q4TTmXM9Q%\b1pGOsOh(s,BCC'=Hcqd1s<D0-fHu*aRW!k5a4[!?W\l&//iP<Zf)gI)Bs\'q3pj\cTQa#)5s`c59FVU6*BC8[7EHAWk?dcR\7D%T$o&"6\ff'Co'Ln$Hp+Tm$Le`McROdZq8n>Jk&>G3;u>W+I5q89#L6J)[81#L?04O>u[r>q7'K`8G9aRXAk;SX%#EX)NtL8#`EFK%"T'DYEFDk`g[`$#("?5NZ**]V0hdS;;@'3+:,VGHV[PKPLk0ckdT#LpKreNX?ulD/aAodGnN`t[f*sWga#_US2pOc_d!t9r]1Sh>%-3L"*oPon?hGR_oU?J?_59C26e6aQ@NM1bj@@spFFH.Xb:_2qhf3o7!f(g!Yh=o$?-+W@$3.7/pW?`62XI'W.qMeFr'*$Et`!DsP%]fj:q9%>H\:9uKmGC8ttI\gd8VSu4MaG=#In\6;C-EBVLa.^.f(6d;76S7254fB8YM9!uV%?iNQr*&ZRDk2N-16*QE2t9E>8"LHf%@o\?<59X%LS`=X_BY/m")'k&;27a0JWuOQ+9B1P/#f1,cjI=;W)Kf`DkQjqR12m`_Oq[=9`N1/\6e+(&D>53h7_0k5RB3fa5o'Y5%NS_l%j66__H3&2q!Oelj$Mr%O#%m!gDe=gF,Pt(;)e^i6a<(2S*oEKEPrc\<.R1b*)Y[-lKbl:-HQb6_N6<FF$P%AGFLW:15AGuN%BhDF8BhuS<-;#@29FsuPY](f(a$lB^HQNHu!PHj4SDj$mdI'5p+BLF7Hl##?i(inbOFOFA0OeBXY.6r@9cQiZG>W$H/Y\3J)V;Vs%;2K0"G%oR&l36G3D\A,SGc\RKb:Nj8jcpF)"EMT*1ZBF*)ieKI7jH(^X_R1(Zr^McF/.EN6[$Nbeu[:>Yfq[28oq2(k^g-pV`lto%i399b&R^[Fb,Q1*DrrLG>E:g)aIcJ.or+is[iXXMcOW"\Xam)>K1&*4ipj:ia<64DeHR>$\p2g1Q='I\,SW=(H&3^dQ\)Go+=LQ]%NLuqbnNKX<^<PCe4>'5UcsCBF08E.YR,b2FD<1tY92OV>hl!ie&-<4MD^K6cGi@M(/]cnZZOi:L$;RZ=6EHM>n<D$K8np:k&Q#aj%7>Q(4(?":7OTc6(O+$H292#VH1eb]?H<DnWq2\K+3+IH9lEqaQ8\cmm90VZB"V'(82@8+W/mq(`/;RH2$2V:a0#BB8[&g3+,tee5%*=*SaoG?9W2[?#[&2<A[=>"cDKJ0h]%E]i6ir(u$1a?hjXg-usdu;@#1lrt/C0.6h=p#<PaK7]1I5ZD\<Sn;_*U[3!lu$6`5nafQ%2'PRj9&u?g#Rq5h&7HO;`/Ed1-Eeti",NM4$32J(KfHL]Lo:b`.Qmn.I6@j>!g,TE]%?kQ;I_TW,(?@0g^;HU?"kJ6$eWl^X&_[U%=<31O&k$D'4cb7r3jr=TO4[JE=iXQ.:qJVQAT]!\m@$=Z7"_ks6N\O@^:.,&VjD(#O(f0rM3nJIXg^@6LhrCk[#JoXH5^lM1;0_d%d:"8Z=;d7'Ud<aTDN&c9-mLKAg!r_9%=$T^VZ2?1M*L$7Q?G&BRD%mpA++b#2Sl-FNkOo+fM\eH],c7US$?E!h<K1MI;d-F2L/jq%p:`IqMfDDGG&2MpZ),"<dB73N5&@jc]59nlgk+p4/"<dC\LlI<nQOY"rQf>s`mT?;YDV#dJkaiq2W@_/[*%nL`iG>;'i)@8LZ2<+%ZjMjIs%p?X+@iJg*O?WeRf@<_ET1rT,#Z$8l)PV^*,[]]dc;4f),s/6Mu6sBWH\@2Jg9P+s&%uEpe57h;*+*?'++:U!Di#eLDSQb%7X`QCRY\<qN3F]>H]-j)dLlI<Zgd2KZ@7"(Eb:l<DB%+hEI&3S<#a@W76Xh]C*O)?%a)ndru_8a/02J88jn[\r'<P"d$J\Ck\k+h%H0K^%URZb2HgAbK_[.f\G"/6pE%DYq3e&-k9KZ!I'WjKu/'m4CBK2,JB$`?u<J*fA2np=CNX<RFm@_=1g.?u1)lR][5,*&[a:X>C%_Jq&chE`eB.E%l$7kBo67l)mMZT+3VB2WgY4\:B<aV5qPNe\:QA5mj&F2VRV0U9qZ<OIuh3#Rc)d$%-_RZ'b-nPg^&9%1-K)nhS(%'`J'E]t':P4-DMq"SE7+,Unr]G(cBm?V6"RRiFH57`lDnYg)=tM/Vod:7USe%^3-k^3.-m&<>!o3#oKpHX"a1LALA@pUYnO]C2m"%eT1KAn@SXjg[(t=X6KAe%=N'=F8XS?a7dpX=fV3R+DmTL,!.iPF1Tj?qsU+k@D1Ier`>`fGK[<t^Xm,q?#-HQ>CDXIm:3YIErkNL%mKp](?0A6&WpTV+c#$dC>(%;?2-8s5)ar+>R75k(\Zt#V0ZS5,@Gc.?[,/eP[79?:/uA.<H]F?iqHeiX$=uq\.ViJBouFd1PR"c5%a?P0FSN]ZrlIe7\dXIOKcr0k6[_79qgjaMXhnj\H`2E/fB.T%Jr_^,t=5V#$@("jkD>Eq)APINfl<CVHZI^eUbg5Bf/78q-*:<\'%RcH1c=j^47aX])0f382;n;kcUetfLc`l,(,c+<&9D-6gb3XM`E\)s>#cpB9pT9hlSXjXnLZgg(k%,CB`3]=.dUJ,#.]%2ZABl#ji%_Udjd-u3Va,MT'4Fch(oV-;JCS:*UL(u).kY+4E4IuadLOKao=Aa8Qh<nj&Gegl#5moIKA0_/=mGE#$/adY7n07@]``BJ24gA9ht%DrQ+T;6VAa87*=4eA'0&a6M7$[X6i7@nIZS(G!$qgD8,N=@S^k-lN7.5Djjeb%no]Wui]`H-JsNCRFZ2Y>o:R`)>&H5JAVlZt=Lq%`dST;`8b@^>%Y<Thq-o_Wmm3RM%?^/YZ>!i49*W6\VumUPF1t$C&:(R8XtRK3]cCsf1F,#9'3XBInkprVLjQRDObQ@[$A$iYp<Dk%lBX0Uj;cp_T:Nn!?`[qNqe2Y+9p*F!=nU@Ym4G5OWNnGIAb=I*-X4dS3^p$n`MiA#F6Gr-j!=OeIc6>6)CM4-V_n\?1'djW[7L/-%Q#^S'D2\$,Z8Y6f[C&'/[Hl74>P_X6E?Y:Q^D91RrURW5CeFtIm*O,Uk?@2L+A$]mkWs+$#T+5FEn+OpOC`H<9_;ghbkg,18e!-G%rTd]>_;"Q"cZ\:?s*,b:5C`Y/YQ+"Arn%2B5QCD+rZ@C#gCg)fcVQ:ihk'E8f67(9q_&694T"U$Yc?8l8W.Mi2M%.(kT`":gA;Yo%'k)BjAHX8gmfH?>-J!QY6u(H.s+U,CVb3Z3T5VI>q<NN8qR6*)(O_5(V:_m"5Y@M6)d=sp?@XX,0,c>8oI$o02GmYon35aZ`G#6p%`pc-&C\'E+L]%(*:bSYiE-gXX/kN^cJ?XI$.BJ=W8[>cf$^n.fjFbC'Q/%gCC[o_mN[cOH'oXMrGYn(<#5NcE^]1eRed*Qt*Cf>7%d(Wil9`s(l"1qUQfTL+>QR2:qdZ9OJ<E7Yni`mtap1b(Be[7MsO_a"DgAh.Z>!f@#8mY'fob3"eZa%h8jo2m8jo&#Rhd[@ZCQc:)%6Yr5D0Wp*,];,o>.NN]Z6H8AK8;"X6[?5r7c8Mm]'1["u1bEl\MkU1-EcYH5nTuBmI>^WFF/MuiC6^P/l8h1&RVF:&#m%"SV%`Z4%^"S/c:[?FBZ`-PiFWsh$.*IoP$k'H'Q;8F/6i'dJ'tX'n2A]mUHfJs"B+BG"T3DQ&biZ#=rEfY2fJdW-@>[P&\+ZCM-Ii%*WO@1?%[.h">MMPu#6BbnX0J^Gi2UBS1i&kCdV-X]f_U^l9CCsX.PJo3PS#U(=/@O84Y-L,#F></:6.",78oc%hhM]OD#[PTpmK(W"@4lGE%e&kc3O$g<CdV)qjD9\iK`,Spq9_5V,mT.bCcP;BJ#fWcqX)1;\s+aF*L3[0"F=c-+TS9_]`*=TQ.BCRa\QZECe?oJQ3`N%8\'bo?%)ROcEM:F5Crsr-DHW_pdBR^[F4fd5"Lg!O?4aUhJ0=s(6"8O.o>:l1.kXXY;=q(oleV.ZaJP+!;<U4L'j's_n1pg6OrB^r(f&p)h%A#rEJF"\RI1'(RW-3+^][V%%UJOJ7(]HF]Rs7icge^mT2de9-Z[0$;IX]/DT20gD3Scd/'F>"SD&pn?\s#oCqM#*INZgD'_*F)"F%F/aDQq7`(Um]>#\:bcur,;co"(?rFVoti3A(lI8taj5"+Sc8ImJ)p]sb14qIq1"4NSRZ.<8D0I4=rn'mY/Ph`V3\P=3B%=XI:W.'%J1U;=I=<`]?0VSrbC!`6j\(OB=Mit1<3Ak7fYK?J`'V.9FJg(9@q1RcfZUnG11pE=mHl.[;q_%q;skV='_9jiF8QS"S#&*Zp\C]A%k<["$T0u%\?.bU<_U5<gR0%E+J][;R1P($iI!TN+Z<+r=SAspKg@L5H]#a%M3]?^WGmuqkIFXKposaW/=PH!C/cU`<YKb$o0C]U3%KL59cQoDgWbKEEjl)T*3l:8*t@Wf.Tb)[2R-(Q,c^!ZaLkcGqACUta+KuYQF;!*`oQI(NngoA'oO&!BeG7.M.dL%($<^=ksN9Gn`%A3cERq"\MQN7B<]Dj%BQj.!EP88O0ec=;B2g\^_0Yac[PZ\1pXNPu;]%B<Nu"+L=!PdY1,P@-.<0+(jg>+C)u$>CAUTlZWnAal<Y%H'R[*YuI&^#8Z-'8s?8#OjGI,Xp%@i/"rsgBt+BlpVnU^IudKEZ^;MD>):3+1eA3O;HV;0A5t)#T1+\W8:l3(nc9ZcF*P79-3UJT%hdEnm&?;^#&#(9V8ETtifdq4g980QIZEV*XI_@E-D!CZ(K0.YlJ/`(T-@[Ql#)m[7O"ks$3X#GjaT8k_CM<rX63Rjn77YU!3$hOI%<ElLpNNZK9CNbQe2,(]Ta;9QXTdHg>g#6nS6H2as&7T!g-1+U4Q8F3aYuJIqf1i*?(b]BIc-N8TVXf[l/NOR2Y>j6gE0O/&K[nN)%><p1oB)sNNK"tk^jsm,m<*(5Do*%DB5RBAIPZ`XFOaY-<f/Q;YJ.0+/[32*!#a,\*k+i40\\Ms@Kl$tc#.<5ZTt0IW/k!%HmdNbJ%2;RK`b&,Os38R<uV@s*H]M.:t&9+$p6#-[.3YBkoO``/W(L/_YdHq,[`ErI&\KooJgjKj5XkdT6%[LN(T2iniK;;QbgK=,p$OPY&%;#1S@Z%7O$l2aO\Pod.ZLp]RBB58%1P@0+>ZPb\N'irO]8ZJHqo/%59[B3VG=qM"JgL&>e$j@,QC'r'Jor#dQ)u654fRcc.<'Sop%2F-4ff#4TUL=Q+9H?D0tD3PO?kq#iED*S%K`l9_2iSk^DMMAkL'',NaZ'3C@CPGEbA8/mF=@i$"',LQPCO%L3*TsBo=l%7@VTTa0%-gK,>?<]j^\S@ugB"g[m`L)e`QA3X,3]q,p&'KY8oBdW<"HeZ:/Y!m[U0J"B/aN$9<2=r")p,?D2n<_GB;C02ps#lfa&:TWrU446%^57h(0BI`:D[)33&?p1,)qIA9h,8IW(hdo;oMDk-<jZ[D:;:M[Tbi6DWdkQA'@JYa<_qr6MT;;`N(C@<TcQWj'9T]'^/WEhe(YD0%AiI&o>EVO9#SAXnqu?#^OiCA$$+37R6Q(cq/3_q./L+tg/N5:n]JFUdiHEBqX9K8WbA`s*=la/L_YD=&ftLQAdFbh(#/Je@AsX*g%\V,a7e.WFtforFUpO3dU+f?S\:UN:KXA(`2LW(m%0/Zbj\ek`k&I\^F"-/:Uc6-C;ance+;nO`1)<aUm/b9W(KHm+F^6Q0I0BDMg%//oC^;q>n#Mu/ZC;qqtV^!]pqhd1>`b[NhlmjEWO9&ZR:2!6P`>M*jchP8keNNkl8(W#,)Si@sqWJ.1nr=,S3#<L+e#\@m\*45&N%.#XG"#5V@r"QF";JX57l$Gp=pj4#dZi_a`@i#`YFHWW4bEE!pC24TiA.iWb[>6NKiSqr&mfB#kE8W;lU2CpubC,8$;L^D_](\1f:%h4EC<n]b+[+/k@?-$9pCQVWa#/nD6cCiYE6nK@'_:UV?!kmXf4K6I6[-?2k`+ulN4]5X9:F'Mn4`7/rYjE:=CARQ$7".G/Y$r.i8%<E$;(r""7KLQ1uulb+Uqj$`(7ell_fXlchkF*=8+PVT;MA+**o2l7HgcX';TVtp)@"o8nhqMfI,8:>+7@lc.?&V^rW5]GJ+$S$tD%=;Vo9O_o#)\@[9e=d+q=[`6e>[\^<pg+'YsPN8KT$f(1ni^q^N`Fjr^epWW>:p>.fAh3jabriug##1%Yadq("?.cYL[=s3(F9sn7%32nGBP%s_BL<=uaEE9j(=-It_e_P*&6.!=LOnZH`c@7SdZF:pJkqA[Np4rQo-TXAA:-?MP'^G0TXD3"u"#B3!H(8.W0!^;e(dYP@%H<!1#k_=U65WCFl(0%j:N"P;8(g"ceJ16"qk=`4+IkEH\@j*9=g#1m<Jp=6poR4eJ6CE-%Ts<u4-CT&/*Z0urZNS\VUC9]J3@ma;%;U$jFs3bJd7Ho&)6<m,+1-i-9k@XR2;a])u.9K3hFE^o4XaNErO8IOp%.C'$VRg-TC5;Y?hmBVulhu55g@Qh-)Xsb?b:W#7]bD$1%):Isj\@n`t<=f0]Rusg6pnOhtQMMZ99l14V@OL3FJg)<Op^\oCcEESia.&ns:Egu.3X7^hmeJ#,lKfl&KX):_j3OPTX+6`k`9*qO%GRQp72-3D/6!?$]FFS+>=9PnOJ<e?RP#"EfE)=O0.t][h.PXg29b7S_?\m3::D2/>`AL:?_pN<Q0!C^:jG:%kacEQ`hWjVrmc2Po%rE#^.e.MjZZCFWRGDssL^$^jfDNu`c4YYN2T5WH\Rnm(h:^0[Eq#PcPLa?qd=<g2Vq6_1Y<,2!kEs"9O-t"N]:r8c/H^"oY2M,kU%@0&hr+5_i@_Xchs(/5_]2?MkmnU'H)=n_0QKqr&'M0uO.2RE[,\tQJep8eB1KhX?u$D'(?4<p)H0'5NYr<QnX*u=-4$96172,roZ%f&VNXi.JGU0sfm.4pfW6-h6]?ID5NMA9O.t`AJ,pnmdWP@9JUF,.V@o't6`0$!D"*"1-jNHF@qmSd+4d?q!KOa$ssHl<-V^-@<31%$o-NgT:k>FUgQ-K\'JF-EgjLNCN$q3,qC>1(iHEec.gqArKr.:o#VV1s-$oZW0SN-NFKA8`me.Xbjt9%(`O8b]rqc<bW9Aq[X8&%%Sc._lpM[uaRfl9&f_3fahrN$H0`6Pe.K"g<C]"EI"kPtn_CG'$,ne_Y7*!c>DFYjBW<@.!K#IE%F)jO*8hYQsd&e+gFAX7l6%',D%G1V0eWb1dGPZeu*-VK64$1jAIjl,C,'##23809@=KTd@r>3+u:dbkcNL2.!DC@K<QrE<mZV5:KW`>>ahCUW<$i<g((>7700!^Q4;%mL#4Q9b*3d;6@4WE\GBV-3c\DRm-WslIBr395#[i^fdZGFm"u#Hn]CU`:k$JZa_>X?%C"Jl1,I]U""tlN.`u/I?)Tt?t-kW:>X5$%Nlp%?eh2ci7t9m-eC=%/$9#b/DM,7(b71SQo-/)'VQk;B(S(k*SL^fhE<-Qc(Y:GQYfOTl0EOMnC;mIAmSVen0O,0sZIaJI>TuXm%5taVocpou2oc1Ka_ba`_WZP\Bg[>u$3p;RJ@H"%mF^^c9d(,\bJ8pr@@X>Y<</Ul,&M\lkCm8:4@/pNV&`["FE=gGFL*p+j[-YW?%AijSd+1[f6d/hK02:lZ@P7`6Oe"U(_LaGcIFqKK$Q>t,Wc\p9jb2,tE"kQ)_knK9;e3FNC5BiPLCY-$l$B+8+Abb\+o2;7Q<`P-j%*>*?e#0Hm4>';d"gXqB@p9YYB0eHBD7*3&97c&f/[d8T;GI?M;>S\N3%j#)@Fnf3A:LV5H&t@'d7G+kpfb@QO;P1(!,k)$r5;]W*%/@M5X,SD89j&LU+@_J1nlY5=1Y,P<'Z^%hMC/!^Kc"Pd4N03&T'4(77OX\SQp3#I#G*8-s]KWd>4FR\&eeP0'W7TRs;VQ'A^FsbI%9M!SCg83uOV#Ymgj'j`][]F,!2)qs<Or0,n3!53PN.P@kG`+a,gMBf=pkQ=b1/t0@b,LX>,GHX@6MJ&6>k27%V_)G^m2q5/'H`qp%?sYP))P6Y#FmNrOe\,L-_>De9A-3^EmIuVtKk_Zrpsu[nVBI:p21ff#LHr<9E>h8>]$$eU8Nocj[F!F\[E=[+.?QIYM;4J;&o5qI%X)8PT3bPG'_9FHF+iffY\QTAqe5WK\7O;-n(-"d6BBL7-D35:D+OQ<[bpJ4KC'?i/(jrHGF<[Sib88Bg:XC`m,M1k@Rq7#N+kDU"%d#)Qm`Hh3bf3j?6X__,oWIHOGlFRp&7o0GB[bsaLD*_Xg`%ks>fEa?^%`r<(ac`K]o='B)UW[Re2Ju#-nsJC?_jVN-#H3t+qb9Vq%U@^O]0%KVp^\sLZE1(:J=Z3*>XLUK"0\^g&j*;f,7Tl%bB\0AF[koWC\'k<om2VA:2rFP>kIT\]^cl8cHK]>u6*h9W]RY7Y4$KS6%!%+8P#HN-43#_"M(lo`k']a`+;,r`_>kdftK5$ZS#7mj&[o;,oFltdCVPa5[b<n5]X?H?S*Z1Yp&)oh2eGVHL\=JE:YmV\TIu"iM%'oV_aDj?OAFrW2t_0\IE'qnV-Tr)iQ(bQg%gU09s88ZW9JR5s5YU6K]K8M$^=Nf%\d5]G!%CP1+aLoZULdn)O2h)Ic1KJ;'ecbB:%O#J)/5:-?4gE_9;l-:fVMpIK5M8CV2c-[)pDp"bVI;HM,p%,WQZeT3[oKV`=A\6^!;q:01YTH3A]),3<a^][`&.$g0KIPP&_JKLQ%jJmMiGm)\c0dd1D/&;MFefi:In*h0DE<iol*Z$f*f[X^K:,SV97BY=_9X^`IY0B[,--o[D4k*Y?9'"TC.+"doniA0GGH#6?Yqblq%%s_UmGA>sK/lNFcpG+;\EYfBKDXhk;hquB=!&k*m$!<ZE34oC"7T""K>s%8_5oP%W:'?+VS]/PWkRCBW^<B+.KD";s!*5"iYTaG$%>[%TNb(S<A^H"<M9-Y0\LHZORoM*B2F@pHqRVE's7/^iR*h>SR=UT#c3QDs%fjOGsEBB1pb;CZtgLC(#+2fbBkNp<_Pr.P=YP#jm%`SE]/>0;o6%6h&:.WfGfc[LZjJrC$SOgN<<XNSfa@I.0.IBfA>;Cq7iN^[6m-E-)/3VXC&e8+$*4%f>*TWHI.$BR<+Qrd`*S-nZD%V-8q4=<+pSOm<'8#\8CgSqh77CV0iRXJL<,b!<Cu_Nd,C8RL5%Sqoor+2!iD!c$U3L;bL<NYQ'"C_Um.4QkZF[hFG'qqcp"/!q$%%=LV<fF`6h20>bBBI95@u9m_B]=[C)6J1](E&/Ot,9J/;r"/9c>m<"m$;B5tIPRX0F[Z-k,Q3qE_V%?jp<Jng=cgOF6:ASGA?-=kF%BYs`21P!R\mmf)<M4P9gaJ6&@*!edI4E4BLnPe)9?_f0+e!O5\e8P1UT'aqOqq(lEX2g'u*4!'h"Xo5D$Nf8Z84W@lK,cm$F@r63%#Y>&1QVq`?\pZ-hR*hMiCH=]Y&]PJ@HpcKiT&nsZk"1\=3/1JC'V<9-0-i7&;Cm]lDk<>"kdeAnYJj18Weu1g_)+96.Fs%)<f^,`%9`rV@B\W,H%LY;7P\ql"7gbZMFgJ*/6Z91RB2&orUP8jtGa3,[>&,:*`uI@hmt_q6-7K9@>P/Q_,A/;:_PGZu]C*?op2cY:g'L0O%Y#,^610%iM_a'[)B5n/eX7gn[1+G)s;5.#U<:R*pbo!Qhi$JmY.?d?Fn:_4%\"o?)cD%=mfl?jOk'eLV[7ccUV-Qa%Yb8%ENBNVI%c;^q4&$NnsL!RRcQfX3bU-"BX4(BJOOUE`F88I(?\<-2U(@lhrrchM<)5Qh^Zbu^rVlD`k)d&5';Ph$L*ftZs[5pR#g+EZr+ah?e%EKmKW(KGH6SJG;WGk,h(ojVSqk.)QTc)T.^T(CWB+suoh:eiVgec0LTSn%8-S8NuTonO-occa):T>*5/%lQH,J2,?@(nGUsQ:?9S%`kY/m1GJD[20,lhr;r!j`',f+o%ZgaCS];G1-Q%ZL.@!niSfk)n%)KL;a9%$F]PjH9o=:W$bbUaZ2psfGJ\CH()QO;U:i#Sg?0(*%`;2<!1<sjq'K]R1K@8_50_32/eika`XD(]b,p6WW_:s*#!mJZJ\IFW4ZUd=9;^-ZQg$?+okg`F>O5_j*OCFF(]_o;_5Q3?=oq[J`%#htdq,^)>rYP,Z$neT<#HM73@_00)s#%gl:*@AtH(qk6'9JSGZ-t@]B+:#+1,[poJ71XoY"\=eG>&D'Q`'o(SW4'(34kE=MBIKY,%F!+k?g$5LJmn>fXZOkl1@RZb8:<.&2r'U1EfPQgo[nSa`OXjZ;]'*ka"l[0e!,Q?)2JFP3C+Z$#b4bl178#A"LniJ)Nd6Z*$r+@3%`[?,so+D9+>&&fBeeCmf]@:)el'?qf=0n!c_"2JR<o0B($coUW4UU8+&'[p-*)!i`RhNH.kmAFYU=`/@3`!c2*%HtAp"1WdG1gpT%A1m'/TPs^KY_!"\.s.6CF>Nt*fC9VmTHD<Gg>YN!.rLZ/>3]-,dMARWBns=WUXZWHqtI=5;X!2U..p=$0QG?f;lEGSR-@M>ZAi07%?`a!"UmiR:%)C&t9*f:9A[u3];Ru[8Cj%*.i#\H>?4pBIgtQ#(?+GBjhfl%]`kZ#o=Qkiq$/VJ60Us*@W)*?6r+*b59le=df+X@e%:j(-^AIQ9kUZ1lo@bp'9#9<QE<fA]'O_\TB9-PQGA1O^Q]We#g&md,b#cg8U:51m+SrjQ+cRfVMPG1Mp68bZ)i0TtAcnS!uS-71[%#1+W81rD+9'QKZIaq!GuHqYmK3:3E.)?E9Bm>$l3L;c*F@kj'$;+HHdf*[,K+HBsm_cB/t-`2o+$k@tj:d:'33@#ChF,Qs"kbO1V%6]$-=O$S.E&!G!%'diu++rWT6`h]aYMhih_1c''liM?tciqQj>`>)ce$qI98HKS++J`PVnc\ckQ(,!ZO<<0o[0f^!C!2\M_rm^HI%FFDpOg4[k=5\jkR+=sq8??s/[SVV)""_F4#,'X=#!QGd2OO_BWd0FH_(:L,d6>N5tN[S@H5^Y>,6#6TS,YP?u3.=U*^[5CaSM7:5%&@Y,*X+o&HP_,Q(\$&rW.e&du9YbHYm4sQ<H#oto:W[r&@GVkfXVlo67k*L]1#4V$qJhJ,7n@jm^*CS4jKe*,!P=9Q/U]b29d?Ug%j,i^X2+#^JBbC*Rb6NP8pJ#$t\^i`p:FO4k%E)#WKi3Uk)#9mVaFec&C10D("U[@t3iI8Tb<nQ08/k^d,o'h.D=M=`0GFa%bXY30%&JKSY6cE]93c9?63MJ7Wm]Y<Oj-W>5Bug*Zq7lb2*gro)YQ'*9WkLW5Tf(67R]+\A&>eik_E,SSjb)\7`k+#Ca-@WL4WI^<*fdIE%EJ-pYfs`YT_3?-;ZWqn[6,TIPOWjCSf#`BK:2U9[r\/Ee0QVV>Gq%:a5->%$%`HER\S=;`d39YSG&G-t2kKmjAYh.^18WmFl=S'E%r]siRT>)lIQ`W0.oo`OU6<30t6DMKlJcGLF@2$NZNGP"fSe\j<CniU<(FqmPV+RMcN,:s0bnFfKP[!1/+IgZ2G]`QM$[Fe4B[u0_%XbqJk?l-nT96O0:pNkSKZF6o^\?Q:,!Rg^oI_iJs:/W;_<#tTns&GJ(X^eC_4e$k)"'Tsl\"FBucFY2HI4'a_Mj0U^PR!hRL2NZ6%qc0Q]M1_8cL!Ag!6N<1tGL(;$etj0\"Kc[uSY6Vnn'E6so%H>7f!TG;fc#i)oJIoMf<5Ch%I%()]M`_,*sclo+I&qCV)Oe`2/-l.%4WNHh`Z%mN^Xb_JqPi29&S1uC*fJ1Qql7!bN@"WT6()H;cD73N1.&cd=HODm-j=H>iip3RCLMj)OWh?t14=sPG.qnc[%j(N:hk1c%jBBUPin#0Pc!HONZ5$`^^oW0l2C^',F1u8LT>-KaQjPKE-dRfoQ4pN;Z<G,:KpGr*3FcoubA^8HVM;aP%0quNF]jAg%<'J6Z"C`p%("rF*G08Z`TN72W"F6g.7/l@"ZDJVPiLo:=8o4nP`L>cB>]&F$2\SFE7AGR>dTW\FR)OHF[<Lm!=Fp>LJOmQ_d8MD'c2YXUTm,\`%%Pm6CL$gWh0/@orim9?#OE+op:ac2caP=u9S$gi".96*.U&aGREMRf;4BA7)53f8Ii*gIrC^nW!:#M`Y3#q'E2?V/?r,^-H>5B)(%*%WI<aP(HhBa(7KiG>J%h*PbBb*3/0^pG1k%e<`#i:n8i0\cFNU<TS4B4-di#K#$,-@OO#?>ta/Rks7=]k:U#d<+d8Rn+Jl06fLd%?U9E)>dUUBa_M(]nVHHLc`>c'"!*Nf)"#;G((UqO9P$Kc[l6GLs*IYoG65</4]!&-=e"FJ$Wb@"Kr#7#O-pB2&q]l0)Ne1D`)=,2%=`9951&C:jqR3FG<Fd:h(D,!!c]a$/=8DUY.\-AX@?A^KR"aKtfWrVP0pM63p$YSOb5NU&-sBtM9(LVK9dFhF!RWI-<-a=S<]$BQ%!`e@8PZ+5ijHj&E:5rb4/qs2Mq+V^$:Hhbg-6oddJWJ.NE58:'2;c1>Y/P1e_,^<4bBTNVrAK96*:`Tn)u_2jfjhIZM7],OH`(XH%d!)D#mT\+]/So=E?k*7Sm7@:f?R2QU(g>YS@9kC3^snu_l)PHtOAJX:C^gT!m+s=3)jM%#Q0#\/<&>ME%S6Y.m*l__=KT8fHn4[t%"3ZZiN,$DpL]Qa'X6DcU4b:DN$Q6(bpR+KMhfGcUl\.S@RK@#6L-nA#SZT-ZJ^MO?69C]q*9)ooX.D+NHtdC/U'$>Yd&!RlGQY@\%Utphq<rBXBRgLALBF-EHi\bNJ!AN7Y=[l"m,HoRS`IfI:aig!#?dflc&+RYkG]+H2UX6!(,(1L?_3P9l:G#WqRE;m-T]2gD?$@j,%MOAr5fN;lhXR)lI/Xh\?J@^$k$TjNV!oX<([Z;8#+:3U\qIUg:fVZGb@]?o-YW_bM>U)EnrZ$gm%=X<<mW*VY8dn^f_Pg\oqDTYX%P(jZk0'[o"C%(MIm5XL-V*Qj/7kG#"'jEt!5U>\#2K_Oi=\_**&ID;3SOXUNZ7J$kNh3hu>FWQs!?,7uC3-pKVZ#ACefT8a0M6;S%PA"t=RnJ_TVE5F:EY17GmjE"8TjrbJ2jfmr;6*&6T,1cZ_L?QpG+*570-4ermQ5:!UXUVl-sK#;ht)1,Xhh3,WYUq,eBUK-9(JLT%&$HHTW8@RELJmlTrkWm6FP@W\*s9mr>)FJZb2`M*mP]YCBa/pem>j&_8Du&"oH*So.-Gk1Z`#?4O)f?B^LAd]f=KZa0K67#^\(md%5BNuR"qG/H41b1FS:OBprbU^tO&+;rk(oW6eo;[(OaoIM4EFj@R8`!33XR'PG4X7H7QH0\fqeh3729Ud%SFI0b^+n`Q,iu$])"V'%nn[copQUPN[e=l'M#LrtW#V!&&IF:DZ1mIk^KE*-WQ1qhhG0qH!e,<M1n<9]>3)"MZ4'%H0F(,G,%D0Ebr`5WEl-8MENF/6LVd(Y%Zc4#,MSIhDN[!T>iboLMf0uV@UoDn[0OGqTdkkZD<#(_ai>"ngH%$>F.1+\=>ABYX!ZY,cX`/T\DCmSm3K[':V/*_Cc`.'7mHkgs%2'(D9F?rgBkt)0DgY\d4+k[)-,WG"p?!I]WQ<QM7%s%3RE-HKmP&Ie:"^MP9<EiC=D;a!>e%<uP-.^h1;$B5NI(4k^FcQ=F0dj`6%1l9#&[!O0t@S:2EdPNlfSO6PY<3N88:4&sdp"3tW5!gB5-YM*)2U`K"S!'Y0p_WT6OUk)hXpi/3WlHB>Q.J^3C,5IE9Ol1r_3!tX%KSS226Rs4u8"%abKo+sYLuM?,pmr`OP%>'qGj#kD(s>o#:TYIm-Q_fO.YEt<#r>Ma_c"s.AuHf&GW_+okZ4^Gh\J^%5:*nm?GerX%<T33k-#$8%mrrOHdcH>+RP8ncALGL(n/,Fn7%C,2Ku['t,OZ*&M`+>dl`F.#PX:*Ef^>SQ.RQ?"ol(5TF:KR1.^LV7$2p(YN\]*;%8s[o'mk$]UUX&i^=^pB,btnl.>_3EQ]jb!&c^Ih'j`:[D*p%5"(`-f&a55fu?]E8$;.&E*_'gVi"NkU6dO+0i_H$;o>H#<YHZH<F%KdgjhorDtpOmKN2C](#6h%*ele?%KL,IhYbmp4hlHe&TOf_d,[62MWTmeSt<Rrt9VGEWO$/"NFa=jN]d\(b]@Iq25n&CEnVSS!M!%2>%MpL=8\q1+7@LSQ*r.["S\0N9ZiZo+<'hYbg1HK!u9*Y-d2A-G'ujK5`JVRgcj]oHR*,hBD-109XV)Xl1B%lK['%b<qM1LU*H8%:#E?b*,9KW:NTIk[:_RKPQpYSJZS<jmp#kH*J`$3RC%_mF:sj`@Ji\FZuBh+=a[ZlILHtE>'&%e+=8CB;`5A!$k"5e0p;L_gc`oB%=f"4bBl!5raAtW]J_4^K#a4HIW#<OscNsrSi"8W(=K=aP^"gB(?#A?A_%+,,])B1Y]IPCaG3e(+e4Y_4D>u0]GC">G#;_C[/)ue9%7&sBqG&L=3:>Y29l<o6B/Yu[_m'956XO7X1j5gAP3!B-pVP>qWEbHi0"\"JM&kQM_A8P1QaFM/12Jb5p)m/sNLBs*mj`)K=JWUYb%F@#lVQCi7B(#Ze2<gbVDbL3:t=d];,mO+hQS./('@UcIVp3L19FQtd#p^.Ts931(6eedX,7#)VO_.9Q"%6SnG!?QXlU+YjY]"O@I%,U<mVj&CQYkYBlj8FXFa[lU:*$=Ill?V9FWD43i(Nlh$W`j4Q7'b)Tj<>+?EnmY-jWPog0gm8uH0._Il7(?^1+12hgf,0X7`+jP!%N(CI$b+Qs+L-S#8T[3eHSfrVu9#QX22.R4@X0k["WAV0C:S!C<7TC)K8]6^8ikTGf7NC6PjeP/d&$n<c&8k'dC6t>`"M$E](Y:cQ%1>l\dc`qe:bn_j`FagK9]UY^;g$N<>,)?5C72IDEc2GoD-a)6f4Z",8%F^%5QN:,VXNPrNoXjZXFOch\M&uD[IF4+ri.X0ATB3qj%TbV9M[Hs>s#0=$*b.pP(/KLtRPstJSs5QnODJf?)1ce0u^2VoHWQ_JQOhcJbm@PuZ)mbAj+k3hVq0%Sd;,9UX5^ORXkXmp'X=)EH%WqW6TH;O.-lbh3^q1Kn(\"K%,(D]Y$2uq9I.HpIQQMLlgpO3d3BTHf7kQM$-JpU1V3uG93?ZO^G,$Y5$R,RWfq4_]\^Njk$>JDG:%V]PZ1PIZVCgp#^f;u&4/!qYUncW>ad(MGmF^+&`XZ*tgg&]^]G>dW&$0k)t[dj.r4*Zc/8'lAW,Qp)PtF3bBaX"Wn"ft%>6/4CZi%#,2Mk6lgIcc^P#64U1iA8nEkL+UdnP'2^F;DZQ7nB-o99DY'[(qK<6lCtbAZBkp!B+rAQS*!BER8r3tsaQ2'dlS4)1h-q=?ZQ._r%`&Ql*.ZO4M83(cB<STQ^70#.ooVCTI`d#2W-qL+2AK`VB;@'UQ*ls+KJYU<h,AFEm/7h<r);[:q#,`O[kI>]#U'Tg@TUqBg,YkJS%`nkiCWHWiS4GA=j3(&k;dk>@M[;+4'[C;B0'S[7*n5N!:3u@[F(t5(XanqQT:lDk)goWAVWoA-5:RPcFb*hEm(gG#D@nD.4ebk#g%,Ag'.XOaJsYPE8[;!I446lY$M53dQ&p_u3VFsr?-]1>\8qIfdS7JL>A5XX9u0i&_d<pjEFh6:pYP;L!](noc&p#NkQ'Pdp(0SZsH%AV`sXTjLt1B'IkgR$jE9OC(Eh53$IP._Tsh7D-?ZZu>Va=0br922jrhoI`e3<1jGJdLPQMo2)Sk;-u5^6^CKZ/ef=^g,dk3PpVR;%#\>XLk&)Vn.!S"#e!_XCrN#X"ot-VE4f]$&=>?&cM0blN3FD>u]KYd2J.G"=X7XrA;ZOomF&ln%TGn6A'-)aY=(nuZFcj-,El'q/%;qF<pOd/dn02^>B18V8\<r,CEFU!Ob*n1YfJSiPKXir_9Nm?6h615)q1NXN$gDJ[(7KbL5f%/Wn,Z76oWk;au_PF"nQm<VUATtiP%;'[>(jtT&n!tAP1ONEdQKmA6L7XN',SK3O?C*SuWq\2L0FRQ!,Vb8,$f$C1R4mXr,:%bd3=u#1Y3`7-on3JOEeAa*Qd3Y)!G1_cY%.&cQ2P-0NI%S:MKRD_SEQMH%c[7*S4V):sdglVm.P@4XmT(_6,R\Ke;gM]GC0X`$kJ5,s8lr+-5)L*i/R+HV.cLJk_%Qf7Q$m"he%;_X'GU9:;,O-PPLRl2DupHFZLf!@s"-*9?G9fG'J:m:T]b[]$r=%86Wp!EG[3(eLU=Eb>8ejH@<]TM1HLMk`XgGkP08QDgr.C6D)%=r'$'T=Y/$KJhH`kX4"Zc-`28d<.UYCXsba.::cSOq5Oik^g+GAddY!7c'ETJ!jWD7OIjsJD#HtW:FlVrL6[RnOMV*Y(mh[U@>(r%:;``Z@;r,=7V'!51m3OOO"dTX^m$^3(cV&:G8-gl-t*=+-H3S.@<[H)[XR#dU0d,nY[,orQnHugT-k4HZL38j>XQU"`+CA=oXJCV%O#=jK:e/(B2g,.,Vdf8c*%="ZJC;q<nGpd$:h:Mn.H^5)ocD'HXJ2[lbjj=0WV4#TjUWI1G>BYtG;nb`IqnG[gtt2"CI;PcF:0`6%Tp6N5=jeS$b?%C@Vc,ht>-51Z#As4;JF?k>EkEh4pE5#4F#%'<A`L1#pQmtBj)L&Q99eQUONC&l\1`.NU-P4O=CYN(@^scZX;CP!%4HpOrMBf9_X'8+dd1fJm'@C[.HRW92?qXFoB7tV=kd1HdlUl`a>t!m*7K7B8":R7$pZBCFpuBG^KB9P%iNo2!L5c:TGG<Er_k;_6%9RN6Ses`ZU4SVmb@fQVk<8S"?l!Z7Ph>g4qH6&*cG4n"R5]EFg^@Z0!qJA(oO&W2)hPH)58hHD1J'qn`T/_Eda*5>j2gWh<3Iks7%\X&dnR.\$^CfAk&-H_P11,G8:RfdKTA+n-:WKghZ5$i]d[Xrb:Pp4u=n9Ul239Wr/0&`DE"\SGt8pIP&<"3ses$<NL3NkXdJi,c!%a7.&dHRg-^/>4ugk188%c&uSD%.PAM?OX9GH#N%fpXt:ef"9MiO0g`)jak[G/f1@kOG7dl!Tb>Be]l0HG$m`%dfC)*WPk'K(L,:'%nqB59qkd85p^mfJ-$pP0-lp!U8(Dd<GKc^/!1qpA\)r]hWs841J#E!7.`6A<GPH8C2neg?H-.:XRZBVO(+G]NnF=;pn%)9nq8[OP%dXY_n;==FC^lh_qNgh3;ha)'C+PLJG(UH<-07!p\+eNjP?9Dauc'=@eM/63^O4LdKXnY4brY)R:IT6]_G^]IRdG5&(7'use[7/;1%AFg&sEDcD?ShI;p`ks`omc]g%LB>8,^I5<=5Zb2\UBgr/^TSPFS;C2/8OdqJ#!+qbf0H-acYiH"Q5\T:T<=G:SlB8q5mTJS2sQ8q%&:i:TD-j8mpq;@DBZfYE2\A%Sfr)X1mXW)4dE0JpKb<0>l?5Oo43pgNQ>W<.%CkQR6u15i!a6i!+5kR3=('g(44dis[D>&>-9XC`%Vt0ZL=ml1=qpo)gpe'/)BK\g>>jDf:di+W@A>mFQ;8$VAB1q^-2l>22#.k'`DZEt=>GTuXC#FWOjCsF0/f4*:PbIc5FE^FHqVdX#%)[/VnhTS`j<'-'^kUV#lL8H`F44KNr6;H?o7D:mDpjsptI$,Z5f[0G2!"9iX*ZNBXEl%3Qb#6h/H<KrP3^A9MagW7G<f1G(&>`PE%9Fc.@SD8W"75pZ"NhP+l#$ef)6,Qp?_7Ls:hA?gC/HDL1I.ukNhW;-0Q8hL"M:14!EE,'XO?/&^1+h>pc^jWU*Z5Ac53Z"8Nu"fu%1C19g<t4OVLQ'qSh"lp+_-V(K+a7X:=rd\/-t@(e`KtX#e_!(6fE9N1@VhnqMp?)3a4TBG%8K$N.C>`1^FU2&[tZ;K#LB9L'?0+I%<4*&fGdNPps)J3O-Y5(;>Q3Ag7?h3@1PMUe^rf3aF:PD74bRMBGW=.0->LkqLCh.b)rBTbe`*;MB+L;;N8"G:cLFn'3,h-/Lb.CV%3&#4TY0EW+_M90YC9<e'49.H"s"3A22fU9WB1N$:`Uj_S[],&,3slK+A,6<EVI"h=d#6Y(FiP:n3=%;cb7(pfPAD"!LSSCT@d99/%kER\p^9d]^rSj(:&*JnP*\)_'TeM@cdRco?dRH;DH2!_+@'X1@BVe<jZM%S]o*^X*Mqf?6QSa=ol,6Ld))gOnIi*<(h^-"HH#s`6%diE,oEAuu>L0"mu;"cY,[,I!Uf58#Bp3ik+kgbdA+-O)gRC78_[Oc-TFTu[$=R05+1MTJ'\1Tm*bDhIPY/^@i%TCO-lSBlnS,\OJ%j;^u[VKPWh;9#_8AS4E_6?j(^!4V=RG#+@'V`4H]kK%Qoe`ph@ldc2i4k-]'U7H11*JdrH:N[EV]\'l8;KnL^!sm5kq;P5:Lm`FM%3$j&>hh7ds)r`#&Fai,!VoL1*]#PGh]--o+Tm%eUJFLqMn0,Fc,47\c#/=jN5Bk*_f"o=UTM^.o1\tN6>g/?#0<CJg\Cp#nXuL9X%.q(80pN@Sq0RE4Y=?"07Q$!UtMu7JT\9lkA`/NL+H852=k:t$7e'=3#`4Fdp]J-:-[+Bln*osX[%40@4LC_%(nma4CAm(pjEfW_=%:K.:iILM%XYFM'J6-t&he$Wr;318NRW=51.peM@UbP_mR5?rLl,'_';-2\>GnVAp\*-$pN<>JsbN]:$6dLRZOnHfYFUT3?[k$(g^%AE2+oOCP+Z)"$;0fQ`SdgD5mFm@9&fD<Vn8HI;,r_)>BqD$CS5R]6rE$qtspC+<&AmH_9g*dd+*[2*:L[\3rU^Q;<`MV_C!K`[(S%NBfl9,=dR7Z6+_XEdC9=O:H`%6q,Cq*=T-P#<Z3&VQGdpERiZte$aCNGq9`&F^[>=Fs>^]kP9b^U7BY^i`o--E'ST=O=<'4hAn<#%jPj#a[r&]*>RL<CepXVJ-$f5K?qgdN1P6.c\q!=*-FLh*=X%)`$Ct%iP;0JaUWo[;"uXi^+$KOH1C4#G=)15j%B>RN?Iu:h[hNWS%-o^fa2nu;Vf]!,,Zb=-.pUE:P0QSskH%Yf%S%p",odCV,75nnh-FH>07kmkFPAU9oVOVC>E<9M.,Q8jP'jP&[rrYY-!ahq1b':83%:fVk3p*4ak-s,RrhR"A3Plf5I//1;UXRP#[kgg9.h)$b-@L)h+[?!7``Mi"WdcUF:=p3?RnZ2nHA'WasmVXFHqiPfS01=/2`5![C%9ApdNF,#OQVVd](7@/233!G1&"N*O(&#YY)-!O:rV%?E9OUk0lDWb(aNMq]C$uOG,5$o(]O8Wu)6uOkG(X4lnaaZP%`U$%CCr'42%dS6,33L@n7`.=;ITjBleCf<^Ml<hkWs6sjgMurfsoWkd4mCo20l`0:(&R^t9,nqb_QOk!DPQUf1`C:2n7h^**=kZ8LM_4B'W=f^A%Le$TL/d&S,>8gse4O)mo6qIK$n*%Nkqk7qH=\DuTk8n&E_3(<VpQ)BM\TN&u+VCf0EoO!@N$dF4QI:Vh'4r$5++)A8?Hfp\J/>o2%[a^7iP7R8"T<V(qDGM*Jhm1*H^L,,Xm]5:kDGWY5@36(HEkHtFDf.$MEt!T-EV>q3+?bc!q-Z'@dl(NH&(/")7sYZ@.*1jtcHCpA%j+Bj?\h;S)PM)Sh210k7ChE:h3[2.LK.N\X/dR*q*pR%]'J^ZGr#GKm3,ZRu0$L&E(PM/9L>I53L1!eh!-ERM?!0QcK\dd<Q)u'h%9@oJW_r1@06VWo1f1p5<FLe#Gn'U..>aQqF^$cSm=g!9p=0h73'hamIpf($%Mk,/>O0#lkA&/4Rb=PWY[eBXYSM%2?/=G!-l*e'"%PrZj21KWb_NN2\'oPEaIkE;4.3BDCDe$uW)H9h2n'F(:?fT,2q1'tD.9ni9QGf;=j[\H(SmF:?_h@4_XFh#Q0rg:)`3dNYjCKB1-%p%nK]R+=r2*$OmNeNQ@dU"B(T/ctCTd$:]!*LP6;rr#!6E-6VeVdAj]?"&DVOI$M>Mh\S%%^'o>"5>b=I[_C.Q98-NcbB5C5$l5Z%$E/Q2;J]@/pjt,rCjqb)PgQ057&c0m,<cQ-%8.'S7BC?+%L\L=ibD4@O*X7JIlLk7@IW@:cu^SP_u\i9iBuIOEE!slG]8?T=3//u%i$.$YDg3.]Fu"j)j"\5!q"Tt*L$OO<55=2QiP-mem#1#l-+dOOiHjpI07l3P?d!!k#I/2sf:>_t&<P:8p#j?2LhMY2!lWY6n'8VG%H'$u8FY.L3?i1$37jN:-hH8mVKgP#b8&QnG7B_&Bm+iHfQ1.+3gZncq0ekU9$%qBuLJ<hDhOHa<\iQP&!/"L*?aZ^iRD51aRr4$Z%0+9(h%siY2od?8o%b9?$66'jq&A?:^\(p]:rP"a[V0Z&6@,AJu\jpjK+CXH1.jMZnR(fI?Pg5J;P)u1bQ`ArlR/4C<;#R-E>AbAZ%`B$1>rn"ulbunn&?-)U0=/V"e3@F*0*V+/D3(6%(]C%;krScSY57lQ[V0A:/3=?9\+RW,B^$pGM+cT?)9XY"e"D&[[?-<g0G5@,S%SkZu2Q&:6`+Yh$3ggG<^Cc2E!p&4us]nO[)m(TBhrQ,aWEVH:i3eDN0pJHuh;HGi2^s0uRF=K;^^5%9_\nJ37CFM)@.p(hsTN>qg%H\(ec0R*81;RN_cREu#V@ISU)%GP2t`Oc"W5@6gQmW%iW:HeF841UjEfL+OZB\Pi]pT='=;>4B)+0kP;qC6hKCsZ<m*U^_;CYd\j%bca_lHV[bF'h<iCEOkOUp1\[+N0t>?S/c0G+X_R=VWT3!Fn^4l#A(pGZ`XdL!n/WddZLh033LqKjTG,J+"C9-#p-P65q\W&a.H):%2^Y0)K:D7rUT=*TZre6n.s=MR_t];i9RlO_*Nk5Y=oQai($3f;-4sEQ%`?F"4ck(P`,oEKGM/LoKURd/:A$j2d75C,[>!=-YdEOl%#Lm)B#uR+T6<J[-*6QGZ4Jrsd@tsB7.?S=a4#n^u.+CuR68W>1Lc[:c87entmZMIRb_LDOW+A\O$bt).5lBc&J/:C]`/ITX^$._T%R4e>+$Dd>R%1<a%RsrNp85nfsVipE]XA9e^(0fI13am*4mAno\[JtuhVk_b\:@s+]c(;Rt;_Nm?F5f)GFRX[YA6fN=+XYsH3);"8%H0gY-*8HQc\7'qf*[LfM!=qm"BV+VKU[f@rRU\Yg4#)2?8I[(+nNU<^W,:_-IFe?Y,O=#DDmPZJ\V3TmO.2#0gpaNHO^QNS&Y9%+%@Ij+^>>?fP/o9t,fS>632@--g0),/aVB=X/ej]=eeo;2LceFWWEpp6AM1f5l/#HB<oBP`umFPfslc^J&W]2(<ZT3XD?e7eK0-@:r%;bU\0Y/A?ar_e%L1oSr'+H!NV2'V1=+YWtSbRc3jJ:Rp$1?+cgG?1u>CEG/"^o9.r')365N3EQr'KOK0'ak#YLN.hYKaeSlg61a.%l@ALj!$FG2c7UnD26%"Ig#/m>;;foqr1kt7Q(j(V[6?EDIc(!^ktNGSUnJD<C#DQ?&8Z96:)d1\D]Tk;Xd#RTld&Xk:X?EngoXD\%*7rReRN7Pk7);@So=5dH%CS'd4@eYVj3!m0`n22PWfhJeQsEC]+\A&KWS;M<+lD/E;Gt=H6@$E9;$@Ft6caJ[L%0PTjlh@&L)YuF%MV7r$dOHKYlOUtf`RU:(\`-<BC.lQK8Qmf9H;MphW'Ne^,$nW`?\.I`QKNM+o'&\?KolG%hK-&-Lt-0/EBkGW^_@.cXH-J^p\+UK%_nO-kLWoW[oLddI1$OS2$Iu=m3=*f_#TN&(G^TS'hN'??<e5\5@&'"&DKXK=pGit[qPZiQ1X,?BnbR%]Kfb+^1)5QBO'd*)QZlSr%7lY)&BCTg<htYaC!3RT(`RC]:An!XmbIu]/CM/<pQ)5M45App9(srfA6#_3>l]nA-!HB:6qerg]-HZ#PUd9Y[LTc<S_.^4,P0I4S%m+Gk3?;@o/DeZB]idnJ&L-4TU.I6opRr\%9$\K&UgaG/H$S5T*k!.afMp!%fXi)0t:3<nZ1g7h>K9t\5)3j0C>hIDJn-E!\p[bLl%Mg=;jMD3&WQ*.SqV7am/;nD,aK%Tm?,F@liIJf3aEYs7'Oe^7*L//c+j1dS?=&\<O@gpF%X(_>e5%@nF&nq59n^Mgp*^n.<4\L`u%/bXGYHh?/24.@0r.s<+5,&4+)G?PKC1i#_!e2YZ_\a3k)`:QLTr!A0O&=*b:\f#C$PhT62A?oV."=N^E`nQ(Bi1Ufl-$*oZYWS#.%2s]9%5o*Jen`Ff<ZW*r`W94/\/\.!pkoC5U(Cd)LgF8KQ<5Yb+`KIHB>+eG>WQPNNR,<s6jr'>^IV8$=`\X.1lgdW;/WK*lDJj<-%V-A"[+l;?*,E^:&ikjqa<X=-5fO9E1=O^C86t5lCH0o1pa@VY1c+?UZ/Y/Lj`XgLZ/l&7cVPSld\IPEcar=?"G8$JY+oU+H?"]Zm%j>IN:op"%f>"[tt`D<2ab0\2%H<,un[$-EfgGIP\E;+JBDV$t;bVYmPQlBQJDLA=F`_`#0m$G+BGiY0WC@HbaReUljOctNP^e!ar%.u&l_`K6Hrj8>FH]#cO;I@_U"eV8N7Y#3\C4^^pA.'K+>H[h*<+-JWK=7&<&HtFOMpT+U4X1h0DD94N24X==AZR(\d4f61XK!SGH%][X)=#GOjo[7>ZrLag<SeK3k![7+,+Q0%:Q6%OD\YHW758juF'mIJ"S[3O5NDQZ?pq114=0S!b#&P@VQRZ\Fm96m[fos,V4i.*5<%'GVRL3M^Q$,Plm5=i8Z.V&P6Ua_,`JV2L_gRDtaRHT;<JonMnEe?5aFL-134W)r<qm,B7r@BF2:_I6E%%XW_nbcKi]L/^:ZM%p:u%d'S9`Y]""AT)mud6@p6&bQZrH$:'i6\X\B53]iXHi_ka4$.*aXk_u:>ffH4&@qLlJ+c%g309?\n\pLuPqYkV?6KqH`FfhS`(/ON&%%ZjhF"poV*';\GB%]"o5LYoL+/#Y==TWb@:aWZJf?E5OGC.V9@rQiW5h7DiPLb.DeSMeDrT,6pXSUqhda-ga'L@iFD.D<CWb??O1%iqAtdrJ/G-pCe3Gg>mHO[m/&pV`2#7l!$6PY-`EsSVBGd,ois]P$f2i]7OTb<HIRM+?DA0;k$r!M*%C>[0aVX%?1?JPZ5s@-PjWM%&NVB:HV/B_Te(s?9'Q&c3_FQ0fV^F6FF[L7E8+[HrL8VTdcIe:@b\tZ&)am:s+?!OoHNo6og/]LUVXmc5.m1sH[`p^jePK"bqbcD%5?,IO%N_q4g388fd3cr&\1Yah`45L9@K4b1f:gMLanD'1I_u"LLL%ioQ!D#0P;4l>ifi4Pf#r(9[obQAr2Ug#/Y<dt<CsfReU!'>%#qEZXJW",ifDkk^qXYMM-7gK5[D,m8rNM;g/WbCm=?Z&j`\Gna]h!bplJ,h?>\VR8LCGkk*@1*'D1!k"-f*<K$0ifqS/C>glj3O_%983>JZ9&G+_50-(6Z=1Jr)K1k->0=E1sKSUn-bZMTs:KZ#9K?)gG:d`)eG>.ZJj4i>&&#I/V[<7AY8TPl%T*c]s#7Nh)53Yq:]Aq%'d9rUENO.'5U\&%4ia7DJY*a:A^.^Ao=u87DRWl+Z6p?j9;GS1Ybt4YP*S,123Nk$b\BO!QK4cu3Ml7clW&p'R2]Kk_pbT0)D=I!%`)SrC*BIWKX7SIpfBG8_>18c,R*jFT%!\[l/bFbUW!QtIAuT[K3(bn3Cr-"kXc2qdbd8L"a/bLdd]]6-NL+b!dUZ[?A7C%Yc((X"%BYYabVN2NMF7RfC\g5Bf!tU9&,9]D]W7L>C4@"g,K8dhXL+[e]Y,Hl0*2^:mls'g04l]tMj6=uBR7LA1'>,0$]MHZZFj/>)phjtW%27ejoVfpNoX'f#?Y_E9i\?'$32G^kG[#;oMX=,6F)&/DQM%tdf&&@3CZKrJR1pA__*\gNbGO^Z755L,:+33;J`Y=qnFK1^^Z>W80%f9dFl39<WlWB=N+ga-Y6mEMfqgL3eH^LeeD:"Q2m?I&7L"*9,6bM`UAN*'-+!+9NC8Cc80gh1se(G-C=);lmc4sM_s\!GIdG+0,=%&VE86CbklGY^pEi1Gq/*JFof;h`QO:6dtn5qJ,I6Ye#HWKVsb7I+(LY((rBHiZFT"BI27q>DO1bW>uM]X7a_"U>k"!a7o4$pOhpH%4TL=J4=0q\WGB*e<KEirY<t1?U:ar,Lh,i3"982P/V`UL!H%`^RV6S+0BPI@rE]"Oon_X+X++pDi.g`)m/Ug[&kPLt2;uD?\DXc+%fB'8u<=`nZRp*2GaHuC*lD(*DiH\D]7HC0LVj:YVS-07pk'4A.co4^Q)7WeGBha[X(HT"86h8(#@GTlkc!.0(=G+i,c1*h6LkH#!%Ws`RV?R1$teE;)&]O]p0j.668.SeS_@,k8<92eFM)^#m!63?+/FWa%GDmGp5Dc`p_%n\!p:YU(;oW,3mVP3&bW7k&[&'<=D!['To%0?WQP^hHkV-9$/a>pgNT3g?9Z@S:(K"A`;;#,7Ylr1FnMi,p+u[>(:A\tE"EW[FXMkS9CYBNOVT&p>t/P3m[UN,$Mf>iETM7%CTN%AbI`#MH:Zf+_H?DmeD5=KDc"5VE\hdOZO[JApee!j\8H3T7C4d^NTlAYS@:T!)l>f2k1$80\&mqZg#dpc2E,O[sG84^7r*JgO798%7h?FEYDeBl]p@Y^R`MY#0bmN`F;^-A,n_j_4\?_J1t)BCg7?8_S?L9uTuE3O0te2&)g$quL$[gaXG.EL5jU6-`]VGC-`*/4:fqZ$%iqVPTa7G2`kcU'pAFL!!8Z9%ZN/_Z?V:bej85k`9cm-Js&,)uu%fr<acEUP6=7;QGm>Mg\d[^L#5re`tZV,;k'<*U:dF61LQ?p"3%qRmF5"(A2L0OK8-&Vc60\Mi":'W^*3@@R\I(pm%'g>:FZ]5A[Rmtq`kgGEunjuKudkXhF[(#hM3X,Ti,EA0W6&Gp/mW@$H3`Xjmk%/EpS[B'64lC`YJ&Xo5l`$7m;k$6T,-^SWR(OG=mh\eO2ATLi)7M_)=DOY-sXb6JZ5A%GL?H4r)1ja=q*i\Q!6<M4GTO$SU+e&P[&%5ZWr$gWF9G`7_]>`?m-e-&^3/*/+VeA9qUd&^hKa]38*D)2O!R:'p-XP=,$L9#u'a6l.%P,ZsdXXS$.KS(`7uP6N*CO/MkjAi#om%WD1.pd;(A"_;Dm:I[NZYPI0a]Y@V$EH25sF[d#PGQ",sS@%V1=G?msE"ZI2*d`cK)qL4dlA"G'TKEF&,6'SBuTUc"g/c^e<5Ue2A%4Fr44/IZ-CZ\0:`M9B">GXp=:,2MSc@6;(Z0G".jId^k"`cOFac(nq<hJHrYMELmV)RV6RK(0m26Ae/;J=S&4J<7V4f\cbnRK^S"%N.P[k;G&<gC,tqJ9;t+M*ju9roGMMXG?D+M4l3Ti0KDRMnQ6!\NS!>nX2YG/NH@@LOj0u9/nF3XqO0&\!V<`-]9L#PDPeRo&'-Ya%&24o"K/6`+5ZT>OELI"2I@NQ#Z\WD.+B6e=Q)EECcIGNblI"CeSt7BU3"O_])om!>qg3.Yi?fj_!:Lq;]sjur2ZRl1_n-%%W`?_Z%\<`+.-j?(-T#3'XPg:NI.P"TnQEcsY44($^;M4<T8RdkK_$b2^W)f.6r`3\_Rh0T<=%1*Y\1P<7M+&Sn/gLQdOotgij,XmKRpB)a%+eq''N3U"LT'1dS,I;cc(HdQ-XL.*a1@An)U`^<,4Y2fUG>_QH<sF57(e`^mcGCLC/BcSYiB74i3OXL;(1[4oV3#_,UpFn\]t!1$%B5$7o,-*u/=%$H6H)Kn<G%%W:[+fSNZpmd9OX@$PQ#gZ1@#N_2[/d:4E6\sNWHU9b]6c+q/ekm/4'/'ZKUuQOE-iY-U^T9S(nrEB%"m)[/GuphD;0)OV<fBt3e@8'6PUhk`8OK@LCGOI*=fbFt%9Ys9k#=(i'g*0Jg<GR[]Mq9cr[+FW8]]OR-ltBjQl0XuUeX!.rO;XM%0TU@^&/q+O$8(l=-maku9!9pTK+J9W]-Y(sKGHR9,b]F=)C.293#5RI+_YI9#s".N82&XBfP*E1FImHI59'``D7:_!cYA0=d;O*T%Xlc/)^lE<He(!ehSs;YK1?jD.g7`(SR@^*NV;.Q<kah!aVtCSGG!',*.C7^Lr:<S-'k_"cOck+@R/T*0pUKIqBej<bY*&BjFITV.%L`X4sfnG<rp;?_=T=i>;\I[CGrn<R3O+6OEiqq8.[!;JJ94o9T6Z8q!6$#/ndY7(Xgl@GqJ!91(O#pi<pc8_b)tPq$lDDApIPBWK%:66J5%#+BD?$%i[D&`cGCND>MmepQ"h];;\(j>(`')I/VV0O6HhVLDGp"e>Q;ZUYb>5n&ujH.c:[o8dj;=;1<bl2MQG.MNLBCXL:%mFu5Hf95p92M-1[*e6l&QkC(bfV=h(qh,f=cF;/7Y\aY]g@[Qi_@/1AZ.emG]:;:Z(nmPchP^T(^[&t]]^)FmEq'Y&7L$0A@L"eI%cSOnie'#V_\7-l:EVVN5_cM4$]XimD8jj)eIYlUNkN:_SD&8.%2I51nGRt4WR^RHGNEAfIQ/PM(QBIneN1(oA"0r"@%GS0HKGB6@%A%X.[2(+-"&g/E&pQOhT52tN=X))P)VZoZu@YcUBG@Et'&Inr+bp7+h7m5W-HZBqe(]uNVM$Q<g5ki"o;6VS`&PbiL-qMGsoB,9K%d6fI;j0;;BImCORM@8:0.f!>]-`!*oGAU[-(HucPF-l<Ps4.kUHlNCD_46kCltY&=;9tc"3P38#[fk["3R1*p4]RKQ4L`qN$bQc#%2[BFD&5ggF]hG>iL3@`gT$ID#`0pRLC'-*JXZ!Q8O;1U,M[8BRN(!C%nNeGpa)`*dV[BH@Z$2J*(Mo;f*dkBER,:^^Q=RoZ7%`lF%\,;S3K>$G^a:uH:^c1PDTk)o"6\Ca__+1bd$cX&,n&9@ti)'=p7UJ$Xh%.G:SULm/>72:b0k-S8h_[i1q*],Tf'a\`)ZVLG@i9a0%.7_cCX4_K_OoGtc_0!Q1odCWaFlWo_XTX5O9XP[4\T%/d\)lt?>^u"ebgQ=+JFNn>qmPEWG:)*DS!E/RZ^kGHK"($-P@SV+;Tnno%19e$6bToe!SsOZ7llG"CjIJ\-oYQu_4Kn0#o'qJ.DdgntbFnn=$#]RXc3%>h-N7>ZL&8U6Z_cFN%TbGSRel9m\N^]eiePV=Rj>_.%<O(nmYr$?aU/9beLKh$f=qXaN'aKRPn%P@Q39'!Up8EWS$-i"OT\:=Z'Pm8=#blL\Ni*%?*.iDX?WttomRO7e.6hL+(S--@QjTnL%^.spH]EWULb(:Vb#`h.^RCSmTr4._2I.r_MEcRg3A"RE"m.9@^60.(NR!r3>LiT89BZL?;SIbqh@L].=(@+AYn'Ld(`7<3gbY"<8%N\5jtro5?&m5pHO`Z)qfD=:+\>Io=Qj'FCaPS_>$m_gSB]n"L?81Z91@,aM'0jh$d<pR!HQ5!9YZe'^5kaP.:$-6#H3t]K3If'g:%<Q`EV^c8fV"c&Oi7K]\[jW'oOS#+X%W/o2>L(_Q4lffB"(m^]G@`UL_T=M:?%E`q2%V2^;8q]dneJ9sU&K<No<bn6Td\\4KA!s@6%pi;WSaq8%6:#EmTZkd9)L.gj:naJ.`2-lHgCb),fL1kGL83Y<L(EF_r@9sh3O$i6_Ls?#oddt41'Umek3thA7G(#H4HMBL@Z/iOI%?R.ol(<K/,(q^K;S-+j=D%fL"m59sS'GZI"Eoh]_,3=83Rhr%FStQGq"UCn/0>Std$E'VW.f1E7CQe@,)pqRiE<Ipd:19+nT!T4U%E[`/%!J:g/O=M7Bi%^"C#KH`tGpusi@c<#t?Jue2"SEb*H7:_R"f*S=JH.;`!i^\Al6*9BLl2@]$^GN$V%$uV?nTD#q4]4Rk_;_Z%`"Gc:7ELZu[2i5i;<X0@d-AJEkTTM'C9@7b!7ctt$j"Q#knNr^(M6c&+DluD`H't6I.1onM]^S10b9g0+As&-.',#BWs`;`Z,i5q%b(5p$8PKZs!2>EM8I$F?Hq=VI41H!qh2BJN2l2l%rc'b!An>VSXLMG-VN_E=HS/[gp,`8V!@@iZ'LFqUmTmhl^,,S==9N1gl5b5o%)g:tX2JuWgIdI`H!%tQM,X>1qmjc[o%bk16F0pSSBuH@<TEji/!ZrjKKP;1i0EB3;5-<=f+B4f15F$RPLE#((\?!_e%8Bps?!imj%[V%pL0"UFjW!21H/Z00T<"4u`_hqifdT72GZhd#Lat7PVD[`tJH";mP6.FY,Ha*crkOlGSB/8%$Q8G`!hNmmt\QS0`%NCP),'4is%]96mWN=gu#9TU1qq;)<9PS%Y`YN4CronP0PLLhFV17++e:tG8,(,9sT$6l<hfr^A,'Fb)44d<+l*D`b9e(^9i%+q7sks4B!VB-p.%d]=KF+Q87O`3/VMoe*q][UD=%maG7^q;VulBT,@fPKI;AG9cJlT/X46`T/O(/T57d5+rn6kHquVNU$Z2HgsFI0!s4O0[1e:B^",E%7<bAQKFLLQ7goH^NfN-[Vl0ZObI#4cEq,p8QR;c0LRLoq8V]L<,A/'k;N@%RbV*25e3&Pj<1o`u8F=7%8j4g+HrK<;f'Rg2o_eF=%p[,Y6.6rj$U;1B@>(?Og^"hN,W3*$(V+FhWItTOK3j<O3I-ct4'0+rMO=.Fbqf+;<1D9U'q=u/(WS^gPd0]PaN3V-WJFK7E2?cSn%OYeZ;PT9/i?D?JBJ1M*N<"d;W3>#+bU4Yg!W5P,^oHAFP^0&j@Oj;eR;7Di(!aqJ//9?uAp#=Z[\4rh7^+"38>"(se1/+^V12HS8%?TWp.SYQkBJLiUMS]JjT44\H="kk[V^?KJ<?njm90b6]q-_"WS0YW-*bTjt%ji;st/fQehmMqADJ54Nhi644H(`0%:MWcDDF`WaR%I;+m"!0"tg.Q%*nZ+J&bG$'h1L)u&mk]sl5JK)0_s$S[D/eEL?j4Qt27&K[ISo6qo4;Gp"X'W>-^Ac,MR4`S=:Xudb!\QTS&V`Y3%Od/<a0?o!Z)62;D$Jt<5HRg/mBj3'Y]L[A!M8fBF9<s&#fS+V-Ren&A5AT?Ya[sP"5D5?9;[)P\q1W&7]L7AH"pJVEC,VqZ5F>Z-%``)IJZS/F:@=3)2DGHRNL5BUWrG:6ORrZPBUbHL>QrOsTe,h:#'(_;)fXAF8K?GE\RWDGV7Z%!B=QJ-sI]G>q;G*^,`a?P=e`%Hd%A&^>fWB/nh90=f0Wi\'9IRX!HGdX?Wa7jVH*\R_bTd0`iIZ.:o+1ad'hioqJ`WLN9p-7Cjk`9PGD=JmpRh&jQ-+&FcGW<TL)r@]?%+^LtQd,[%%GctZNhcQjY>#N[:3EI6;+bgE9UH;Wcfn;'.!_D&soR3,!,kpmc>FAR489ESAOZO<e]$/dbGqFffD0l.`Cg5Uc;r2^b%;_N3gFrJCn%"M6AU\gjKYm!lgiQF[uUY#)Kaggo\/>!Qr\9YcLBSZYg<JE9cb38C9g=_Rt&.=m,5AZ`H%WL5qa&9aIE940'P@VU4%A[&]<!QRIWdK8E=!q=@2^(?hZkV)c2^HQ7P+OV'(Wc@^Ob:T[rbNp^R+]3HqP:'asWr+DIWR^loT#_.,KP;ZqGtd80gD,A1[X*VB%@@DJN/bobLJb\8:[X5!ag!QU>U6As+AD>()pU[-q!i$U%dl.NN:@DH_6_'RlPJ@M-KMde/9!$%eS&k"@A?'L#jp(Bfot0\e;L)6b%!iE4h)6'*"dRa%'I*[k':8Lkl_SAreGh7"-+Yb^=GgePGZ6P\>?P>aD9mG32'(&t?%oj2r0Do:oYaV$*al/d(^JL^JUC`n_^eD^J%!]/p`kJTNFO#rE^6[3K5==FcHN+lNM7a-4FG8+hJ9t!WdhUu<+i!\S5]="->STQO:."]4;b%EiH#@r.>MSpSh^=Y#1o>S&8eS:'9%(gn",Q?mG&[I:LC,@l'o($F>/m81?=[ZrGpXXtkO:$Z@40@g!=!@t0/gTeabJgrq4\a#-$gt)Oqs1F5cXEjEK8>BK?*N.npg^=XP%jQjCK%XrXgHB3eY5Cdrfj_5_VR3"udTd=74TfLALlpO'K(EjHPWF2eR4d"ob]+t4-3N4's87P3W0HQdn3;$D:=k=$f0KL`!YO+b^%/dAabT1'1BO$+bUS=Lb:"Ed((1s(X/iq[h0%nooR0&,h]W-!0>+fM,e2tg?RI(RRlANuC2YAR)S&/![(<>PJ5qZ\fKD:so@_Np8L%V&kQ?PS0C(,Qm@$c$Q5]hLjP.2I&5*CAuk"2K,&%=m3c[,g.#q/i=f/,;sgeLp^26^IF/=Yo7)(D=Q:XFD'5C*Pn#3p4N#`XICso%K`:O=B`?q7PN(+FMH;4kYNje>KtAj]+0Q%13#+cLUDJr)24RHe"a'$ULSs*+)ADLTISum/XZnul#n5*(6K1Fa-3DXg]L2j4c#aVN%YZ$k(`!KkXSBWi&&-7$kosq5KmKD;i3Vdlh#3#%C:5D/!h$M<oYS#oD>Em;>WI<@rHU9[E;]LOe>oP3Y)+2pLm,LC\^"c8pc[.lg%rYOs`%3O[qhpc4,eji<=(eMM'1)/g<>5[iXfT3k*3u.;NcAsYRHh1aMcXL(<;l4fu$^Jk#!Xo.g^jsqs\m+;HRbFB%#$ij@:3,,\%d=W^n?_s_pbQDQbY+0F[4imuhW0%W3FE8"'hMo=,n?d=Z*^14G:D;?E*d3Ib)-aFd@RUQ?I?_J-k9i^>:bi@FRDIN(@M&(=>rr`H%Ij9uaIQ?[i(nU?WOlIl10^$s!Fc2[,[cq#\0lTApGXt5o.:QKiV3;:);bFKQ.)gM*$h]lc@0s[1@i@`?1G'^+5VFLfr"*9dl,WRd%?"5B=UEkc+iS?eP7f=5D\#pr;p-4bM/[6IFC!Q5B5/rG,h.n%-o&aNq?4DF"B[Llj9PV7$=W"1_C/tK,N0[T.)X9)M78bA'^ela-%[A7Ie^;n),X,3+/[]QJYbggdf4C't'NfBdY-tXl^Ke70+>b-qlHtD(l!eV//.-S-c5?_dkZD"M)h0/$UCO[G@6@]Y]6-Hq"nmeco%'Dm/UmRT3nj0"cOJsum-_DJ/Zf7AM"IM\kTil&JrY#tAFW]H^t"qA27:Ke;[`DD%NB.7Nir5,Tn=%D1$T/0%."_7Ts](#Nm>=Vk"%T!/^L%pqt1LJuE6L2tb';a<N_KM:EemX@8&l<D>1rEZoag1F,=gP.cgUu9-!HDmsAG<(6$YU(X&K@jdZ9U55@;=g=3l"anlQWp]l%0t]Pq<In6\knUh\4iblEg)gr1r;5DpL]6jJ:>EVU4t/q0'fMF5eN*fH%YW+4a`k%^iEQkd$[o[%?S[7]Ji+.l_q&&#VSU3I0,/dR%UXbWXP(,_:eB`bND<52+1,>jm.`Pb8(>e]hhRIZGGnZ2+].3^RCG?:JXun4");:isg<?ml/m1>q`@*P<1=."e-Qbr(P#(N-JTl_=%)dA8Sm>o8_XGp^4G\j0UE)_!uJOcuDHV>*d6lm2ZU4Ob6NiC4Q^U_j$O=csR^FAj(dd-Y1PKpLUrajPG&\p_Mn\$e7Ik(RO7jM=1%idc(9G)LB2[JX`p+7haMNL8_8\HaB8lcBXoQ`FQ:KQ;D)di56=SDoCc/+um/hli3Hi;Q(0>!>"NbViIFU)cG>Q*lZug$_0_+?Y')%n]&/Z4I8bK'rWWS2%aHX"&f*.h.a,9A>q#a1;C'5JIKM^;&igMbpmua#mE+VS#9iY?sr_LCB(]LG@/#3p#Sb8o]$]?C2isWrSD>(%i1V=M]'DLP4^5LIn)Ig+E&,>=JIoAc#AQ/p0*OfQUP5LQWC`6&'JRUeJ@]erlEnm-#H@6A68%AqGUJo<*3l<q/h>Ymc8hJpIPO>u%KH*mJe6^;GkH0j6=UTqrs'k[:AY,"WR=o[qZ$4SZ9-c=@!o(-4*M`5(EkKW&q2jUbWalO@U.F^kN_Ng/Eu3;/nb?(+Qukk,X,7+o%D-nLP5n1`p0`;J:d+0?uR$$stF5F\a=N%bLcZ2bhHKB.5[I(A&[;R^uCm>s$CFtsJQ#'C,4+"g+=(]Z0Z[&e*Vb:5n,t3IB.D4q_%p+Yk>TuH_Ra4ag?Vh=L_PLU-`nV>cs^=,Y6HfNb\HL$;,dgj"NO=upFj;(m&^?])CR7/[3*fONgWShumZN!Sj_BS'Y6!$fL%IC(X%Qs]7C6Y*;C5m_acBsu#)IH80^3Xe#B9+`jfFNn637V\.1iaU'U0T?U$@+0J_Ikm!:-?Kb3HAf2hQj$s-cq'V-A_r:PN(Am_?&:48%4!UD0g[AS*kA7WI#lB+mrq?J2@W<K.F^FlPk/._)e8XBMZ%o%'F:O'g5@N6'c.s?qk:iJ;S/f-7)aDYS`P6P'dk(h#C2A;=mXT*)%_kU-t[:$*#Mkd/'O6>NLWSu9=@EQB%s0b)L.@4b`LT5fj4"o0QmA=cBoP2=X1$mcLKSKe_m-:.l.7<G=T>l8lRigCZ%879(Y_kYU%.G#ud#XL`,Clg]U)(N6]%/\%h4CI<b``cWd@7>4QCK!nso>Q#^_ThX1q%YKH=qf4;__(E2>a1[U1u090W?hjdM,?7.2+FK"%"lp2%gBJ5TeWS5jUg\hu!=&l.P*m:pSTfd$b3kRi]Mm/P0;RE[lIc<SPd7so.K7eXd70_]0LaE?V>AQ=A8npN&@m:N9KO&fO;V1d$,IT<%\3J@)s*Ib*i_\\JF<rr40D9p5"@QEWPii-1p$S`$cDsT^$VRs1?EcAS_]B/!=M4Sp,rj,1Vl=_*^q1^VN"m!8'k@b)[!t)b\62RC%.*Vn7\\N:?LT[q4X"LA:DBI!mXMC$p[:f@iBc,IZQdeV)45]YVp[`nBeKL<Z\e+2Vjn*H<ZgQ_8joXoopGCSU:%rn3a&ZX"Q]MM*%WNSo4"U)BPLg]F2hR(7K`k:AreO-Khp\Lsc?i%r::n[njdWF=01$/X"+uN$Z^:4+^osJD0HfM;:CF"E.>3bPp?)05K9Z,,AYC?iJ%q9/r9SOi:uX.Fp9ZB#P"+B-T)aT-9PD^T05Ze7"n51Mj9H*?aW!\k\)*p(+cC"KVm?O*LgX_$tFp/:q\Vs]>o70dc'(T,S\qHg2b%;oOVHE2)Mh\($sB5HnTjO15c(kO'o)HhkqDrD3gnUCVde.WkbG$<+@%&a[haW>saS1V17[n'bFGl.m[19]h?YQqHrR%%4;VZ:qeM%2aOVc"Oc'g'dWA13RbY'NkQX^1)NT*Af`Z&cFMkShP@P=bM%RCXs&lnO't7p<u`u6ogCVO9F40^qi0]^m`9ccg!,Qa$"eulaRcr+%r!uC]j<-`]?+7kY*%6X>n9K*F<?%%1BmK@)g&[#*V'DSY[jg$1XiW'$@t_p1cV]#E^f<=37,5>2R*d!X*QKWt3'Fn8Zoa`j#RHp?%DRd+KGG_PIDaAtDDGshl+\'<*O&JBe(o/C$_/=CVbQ]"d2IuSYi@:\e@UrnAk/js"Q=4B;0CEU=@7\Cq>?_>%``fa)l/XRch![oB%am"^Aa0%7nS*qB((gbc9/(IDInK?,`>AC+]H,7uCoD'IF*@!&ao_(/(Pco1YW?-*nJ?>'30Cnhc_2pVZ\4h8mmL6BJZ`PuMo\P<P%[P=u6K.s13dfAsE">H0iQBV5>i-H6n,5^b_R(-@5JjM'>UpgJ_eZ-GSd_:%DLp4(C"CsCZl<\Qms$O2ie!*c6,^V=ul-2Un[eE;&%KA,8Fn(V>m11JD",+hsPEIOSV:ZZOqQ(R8EI=,''=$r;]LEnD86:47E*3g@Uf5d=gjQi4!],hHtGIW1pOUV7e9U0&c^]W#k,'gQU%PgM':mQi<83KA8kAaBQpOPL.WeZGiPh5o4Eb0Y-95e*3_B^I$CJkED39n*,.=L/h7(^pa]+O"XfA/hcpnndS!hsU/f-SY'=p\DjM%p\)=N^&.)YZFAmN?TX%((FF/!GuAD>=O!=QdK581'5pN,>C,nOURG0j5HT7$^\]R;@l`S?GnP`$VGc5*mc*7qYQFujWAQ:r3@=5L%8&_("]<8ksr;sDCjj$q4(r->D>3t7t>jc83d_0oLI?=TF/@IJ&P$tH2XLY:[o[ZOhTkJX6r8NC)J0qnXL'!U*Z,1nc"mK$TW"HQ@%+P7W,>NT><]@-!]]U$G/;g'Dfj,EiJB7%caSBAX^3VP[[m5B)7)[k>gWEMI^6`Fre7akYqPR_iRL._^A5XKcQ,9NuhPJBGoBrrb:%j>V6b[`-p6JIK"Vo0SpXPI)gf`k>N4V,cT/]J?aRhb!Ru=\Q$TP'9[(bc3?M@CA%4`3KWY(.Q$>_bs]0R-qZDq0EY69@`nLW$`X8%(_=f9PGQDu%#Ml"/_-4';Sl4URN]d[mG5Q++gjHW'/SaR)s9S-deW;d=e[U03`"EY7?C<$+-m5`>\^`2FE?Z,g;l]K9=B4Y<gS'l%MWODH_&1(9d"^4ITq1Nn\sTXi2.PXS!t",K(RKhun`/RRX]3H4H':#qi1&!8SaUq0[]-F)r7Uh5c*<!nOr9h4Cmia<Nrk.UQ#tAM%MR[ala`'0NeEl/8'%Y!sH#W>OR3_*QMUb,_(?Uo?%)5f`Xts3K+J&Y?LST?-X!1DFo2B:jVtf3$NU6Wa<R`Z>/]f6,\uf8AZ?S?A%F2A-1:Uc36X!$X5hohDXl#e4E^X0H/Q#d'G)VafI8(73%U#N_WPcMuE=*V<`9'-*rgYB)>HW&4Z?^B5CX5q<Mfa3a,P?QH%&E2SB%CN8'sF:fUbSN`sT$O^`-8nC3D#*CT^%_[Nq!bXiCm>[NQ_7+WGWKtM-_72'B^l9a#G-dZ':iA:r]p>Bk)o,e!n*d]<5KE/EpW1dI%i+7ch+I-sCqd;$O$:&l,!Nf'G_5XLm41mN>-;%VKm[oXi85Ck9:)s+PHKruM2B44.*@lH28m61_C<Pk@/b>&Y1i;RA8C)!m>\D)m%5@(47d`]jsc0sFBh[Ei/qt['3gp8]9kD"YZb^u$).#>YhIiohJ$5ofQm#tOA?K`3lrlKMs1[C"$[W<<P&ml@r<dEOj/=VBA+Ldfh%hHRW(b9T/qr!?KFI5bQGZFE*@7I>\nP?qu[,)+p:WrB0pZgPSC1#Y8D@P+E@f)?VYJU$9fcPlgGRDJtA;g7_8OQ5[(a<$@8e&Z:2%a[:_O:Vai8+).i+r6AH[Q-60'dHF3j`W.,jUF:s3[B4@rE5V(a"!^sN#q:*tN^RU0Mlt'JLsY9;0)^HF:*i0Q>B0tg<*Q@pV`qB8%cDmT_or2C]9<178_a*RrRYo@JIuRJ9.c@5)[.&uX0,g9!QZ^qC>Y`6((]tO(GrB6="_ISX8!ie2aF(G\&(Cr+;lA98<pYXY\BcGP%=5@@=PKmlkKL(S%VY;u^.:d#2if-:+2^T(]U6I1dS[DE_MBO24KHN?1+NubHKI;%5nh?fr"ZDD]6c<pHpe<:ai*V>BCmm'WP_AI)%D=+m&o_!]Oli1\f>C%koZEo"rr=:o&#mN$LGXi/cYpDe1#)!qAKN^t#+S+75A]i/Fci+t9p-.Zp&g#O*Ff>UoCLoo(f^W(KT&3/O%qC0S4F8QZ4?S'?VR?m)<dp2llBqA"G>c(^&mq'GcXXX1M<eNo!mh<?8MK63Jqs+%>KAh8jJ6+4.!2HQ9f/)iW63,LCd$WY^jb%^q%ijDq:jUHs9B`=V7TqF:/&#<32*iB1(<d]7''jen<,>$ec^1UVNT95jog0[$WpVh'8cU:cQFO.3'(p435qo]63G&P=tPBoiqd<kGM%<sa@`5%qF-T']@G@Z<(;GLh?lC/^+j4A^jB7ugWDWIbaVLm65(C:2j#1PCNn$*;E5*.DmA(#]N\,j5f-C/[<G0X(7XTDBbp\7_iu%;7=1&V-W_j0M?As,OO%H7`DG)*URq4pO0b=a?DPoQ%T^uGS"*3e*Fpjj>pLd>a3RLI,7%HQ]LaojekpEUGai,C;IJ#/*@i\P^/X5%VgR-qYtC"RR*p(tW!V&d-O\pR:[Y\1m2XIe&%u"Djp]W1MN#Z*/.11kWZs/#'(_"DMn>%RL])2VpLmD!7TqGC7\e?XS&/I-cs.'a%/Y9i*5$`WDBs#d_XhuYa("MJu"_Os'e-V$R2,aUZHT^#<[*,6?WtbA`Z`q)O9X;;;B;U%dZ#3fVq%RQA;9sX.BkrL=PWlE,^O.Mt%3>1_N:L&dSJhQkBV^O=GZm.P3\Te1+gY!Bo/DhLE*37jfG\a$%N!aLNi-g53:hV"tU^`aSLbgPY!'I&0q3cN.E$t;_T1XrS3$3I!%C\J\]!\q]0('Vc\oIB$D;)B'[hk%jAU7Y19HWk75)$OTJG#>tG2X$nu[[M'#HfI7s^ZKr;hXe=S`_eS9\*rin$Mg:IfAW=6QS7f]%^Sc=+U6[ah0^\pT>f#C*-rBf-2>'#NHC\+b`]A<,n3EnI6)',%dj_i8B_T'@)N0+I\mNn??J8P(XhGJ2i+uJX3PBGVpoBRNlh+<(%OMsqPq5tZr@O[57+3lIO$*&-;RI2oP@W<IL&<4?`S(30Z05PQ$UTmW*.HKrjBXMX.Z:1g?DgRd!$=g35?GFThbhNqtS?Cm)HNP2B%B@nqcUfG8CO]M8jR`8\c*c%st.IRb+0&&:<l81@^PME["a`7P\J^uZcMt6[m/t-[jk-4^1pu2[K<MDt3Cf%utO4Gu,kPH-ITtSM@%Qk)$cCdBLM1K@7>SahkfmU&>lcl<aVG%iq\`hMbN8BtYda,W/RmUCCfN9eEi=9kU!U5a438LmaaqK3jlb!V%Imt/(0&>'^koW4qA%]t%*Z70FQBcrbD$>a2F>!t"::CR#WK>n9"/5bSBT$@'2Z28+Ri#0I/IBD:W3rFY&G0h(R#&tci;6sC7\J]:b?PZHe70Wd1$GAf8@%em]:=AQdb+KYX;M+cIAbDODl$fnnK(F1s*e<s9]9d)thEEo8Q\QD83_$p9jr@i9EV)mgq&&1FAf;4;`c.I&k?.$(Kb<Z+aP0Km,5%(ge_E-1V"Q2!sGT$aps@4sU)6'.U9`Z-G>t"CuLK7S).j`3"e7RAKVX+*55OT%qgF/\b2Lpn$Ta?S_+6W\P_'h^D^=&>(U+D(2l]%f!Zac-K1!3I4IGSRjM9`Cg$Rt"mYbp$bW+("n,NXb9#su'4+.ZS7]8#N+.)h_E&$6RpiIZ,""X8VF=>:o6=%h42`X:5f:?,+o4a<%-`oGB%IF/W".G/-^@_B3K&3A5E)BR@q.c@^C39c@'Z0JQ^IP(2`g63FE]cIFp&D+,`>!V`F2umZ767Zn+'57b69>ffdW3U?51P0c%UPI6mk'Z[;];&jaVZDVq2tN`rYI*0)gTLCPio4[FZ(>4I5bU7O'LW@^+:u,J&="-,SfI#AKE4mT$O(?VQ/]`&QZZ.hWuiinN>6sc%*'Qkg=4+u,=<f;/TX=PT3eJ_8'(_YZ'7LF*8+fE,Lh]4c:SQ`T/697>fNnXu_t8X14#@C)$dOTZri"3&FW"as"O2H<PT]5^kgCTq%j`^0H":#AS-fm@noTST;n^j%s!YT!E87R&DMMds%0*W,`#*5fi$qbNXRY94TEW)LbWfOZ!"t2OG96kTQWW!MX8]]`i&GJ.'6q%0R%(>q;p<\WJEqL,J]B>1Yn<?3,(5&8enZS6^VYY:X#;:Y*dj%>fnLDO*dl7<)pK=-t(Z_W/8F7%Sd`7Fj7<@8'3=<8)^1K>b)6PZ3r%Kf,SL_*LrGV(r9gqQsX)X2+7n8rb!(h%sZ?;"402.mOfKKR[nc)<9,%5hMHV3&tY%mQd6$)`G`>J_0V,'Mjgo+7Q&FC3.iq($<:B%hdRYJdK\+E^X$Z1o@R[!QgoOLLe61Gj*buc+gE[VWu3WpYO2,CU*V<aU<K&J>TUI%>'S;!g2/>b/'N)mcMQcH8FA^`p08KQ="+lF%H'Ijs41BB/_u1=,'k+MJ7_5XDZ?/hRNB(pi_3:crV-DUunZ[jXrhrK;AUu`i.PVPkJhGp@TAp'mB6r(kI%?LVlE$#$@WMsL_`+mh%'hZ_nO2ZIb:DDZ<<[W&V6$][$r$]4:pA0].o+L)b>5d1lm=h3f7HUV6d!(>1%pQ`-o_<dF3`\j*db(\!^PdO2=mK#*aL0a;r'Etf%('j#hK+iDEYql4+R=^@LrVUIZ"X7o.nD@C.ce&%466\)K2YKC0L7^ZEm>a6udg+[Ed:D+liX?lY`l(Ol[M9%h,nsJ=aToqA95j,R%UpPXI`HE`'KUj]8DXro.\jn;sA/^@9Y]O;j0/V9J@gZ</I:I:65!_NrE35aJ*^bXfoN5:-)7q^<BG*/A`Fa&UBHB$jV1;.$i/cd:%6aV0QrRk-(Oq[3N,VT_d]#mB6goJVU59-6h-g\pc8$%TX\I.Y"UN0f!o$pAh9QoLenc9h\eGa]2![NYsq&2<d@4_r/.%9s9B]d>J%`#NJ'i>T,X:k2Crohp5&Z1C7W6$/")1D]nhH8UW89\&6(6X1eceaL1d9=/3-L*t]?WmR-<cYbP+MJ-.q-j<5G3R.hE_hM!jZ$Mg=%<jJXG.[Deha^8miPgB*!@[`T596-Q7W$,i08b-;bBCk2r9kujUb=fY_@8^t]`ToSK7'YZp/=2EpStoq]>dCB"UU2Nhf!I7J-*,*T%/D[j:3e)G"CNQkrDFoT`#G8sZM^?>jm?:1W@BAI2:b9%30SSD:<+BcMoK5/1I+&EQTd<Y09W";l0O$GZSLf=4]3P\ul-3&$=eJr%%#:0DWLBYSb+*&:90>7B_[[&3g`crKIQeAU^L#jFX.%(JJk-THHCVkH'FD;YaMAF6)(I`,>l>Ao:_GGKp5had/Wl1,n#S\#;$Aq$O%N-lRN+'@M^GMBKUn=%AWn0NE+)Cd^epuLn%MLq3`p@&,^_n'BX]s=:D#LsWE'[;MH'S<+eACdtn\Rsp$&CK6)]-=clc_'4BAPYPp%-XtIrb+ZCKG3??r*4K8IKSc%2hW#%sMLZotn]<?66/['`?Z@Yh9L8EYK\A9u5JoB+n<U"WYeu*F*PC:K$rc>`\cs8/C90%(p;$XI%1TM8SMDh<,-ZK-C^XV).p'L\*9s/g.=a5l'q@nX8.Og5.W[.fBe)dV_>=\U#._aI.NPpWY&lOZTN.,*km)mbLLc]5#9a$?S2")EO%j8(pq^>8'4]'<f>\i(([/OqOhEFX*-6MIHP.KE*CCRU1k/^*8B]R2,T#cftI\Iji]NaOakNeJu\lDUA93+TS=g9@Y(@d/mRX/,5Z%lt2OJL1">FM$taZjDZ8.n'$]3BcF%,X4M=ZD]f#C@Nj9;@RUddLY:]$JR!VOj23Y5&W9Z%=Si5pAieXZm&jG>MQ_-.@%9g3iup]=%:98.nH,[Ft0,n;+^5eiaIm-\FQTX__R:R"5P"kZ)q;o"e-sXu/UsPkT9r,1Z/t+jTSt&<-Dt'k1m>.\=EBO1,%O\7e`8Q([D6P=<%at17i\,-e"r@D3f57=19diW7=>Z2^TmJ)OoJnVb!oA8(,m6NiD)<=AD]qjFN;XWR]5<E:+!Vuie_E8_)&[l"7.m#/N7?Ucb0^TG;%642[*'YZ^f<$a<.@cH508dBV=_5@Y"&\<sOk>fo_BVPUMV=u1NIlI8q6.]Je8mYaJ']VO5neuX;2U&*So%NO)dj1#bJU3/m$CTf3%GF[\=O43*8+8\OE4q#0m9mD_brSI+Qh60gnCklOW;[MkkKm6[""C>RgQq[&83XS`e*,/#b'LIsJOS\6fT09"m`TQHT-$be87B&P/%,s8@A<2=eT([[]*XJPkL)JZeO#DFQ6'7&23`!(-E?h4"O=Nhq(2CS^j4BtE.-q_)Q?P5pG>^hcY>XfEVOEW'$0dsRj8@3AOTSF^_%?aF[@LUmpIKE.la*U0;GFp:;?>2#Br7'$ofZ7Z$/S&20NHRr_cQ(aTqLB?a.&/\!U!76i\ML(g`1I&;lE92M@?ABnm<1!4<[!h<$%0t7Hl2$&%RZPbkB#nD@)d#'RmZ64hTN(=b-;gAE*,#A/Dk_+U*M<'L/fB\[tP10)U@7n!%@(b^F'2Z\)0'2Tk;8!OY4P!Ij^/Q$9%4K33g<mL$tZ)m"MJ+@+!mOr+ca"O^k[h_PCrLfDiC"=Njoh9`1[4`V\pF@/R\VP<;")nf)SBPP*\Oam=CU;*]QPKaHSWk>E^GpGC%jW:'Ak8p'mp0Of$dM)"V\DY:<:Y(ancep@r(MII!4h&%R"-?:E%,Fg%b]8Ql&Dup1gWj:iD"?b>b)JJ,:FrQ6d\\GEaY81!@fpuR%CY:rHo)%1%b'tfD@"\gF:RbLoj''7=G*1MGgt&;oH1/KG?KrEmUX/>1Kh4To;^U"_0g]ao8HV41^:Js6b#->'30WRa?Rm,.^X2=i%X:KdLEF/OL*W$\UoZO.lRfloJ=)sKs\XtE!J#;j31DbFRViPctSVNi!L&*Lg%k5a_<KFK"G!0Xs&44%jWX/_nc2i6q63unXI(K8'%9G*#H+:&f5Nc/Ijh;MCcT9'fJ`J]jf[S9Q9oDq,Q5k*-J^@hlqK:NiD&,0ODJnE,Agbd<gH^[R,Ge'/eV#:5YoWXJUBISAhAPG:b%GS.JJR_et_1.OO;XB#L^+R0I$\sq^R/iFl)%U[pm\uOkGe1HYrX#V0uQ?D=AD0oGqfN-PW:J;XV%op1cV)d^8Tebp`]F<pX9M.sj%,pc?'$D7u#l/P8/bR@#,kX#%l;Er`2a(\t%<au7Dh4,0a>g8pD.9Q]aFHAU6h-ugkPUR6$cGP.,BjjUber>uMp[L]t"2<1$8pnA>%bnnE7(J.soj+ro=n!<=N<-!i5;g2O5ioZUtFm=Gsg5U?TjMW7N>g4'R?V/^IO=Y:YHUn$Sq"KM5fL$7]>$EoMbEgZiS#pMnTr*5"%Um/PF]fWu/"dPCSJ`Dfcqmtj7j<)l`Q_FH806n.%aQ@8soLPD#;^Y"jZ)r=<G:VY^5#MkT'=Nol`_IuRB^ruG`=@/moR/-ZeL`5f%goZN=VIW4qSs#NF)@*]9p,Nh=5m3KVh.s)(r0'/ub1VR[WZi/\T]U''>4sgF_i7k%db6c]gLlIBf(l&=TB1]0Wss?UkOD.#EfRC)%([Lnh055ej%gcA4d"CC^)B/7KPrtCLEM3nRosrTc&3/*(fVU0J=:*t;WEd4QH;M$9dZf*p"SEi/79!`XP%d2&$@E7ZJ5NXCVTV@#%$W[^V7X92I31l4mqY<h,B*Et/k5D7!rh\]*@Qk$K2\NT\s1Y9]iK">iTiltg*Y2p144j@#Q[H2)"XEh`I2PWB"569h1hJmBbDD1&%pPTq=\dO.'1S0^fne8;%8NTPU$[Ma\)27;k]KrR5qabdAcg>A9b75cOX;;\7*&):I>uSqk?WlAsb_d/^XlN!G@Pc0_BYOe!_5?]H%^>;;VrAm0!6biYtK_K-$Cu]`Q8oT'1?;W@]@uFe4m1RaR#4O+\]aB'C),Sh*hEI)@rt[)NJ:%o2ZnB_G)^usTT3;Ej;SsrS9/Q_)%'ke__nbrBiY=M;35=E+&$WD(^euHVQ6E5M22-\l)(,j6"9><kNc2//km#PQr^*["SVVV,AY@DZLbU]#q`$/@bD`tSa]cV^drPOs!%HK;,H3P(Bu5+(Bf7S>C>fJX5+Cn/QUmI_Cff'_.qKcWQXaifetL::[*g2`FCV'<pQX`VO_=W\rL[f64dJ2G</6M@0QCq4YlfGg6=%H**H<(*sc,2_>1i#3fP+nj-.pj^XTeg65J]?eS'RP5_r"LM#4[XG'Gp\3m`C=_%%sqcV+<Yk!\4g882@VuL_"Fd'[\^HI^,nh$*&%JAT%&*8`0jqs`%qRR3N;a)RkGI%:2qC-=qe;N+qkAE]Gj)CocLb;M#pfcD+4H5&OJ)B2sO3-^Ip$948EPIrqEl"+REEcW22gaoZb%(mM/VnBA1i3gV(i%`1o?j-iG\"0MtXG)R[8Y8$c>loaf7$qLhr-BU0BV&F3[W>"b"lf5>hGAp7t,Gk',!F,Bt\."=?q=_='N9m;3%V*$B\j+9I`p<:@T$+\d@q\/AViK*BA'EY]5Z1[\opgG[<X(]gX)YmrDrR0ST0E5r/&q2,/i0MRpXUubAB#9nt(;VLMgjgX=OQiMG%\dI.d-?sE`[nWsG<5tZFRl)?Q'Ju@)1FLS;B15E#:1QeLq7o;#c?gOGj._O:^UWISBg>6%FDD"%[k)=$:"`%B@X0L*G&p&E;!2c)%Mt5P;F7W,cIsq5h9FK`br]76mr_5V+>\7RFfu,phil#?=O=,>lC<:GQpCCpJhP>deA.1F=#5j0ec_Fd]Xifmb)]QQ:caV3_&Qi+[%Xt-U!$/),ND/?cZN\+`P(67#0BY3`NmfndKF@[d.0^'KSeXu";^:o[*56$B+#;^NE0E":Rn7KS60]HImKlI"g$`tJjqLeO+"lAtL%q%qcQX-[DF6o,iQ:J*@&n)=7d5/*EIFr&4N(SB"qm!2huM\Kk9&!+Qe[(b=3h)a'70TF)5-1GEk$rmPTM"H>$aA,Q6e16ahIb-J#%3q!]`'Xn4OA*+S$@783'30D5gRdmUXa^BEXa;Cj`Fpj'6[BV*^2bW!c-R_`H'()A?H_Dq)m4H_7<"7AZM_e,LL](,)U!U""(q-LM%kJRRXUr"CqLFo3qZRO`2,YR\:(e]]q`N*26^'@2hI(i\,a2R/KY;8D6+nEm%c/7GaNuL/?<448%H/,B6FZe`&d!AD-X,ZI5,l?sP%Gbb4;^R*/-inNW)6&KtPHFaOKTb'4\(qlW73=[>/^cd`dBZ9[rU1`OF(.$A,2m\ab#TYV4Og^LZ9Of(WkmZ70&>KLIZRM&ZC-A.m%-/WbI_V`Dr+.jY<c:DQn+dmg?+mAV_2QGQQ_A@qu2gK7\885>\QO#Qk]-s:9=At,-1)h2gKR=0L;"'c)f+D'+LmEWPX9b&4l-kCp%b-GA)ECV))q,M('(K?ohKBF>UX.<+L-+hc@NFG>g`%qg)?'W&JX"Vj7PkX_]s5(LeoaBj-rmddDSTC/^Ou_$0l5-mmm+uq@k(nG`%g[Wk:Hp&a-*8rPtP]K1N#e<>Aq2:%SdTB-fa'u=,Ob2.jgU47S'*r)@F>AMo*lBa9+8I,5W%B_Q$hILGouUEXl_d:;XG%cciDQOd%-o!jn[Iu^9d5.%!*nrfa'OJtZibAT;AfUN>A?3NQFMK4a'r6h0UPZ;+N?An?Yu.MORXgXb.]LflM/l-bd47NuP6io".-fEa-ad1O%S2<8K2d%*UO.*3&\E/%a]RdYn-#unkWCaJ5#O$>!8r2`@"'9$H0s-pg)fDeCagDkE(Ju\@NRr#l0k<d9S=dLcAK*`7kdO>E?e&n?%EW5P$4.F5YdIV`*\N[GG3)uLE=%,O52Oe[up3<gh.KYFu9S1g&>f(cS/:K)0'XhYo6d9o,4Oc4NfI6hS&l:tX9#dFR>PoQ5Vf_CK%>,C"iZbTjYcGSB*(&__<\Ja:Ghj_jfn@Oq;#rdbiUDo*Qr@J&AJdKrBY_?,BC3*]60Kp%Hqu$s\7b<oo[@h9r!9O;UbZ(oj+sp#l%3R?G(O"hU^,G.2j$EsmTOIB2+2jJ24@[G+Rh3,J/h8RT/+_thV;VJ\LW[iLTNN+RNG0<TlV@:rdpd%iuK*<R5*\*rg9'WY\PStFC%.?U0k[-TAF5M3TSmp!q?[Br]VC!SO]NlYYREX37-V]oR<S="pqYAUV.kP8)79r^RT$@\TP2utc?c1<q>RJ>GGE*Mr8f.Li>!^6^7%LTr7sd.bMkd@?8`R]@O$^S%'FUC9EpI=8_@GXQP%DA6/k:.,bb2Y`>#^K7-jCmGs!P`h<'[)TYVW=d+j3Fk_u8::fH9H!Eba#m\0%h8r^H9P3HDaYRs\RG%SGd:@Gn/":nS'6)5S;9#^il4'B;gA61kZ:(NXaH&a3an<qp'/$@k?,5CZhS<#4a/t)0b"R<*Bo5qOeanM9%[ki:&91[k=lY0@fHnJ,^`NTNa0u8t&24JQXc@.>oaFNO&=Ld/abalM*36K42Sd8r`Pd;I3;ZYh=enV_WD;8.2h\.(ZV+<"4E&pG3%Y+0i8*;V?k)N\t-F?%Y2g%f\[5`j]@prVmG^8JcQjZiuA7*UU$8&#UmMef8D-huCa4^1<[o1J0k>Q<ApB)D;NnEBJJ'*tl<>ZTo9%%p_mN_QPM.5V1E5?%jki>sAQTL)lV^s0qGDSqJF)12r2T-iqro4BLYMq,QO$02o'RI'3*Dk$#[(%<Ru3K?2eg;6\BhR(^n%K&7gi%)#p<*4pp:0G?#EsOt;1+QdS3;`!V#Vj0$4$9^Pt:d,t;j2]]T/Jo9$qA%i/r'%--&5^lZV6GKZ?j>+=A.Lrbs`5pMG_D>'Z5ngK]%E(%TL*GnWaWl*UGJ>Lf;mgm-.K:4(sAQBcSJG,0:F&a1o.qCrUm)a-ai2^YFY+'Ga,Sn!;=*r^]+?-p,0.$fS4dmlcl)"MhLc.V&%"3s%jT0g+k*FqM0/l@QWic(teq")UtL;KNWM>01t?q'6K<c(acV,'WpVSD)#oB4@C+$=J*D!7/,^tIpZ">`ota\R\%P6p/(oJdt+%L$>Cmebd]F`p#r(H@>^"H>N@j<Z!"H4DP/0N/Re'LcA?OWT![[%aZNB^RqV<SXEAaFZt$8C6`%BXF^&D,U?E&YTS,CQ-a]bm:CY/%8;`L@PurA'q.c0CUb)lj"YYD=E`&9`6T2kD0[Z,/MN3Gr&[HqfS9&>nSr0NlW91r9$c/hqU304<l*#"J..co?AJL9,3[#FkkEoeg%#sZ[MOtlLf&kNPSH"9N@*'?LNRbPM_/8!21k'ZTRZe*M@n8b-.J7)94l^FOeOSZcpK?o'7/JLj0LkJLd.?=3m67#NG5TVEQ6J`'X%I\S`Rl_*"0)1gqEX<Pn(7n;9!BD`-`_>73Mb.,rU=egWu!FT=t=Y&#N^N<_C\rR/m%F7fP1mhmn\=nY`Y,l(;`1FY;;2>tXOM/[^%UnK1V,l,.PN<f\is*2T1I_[2D/0ua:bbQE0NaMm!.0QsdfAT/fTpV2<?+9hVA;N4V:]P^?(1sj8K<lY+,A^/1p^J$W:WYDbY0Pmf%bN\$N@TMXC[o5bP6D.UlO/M%l*Ot/t.4i/+Q[]=afrla#;sm]]Gih*aY+@TI#=AA&Y_Vd28>Ece0`BCs.\r^?<&9&k\^sAZUa,EV%Nt'n_VKO2%"9YVU6?NPQ#GR^!-H2^P?WUrt$nVM69.,060:`::;k#JT6?7d8ZX4Z3^us1,d@1Ng6P=$";[:e3diPgjfoK9h\E%X4%:U'u@c?0F'Sa!2J`5Ok9@>AfO9$qK9?_;D?Ti<!mLhK)8Ep<GgZdV_[AP#-)^Qk&8L:bXPF&;pIR'[#5XTSOlr3<u1*;%a<pF,'*%^`aJ'ds>r8k?:]#j1JTC"nX(3Y?^OFjYlQt^T(eBpD,9>$9,lQ-X$-8l8O`R9'SRmm#EA[4B?A4<C\2U@oo\cad[lFO*I2N$3u/(%l191r[AoPn6_[CDY'p^,p02`NK\os5+g7S6afNC)m(M0*V)]NuUOG;]L[-;&H>q(5DKMIo=0Qni7@RGF[&#TZL^%]Qn[bh6J_)kA%C$;Ysr75!:M(->0E8mc,lB4)[iB&EjWO,#E8oteJ#/Ln,\$SIj6?VSI>aDJF^!la?0@`]=Dc]/7$N[(9OY56VPaG:Zq*b_%10"(a%s7o]:KJM,S)Og,5[3RIuRK[*m5K+b??W>\n5nI)L\NbaB4C?_"b/ehL+B$cGp&:9K?S^o*e8"_*7G:$>^=MWP25TOh46:MAN_rRV%DE_/.CKFS<+AD,['_>KXP3GbFniTp4c_rDW%8&OY##:epe1_%1(Z7q/f$ml/$b@N6W@\T:-fIlP!f#?C+V(?T@Ke9"<2doa\>f]t%>V8WA;Mi_K(X4-DISM1d)clqO^-a'3rD53aoJ-][C4;jM#j^eai>V;75_8`tPbpbPB><k>3T>BpGq2JoYuW?tZ!is&+s^W','AC7%++Rb2B[dX?dq4:U"bBM?Uk3/4#Sr+UQ1nTTQ0fW.clobsLp8uh9e^9?8lF>OoF"iB\lU37$7'nqNGofe@7]6QCf*\eKRZ:^TM:-8%'9*/h''5MGN=Z`6\sWaRF:KA4(Q'uDI=.X[S.LJj""Ge&->ENdL^8.(gd"9Ha&EcA%03l/ZMISSG6ktcXUlGXnKUh\);@ZW?%qq1%l,TrRdhK_/OnPT0iVX!oO(-^^mg?6FE%?AI5n<O_2])FC%[Dq['=(se(65*[$N^CAmT9Uhet7qZ$Dg+BPQ]g'n?#`2&kpd=G_.L-%,]367]Ll&h#=8rL?arAM=jo/UScT.(`kDa.(SJ(DA>l9Kh_1u(.eH$Q:,^UBX%$;r<@IA04JSkbPo;ajVbmKLR^mH5&G)1-]u`T7%e.<$OZq;nq7WK686fS)EcEbU6!mGq1#LkhDrdP@WL^HmWLdk6AD?\6\<CQGLA!oromRg#:MX32R#Ge+6Gt;WcJAflc.nD]qI>@SK%eT490r$;4<R^i+FQ")csk4IdW(,AXAr:0^<P<W]?/r1.Q:d!$-UFn*ua4gsCT%BmMOr[a%DAFZQ'abZj;nQq\XZ<ZO&(P',bacB'%GekQBUK8cq!`LufK476F\(X6,-]5qG'Xi=9Zp$Ql"kuJUDnigg_Z`bk9mP.CKsO=:#0b>^4lE,ep&I^d<YLr_`,(>^F`B"K07_$c%jSs7&-c-1*S7ft7g8bh]gudYe93aKl8CK*m66/\=<21(Vp$$19q(-nI/j;!e+oT3dH@BXRAc_Va5X>emX)<Alq)X*oq`hN?e\o61%\tUY]+)'MYTWjNc(DS!kXRB6g:*M8-T=e\k_eVlP#^:8CHNHtqfgCOY&/1GR`tf$p]PHc=#k9WZ>k@b?A<5'/`pZ>R$oo]8JiMWE%Y'g:h+)gg/(Bn\JcXL?NGW'[P*N3^"^b_4W_HlB::pdoD5/'58!/jDV+"8!EN@H*JGn3Q\aYB3R!kYkGFr9*1["8tQ!&.j(n>Fn,%ddBjpe1b)V@%+\o0a'N<V3c8dQlX$%EO^ANncVuOQ6.lM66Qc$M6^f?'i5=i(Jcf]Ka@O]]&(]kB*>m9'E3'M@DEQa9!J9!0OpR2%WKIR0,dMiFBVc_05D8^0.ZBCP0#.IE3%q@$$q**iZs@06P"MJ!l]O6oSK]ZF/-"WFD?&E2`r#C(^IbrM8[uN,\A(VF^IbrM8\"eM%9=R4b\Oj:qrL$6e5Q+_V\3Kp=iVrEogn,W5gqUQ@D\L(D;qb^B+I!FPbV=`(ab6JDKQ9?W:aqr=P2aYM/rm^n,n4m5&c7>,#s402%LA4LP3-:%U(]`[,[<t8b+)uT^MJI8Q((iY.WKT!@fFJ<*_%0E>^*,&##oH7:=c9Rj&=tin8:/uEMIq*CFKT<u`tG#R2X;P/&le)"%VQbh2;`HdseoGYWjX',Z5pbgkd[\CV+>Tp4j*>_`r/,rohH<N;jfEt;M+8'U;C2XK0',3-6lad'k]YM@ip_(KBcLe]T3$^PJE9,A%>h7'u$%QeO%V;Y@jA7B9%en#Z"H`AnTBjcm69i>hA%`b@=-otXibSAB_Ttqh'%Z2IN;'9d<FDldkl/R9I>g#L!,VrJ52j&+j&@o'%jUK8'S`n2gCj#(b5_*SoKE2ETSQg17,5i6H<CA%FKI76Q"*=k><:KW8MPW?;(5N1P\,'[t'8"*1$m>]UU"L.X??(h>T[c<VW=6\\%18!m.9u5JAm_c&,RDD86;c'CjV<%Q&C0)8`9"AbO%fd1NTN4['#:e[E8so?eBb`%\K:c%B4S1<:HS0;0kqL%YUYc@/XtGUie)b?W%n!:"C@Q5a/!7D0C\QO+r8m^)\6sh%iO?)TdHgF*40eOuHrTB<#JIYcBK37/pX2C8-)XO^c>J@\1\`fi@e-IIG2G#.S0pPrn/GNN(%RLp":pkb['I;g;F]LT^\G94dKDd\qJ8$_.g,>%B[Lc6o]:5'ii;<LqK5F*"a8S`k=<:95Z\P$/E=M1em3sF@CKbt4t:`?g`cNfc$%S/KLJ6>7<X11I4_K+"e0<'9d8D5sE"`I/rQ?fUH2>d]`M*@h+I<NRgoi[2t'?SXmO.4o!JSh;#3nB.K_dA@W);L-nb7-dk4T99L%%ncH._Y1le:6RDF]A]Q;8)#^a\CiJZ7`M2jXl;Ddm0#)iWX]eg:4t/i'',Y5FhUkQ_B(7A#@`eJ@W#c'W5=iaqr>8(4"5P*[[,C!u%be4#P8`,Kr#HeJaQb-T&?Bh:LMORGk(A0V#c`$^BFr!)_q64-Pmb^id;?\KL:a)"jrAo!&`M!usgEQ9^.KK_OAgBY2!WU<m@Za=1%FLg[3o\5Ui`Donc;+;s;;\6l7!?7Zj1l%e&?Q,qj5_it)]FY=6N;pd4!mDcI2oo(cq=B90p5q)tcYk+YqES`S"%c@f\@CD+%)?,A%.4%`[_U[cNjj5cEfa@TUYMOGM*3[;[n0$GGctiUncD2Y,7?9u:aqKF0eSM@LKaut>(!g`VpN'>ghpBrqB+3?*/0NXdF/`MDocdb)%c;se:('Ok-]TME4-m`(^ORLTHc-pdY(+CYjWfQj=6NJ8?Sk;[B6Ji2SohZ(JeZCfk<klWS%+)rK0^m+`EIfRA3a'JNkFu/qRQ:\O%+M=]l/tt9!@]W\^HDncY(6_/maJ*o#E@rC(MeO41'/ka>L@(_CAl2-H+JX%DJ4$"@Y;?@7?M7VfK<!iufIrD['P*U$P7QCLW9&QS%+X!9I-kU2gfdp2NaCqe%!tUAN_De0I9aM#9!^mUjJRVc-(eD.LJ@qdo2V3cCUXVr9.O28%0-!<_&A\\u8jiD\bX*UqF-a1`IEjU-%U7Y30/CCZ#A8I7P3m>C-Or-jRDDOmC/cD:%cYUK2+2?$F!ihPPDKtN8R"k'nGVL2aMH/<d`uo-"W(O-XKU1\*?j@_#;V.QmJnc("%4NbpB0U&mK'&urs(tL)uUrI-.k[7#dq`o6(Lt2q<\KOQ4rN.dOT-<$C[<,:!JH)6@9aftDJ.70_fF1V/XDEJX&VX5H5Va3H</g9.%O])EsZ;)*)ocdeJ@^(`A^B?t2,779T=m1]^>>3a3HNEZ/J7_WpTX\LI`LjI'n)^U!nKn";q>QH3&"HC8/\"n"MC>*_9U8KWTdW3c%AgU=,;B]T4P#U#`TR7HqETH'sOnr0bCK&(6<UuA*Q:n/GkdDLDe"UlfKoG]Xa`3L/0@QVh)VR0g<9[9((kN`ET=!cus3]$1rN\EQ%kI(jb"Xm(?'Z_tBT*cj;0EYaX6jZ^P5WVI$N^LhHO4:Y&5e2W3]#ZBg02"?^TP$5pROI;"`sYS189^Fi!+]mI'.NL[(oHV:aI#=%%f7A;a4GDr/0[Yf4[..o7Jk2iRGpr+sdLC$i$2#0<$)jMoG!Wj[q>85?V%8ju&EWaGBL_?SNRN^"k7V2aV5k`-(ul#qCA9Y;-GGJ.%%b&R._*V$(dTq[nrk+=PJB2P9L'huIcUS;bM]7XDec\QX+ZgHC:M7D<4e,2i/Bis(H'l=?b^864>UW/[VDdL>-"rl<_M$MIBpPQb%.P(@h=ukY.dCOAX7d!;r.Lmam&D.'!a7:<ZGmoKCL"oCSUV\;c,gO?qDi.V.;0RE1(eW8.GITAM&Io\sd1<)<-<^P7a&$%G$`cVH%9Q\06<A`5$X%i-RPPM%G2o6>#D/iIZAr.(2IPDl*OQ1]=npiKO:PI"9okW_i-t[%r>T=RJ,Z;Y90SQrLAko"b&QSn7CXjBE4InT;%S5)ZQ8jUm:f9lbq.F(Jk3Tm9ilnWf5=JD(aRcHV'/3F#I*ZbM2WIi"0UrnZAVC<1*GW$BD50nKuH?^X_]VB-HFq5ZP=f37=1%^H5%%W9g-'2Rd59UeL`'Q5]3FIHZmR:DPo@gb':nlWNq835'T9,>Cc\[c'Fad`L/7Rl*%GFi](*LDHd&3UM5&(<cu&nZt*PUWI(\u*-W%L&r+sq#NGoYBPfRO>Ks_$H\usE5GOgb"GG[6B$VOfah.+.9A@AgaH/b(hpaS"reg''&H/YVo1V-)\<]!WP^d(``.i6HCcp4h0#A$%,b(JLN-l2e5rer4SIhhEf5tJQ>^R,^(sm-BT8B>`C)uQsV+Ee@26#2()(Vf4!@4EC#<[s(4P,Zn5tS__<E^NVfr:%u5`fsoFK.`e%m&$C14=<][H<g.*8YV#Q5sH\P(9RYDSOd./F<YHqIdDe#o:fI4Z4kk*eqlhY0X[u$V8VtFUK)VV;X-L1ZqNbH?A'%A^RN`4F+[iG%P@m!.<<q]?+KX@nY'nL8F6pkebUu;=o1S/tPbH=]QGI2dh!"?qs1js%cgQ-dO_0V9)=.r@BcqM.HXMc%]8M&V-5@Z6>DFuW$3YfK%'/ieAGnCq#:On7b:Z;NhdtBuC`-50/!eKMF=m%iRe[="jM-a.B"]M./ai@l]L(178[DAjo5TV.\U,1&#BDZWL5Of9+XY^RP;JTPP%F<fH.]hoLE";Vbs+82i'`HU`,BIn,>hab*X.*Pr9LNMD1>,?Z-@q2^YAdb5`W_>`UQt29B;n7c5L[SoYqDhqN+$/+EP8lWbTJ.;d%MhR*i&0_Fo,ulSVEq(5[U.5OsIZ5bLTWgllB!dcgb7FJ?1)je)^'/(7EG"qBO`e(&E/gJ7(]s[ZHnYK?5*05=aSK7S)G=5V7KPPg%'DG\Ya2Si9K(K(t7;e2g?W7":1g1%WW/*HY#nV*P/PsPeYgP)W)+]iM_/X0'80QB46;Q;&2/PZYYG77XB-fHFS,%A/G+)'*K@o+O%Jpq!=l*j\QDR_ZIj&6YsVXrt1CRrR8cHT>(U9i'qJ=q]G0Lm3?"7l4te]+a)9-+-\n,HkA/0P^tQi-`+-/jj#cXC[I]9)j0o%c9E%3I`B:+;d/8c@VQ;5Y08L9,IbNWTUb6.5ik4'$_B$nY7EZ-]0^8i(B)Ph2kg^D\]od<A=M\'"J[@K?o"q'qg9^FSGhl.F74_3`8:"%LCj[*Er8HSF??-#?_k84F81'ATk$FLX!^PGe&[jM(jaCSs&Wi,;%Ntdr)u\b*T5,6WV@tVKR(r?_b8j2nV('u'\f*DTAdtRdg-<0%drEa&/I%)]%t%+?'5/)T&q(M<IX?T1n9n1[P1e72l[W,5$#PnmYa?ABS'35l^@QXA5&Y,Q+hVt^*;FCd\i[hQpA>5_gUJ1*QrYY=%*8"SNlE6k]KIBECik\O#>)<r]BiBbf`1#=qYB-V#diDD>&k`d25qrcYUB_IuXZ&Nl%+UqA,BBAaZ<UFk>[/Dn`/S!Z(^WOmYn_7'%WX^UrAjP(F<t5r8#e]#sF:K2h'_(<E_iUAs>t<Hg"A=h:ieLfA$&?H?En"O]U7/BZ'Z*kCB#((^0gk:PU6%d.l*(sL[s#FJi5aW)%Q`[m1BG_O3RBULP``&]p&d1o3'S(0G_?[MX/-R'>5JJp8GVS[eE0(b#h-B1'_Wj*p3@X>[.E2fWpI%Ehi!P:8-`Ll]RC.6%YLf1t%o7FUa8cdl2&4"`,B&3S/*#Yh+PR)QX)3P9+3n;ZtmH@4Ic&+a$C(O(&Z!`R[Pi3e3DKuM<SY?Gu^7L"AnOj!2_ts@5R!G:!o*V'"%nNpK4.^[TEST:f(Fd5\@o2(s.l(-a,R77YT6;&/gd.!$CFXRmZV^;G"%aj`[7C`iS)$H/ION,UN"q#buR))\2AR$jQ>'S`m5DXU&%G*`3CP_N9=rCuuJd^#Y8&:q^;l%[.[KjIi^]HKniE/5GK>/pZ[,d?*'N/*l@Aj8<n&ffb\=s$Fr"Co:>7Jo2KR&EhlT>!YX%cj><%Z!tO8P.FD`MI/]gUd5q&.gT.Q)SHWS(uY.FlH<:AYUKjK"OH&KS+T6:^Z*jT[t;t*A>!>O/'M.B+H*#<^=%2JZ)_jHR?lXQ$#&rp%2\hb#(o^!%16RN;(7NaVF&2Vp0F]3156]&18rF+o_l9GD!#;W`!/&V(:g><DA%A!?IPKB>6a.X5qRET%AL`W$n\FNb3a@PjX&]j#%$_l&<+Ms;H$.!lN1(%b8KJl*3dPahM&4(_4.Xh-#a/k&RdOD,[7;Zcf8s6U0QBYIF]@Xrd1J5I`+=JXR!\B4.B"4E>gn_;D9uUf\%]"Se!6ImEo#QT=MDu:e&0Wq/[K(-pE`e1rd[rW=APK!#4^l'@^Z@jC^:r=p2FDC(J7-,RC:mG"]e-@1!EIBTpg[P)r2pTk--$R.]%W6Jo+=FkOT\pU]4'6"9g_X@\'=D:%)_6<SYrW@pA(9^;<n&6#++&r3QGR[iMPVsBQ+Jqo#q2hTKWa77Fdic-_L1<AgRUHpT2aV$k%UmW?M45dd+Zq=HF/t%8:'484u+&a^3HlLKi<JYQK+D/]$7qg].AZjn9i[HY*\V\3kKa"O=_JYICW,H(OUr:8MH25!t#Qt-+i:s*2%Cp>s7"nWS)00u@a)\ea?YtS[D(%MlP:YgYP4o5[(25(m\BA6ju&Gp]#6'9f!/O6&",7!c'9UZ!9a?DS8'T"M#S`F<UMYrPeVcS`s%l4fUK\DcAmTNGlA_Cn0`Wn[\+RrAY,r&?=:_VjDG"PskFDlV(b+/_s1HE9V[Tm43t6lW[6*!W3fU*6V,EDm-2Ds"::g>CdQPLPEH%FH,.Bgp/@n^VT5<&WCe=.Wu;c"lM:eVtWNi8OTF&IjmbKpDs1"hAMW2kJ^iqFLEBFr?]TT,lkt8(WBhUgq;Gm(!d51dK)aQX=pCq%aC:)8pdX!56Kpb_2>hL[Ia8iV`8WF16-/?K)42Uh+[fK"`sr-FZHGK[7$ScjO]foO).=?ul;NlK(hTg$Tpit^r1"Jt!CkN_Em2$h%<PemuLKN:;,;IVE8Rb8;3s"*c:Wa(;AtH[ApVXoa0`CQfo]?tQeIZFe-,(7_7t/Y6BIk!jB8pg\bZFFJ0jB=n+/.K:<F*co!FhFk%K[4/Vj4<i.mYdo\*BOp>=lPku6jlI06u`.>U'eN3P*Ql@nD=%b_q\6UkJd/akbg2$A0l="@_Uco>_2!eZ,\`TE=ZNi(TSbB?-ofM%MO@%^@>UIOR;^]T-gK3rUs(,G0UNh]XC7A"+p.f*F2;N6/eqWA*Ffo;hdJ?-D8h5bn2rZ;MRcm.%sQV@V`>C44QD`=::&'"dA7B_%+lsA]hpKiYr\ZJVL/->DN_0j8X@eq'TH"!L`L,+dffUY%3"dZoNZWs\c<s%-JYQQeSkcfuJ=+GEZt'hrd1Q*.NiA@*jUp_c[*)>5%=2nB$MJ"l`1+3Uj]JQ=]-8WOg\,_WZ\8cIYCj+O5J,<-/(kbHg=>N\aj);oX%(Pr#EAcH@,bC,iFk;B)*9h+Ub:n1(:L%V+?4WB&%NWsJ)Q^'*:R0N,uP[P_MS2#bq2b5bZCI19r#]a^`)+[]?MTQN0X*0p*Gp#AG0:DgRH+k"P8erPOqO(AD>7d/289TMpr;P9?Q0JKr%<EsE\2"D[GD/Y*FaYq8F-Yt7a;H:+d-bF']As-H?Z=4/DEQ,<]'1F9AnY;li?WA>2Wl7&pL:0WuOK.Y=a^dhrZiNd[F-cM9,;_Yq%AS*9oOe41.VLbH$"4REB[4tLBioH=4a@2fOFW>sBFsnDZ;ma9_NOi<0?D<3lkW$5HK+R4UJ26V;BghF0;_u<:1N)[k+H&*.K+2OG%Lio@49*WAd>kK6pf\jD:==u0J/\9F.p$d#]ENUIV.jp2/j=BCuVQn85/Vn-BN#IU;cs/^_ij[Ub[YF6\S)N9m((Hu0<^8+nN_+J2%YQ@ZUKA=YH>CJCAP7.`<[cGX(5lm&d0hWfO<)*asbq-aP3C%'s6K2R#7J6r-<m$VY,R=F99.VPhj(c(QQF)!\F06&iN048knq4Q#%(VliPZHd\rp`9!`ArE0e^&X?(jq>&Pj+&@*&S$Aiq.iF%\8qidF%/)$FM()d,+$R.k]aH"IeE6hi7Ia?o2t!^c5DQ^*c3-J^MZ%k%=-#=/@.I30H9Z,!nCBj7@6m_W`W@\uQB#]1Y0aI'*.,?B%p83$*!-/*eK4;lOUD_I'!#FrW/Sa5fq@dD61\L>3#[afU^[;f*)Q9a%eP[9rAb2$<nmW_Fi8WG/mk_bOlrI0[[N*oEGRbR`Y3ug6k=-nX(qWY6b+jL(Uegi4hunA!&Ct+b9JcH(<h*$Iq]R<;R82,3rnHE&%eK[0:cfh@IaX]-9G.:eVkJ7Y)4PpWQ]GO6RPkV.[s3U\V^^AV5nGc=@!+=Hm^XZm.5[j3i"\7)&6pD!X+e534dOg^)"=V.:]Xl@/%_O&X',t3\"\0$a=ikn<k^-d`\P/ad-i+P[e5Emi+OsGc?<GI4<Y^!leM$NO/qDELgPU1f7-$'h-lYsdbG`N^I1Q3*10<mRQ"c8ge%@>1`a#,i$&-*%jQ.sm/oDX::.`(8VH)!V6F?U#)e6l"A3pAOoRX@RQH_NE[cGWR,$J^lJ6j(BDSq5kc^5^U9B%4=I$3)P"M`soob%_,`sFA:.'@*a#+^1fUph'J]0h,.e+;7:mYc%;H$SKj4Xl\pXH`)29/D7&lccJ'^c3EY@U-e1-+%RgUn0_eD1YrZFGi'&eX2Qk0!2%B[?#k3F\kRPCR+Bhki?j#eDWC)(80q5SdnM,>Kfl1-;cAV#:g-`.a.a-`Z(LPG+sbn:#G0e&XKNGU$U=&h#!0MKs'4@<[$/;n<rG%J3Th:GJ@t8R<GA1Q"e$h.cP5fb7<%T[h#Ch!?.FVJoWQ*M1QQU0!g7I3c4L-@Orj@1,8s#6dMpZII52#hM'=.oeZVgT'3_cn>eMg%K:!7A\MQ`1%hg[DF[V9)Ia4R*$mCGc^i]c`101.T-[b`tS'9:mr_%Z#2!&d.LulXF9S7265_B8'QF(gc+rLIQNTYm)GMk3s'EC6i%M";&:k]WbG4JnA80?XPr5/e8K`FIhFl=+%`.P+OqL2'lgoSD(P(Q-_pA\/dl%T/AiI,.gro\1Ml7G!:mG#V0Om&-G=^9Ju&PHrX;%'0i9r("n.6*^gGo%L2jF4m''++"%R#46#h=GT-'=^$BB_EsQ,HJ9IJj6/oalKZhSA%r=d,F>k(B1&U[O=(/3H+R<R>%pnFAc3_!%%:ilFloCq47c8hJ*RM8&O>7Cr*5p4cjD4u7p3_VY^)Frl*p<bJRLQHm((OR6N,FsB'8\`=-6,3@\gT5Z@Q`q:c]IG63O9[Oh@Ld\:%OA/pljsdL-/_`[mPm4X5h1W(f%HQ*?$CF/#e9mpJNDk2OE1arFp>Uf(Nj5_G*`4Sb,F*mW(389:f2sH9Tl0OoMoV:NoMTH:L<jg$%RHFSph!eiN!QFnNM\.E>(Fkk-G&2'fCEJS)k(<j"r-J;b^ENnTO]U$)@c!Nr`(WbL)SlPY>;A;>Qt]P:,tEfr)_F<hi2hahSK[`Z%_R%-aWp4iM<+>Y>1-7m*+:21u!q%#]Ms'a/h*?ssO$-g['KP9d8^-XYGn>f)\Z>Q4+)^]i5:EgS./KkDh)^3f]McgOQeWMtY36&X%7ZljmUL[9aEZa+u'7YN,/0H!L$-\+?4H0rjB(p$7>Xg+tQNt)@Kn<ODeSM1aL6KHfBF"'6+aNl-'P[M<6o1q`ULXs6?NPhnG>n@C%1SZU,U'1N"8aPMGpteH<E]m"nZ)NMBCf,8\b0$(cXLFAQVqtB?80I/tW`;nf1?<LZJp-BE:ip>a6fUa(AshUJLQl/CeIMi1n_9-T%<^R7;#R<0ZRtV[po)La7c+28&Tck_[)l9JDK\Uq9VC;T:>Y6:%j6ekpA4sfq4\U$Vi+NF*#[Fhcq#iDH3Yclo+N0qM^udL[@SHq+%s"*n6=Uom0oWW0T0oX=(ShkN<CP!uXe--Q@8uG9-"*NKn9ojs6cmUJ$^:"?9^H)XVQCr%X9T<7V8fER!aY5fQp,=1E%)"r;mYtWB%GW>IJ.AIEI#O4a/V(i(rJfaB)@g&`:%>qQt11_CFWma^H3Pq_,KF1PWB!#J7pb=5B;-X/:M/Z"9J]\AC^&_5H&n(udAR#UWrIpUN%0GM<r,IW%h#QSO!\<.PN/HAHp.%LDHH2_E]W]NI:!QGr8G[i#4V)+$4hYIse+&kI-eA;*o.S)ZqP1Xm:O;UTK+=QGSPs9M/jmtqB%!L]<?_Vr(#=0Y*$32eXt0S6%*KQi_qi.sQW*0`EGb@D01BM]+_DMRc8l)"Wbps(^(0g\"+Zp5T`#*.5MMl%>q'Nm4oC'E:]?oruq%T0oUd-jlb=d&5$_1"VXU'mN$4kSORB%.Y[2^ru=^D2_7-,N+/D^VA1Rb4%iOg)VrK4+&dB+kqtF`>mGu#!aSad1LSE2(O(EE0716%iJTi-/UZgD)KasaD0-+l4;>M#bH\o#CD[d7dI?=lSC;'Sm9\b0LE9Pc)NO-q(!Xsid\]sSPVlGbI*i]R8.u>;KU5HmMm-nUBJ1n6%0/:k"8Q?@p?TGt>dgiR:9hOB&e^o+BLG)[g<q*mSI'H3:U:cW+.5>($`:G^2&LAW38U]I.:ri>SMLdi5HkB_27!u?'5?idoG)+Ae%(?(0AKJ.r>nAXZT)M$U^-+Z5e]ZLRg9G,"[F]S9HZ#Yb^;YZtqc'9l^((O]I^SEih:1O%>Wu+FeMopc7'K56cO0>t.(QI1c:Jgh\%$W9lPS;ts>p`bulm-qOM$lOaP*oRYY%UZ:n_ABHkNWeRW@>QsC=c"03H^O2>``-KN^qQo>`F]JXe.79eeeq]]]QH0h2BR%WlMdF2%R!%AKLa7RsS0/1A)K@a2M*Q2B$?G#>pZJ:0XB$*7CGSUq/LXL"8n't%m-<:H#Y20k-*)a@OY9l#qln%pcp\Al=>&>DVBuF7<P3Lu%Z5b/6"ubI%od9QJ8P1.VO.\P56<<iGoP-(5+*i%&S/R7u*g/0,1_X3#,d7hcc)#4`SM5kON0,PaC!u270i*I=/Qrll>sXmcE</mM%b^7+KWn'P"(p&pd=WT[U$NOqmNIY!<Y&9^5j>ET&U-o/e4gPD:KA7kR&gmHlg+r:Hl5;I+]kD6#=eTDj44T2IPmPlQR\u"(?Gpg1%$%c,@K\b.ZJ2ZSX+ZbB-T<Qmi<.JPNRH:Xqf'AV"<YZ520h4g<,a:2jeSm?2@EE:G\2u-eo;.\UQoFl8=OPU!W*l'NkY@l1,bjXp%:+tRIPuu+j9Zs.e$AW3D,Ia5%b7"+GJX;=fmtuaQ<Eo9>:d%[J'CdTH2)B_VeKo"C.-Lnq[IeerjKBW1>5!\#F3+BH,+jO!JUWDT%8hu$uL)i&KZ\'.[g'5MkVRAFsYV`Xj5t[J4*3H>tA`_30C%C,uS5O&o5ZKA7\VP"_1_JDl[AU%U:_Bos#[UQ^1AM$pht2^D9Vj.E%Qf9,Tq1rTS4g)tl9UE'5K=uP9![7t[T%bETJ4b-^f]MD/lJ33;i+HY,),aaJ=oh'3)c3Mk9ChT%d'Ttr>D0;:^noQaEi0D],7lUR%,I+t50,c=e=<\_n6r!*_#^GuA4UMt*&@\[F:q*8<Bf:__O,1DqnLD!kqEaJ8/,I@3!("+=.0Q&GX!u;Jk8#"(9\W:hY-0S7XVK,e%[7FS].?-W>Ybs$h4&7CLU?P+%r>:6l.BJ\$+Ndnc$=i6?,LqdC%+cWJ0JHdj)%c0?hcW^<$8'jHp2TR-eodi;0eF4GaZ!=4O*Lrf%2GKUV=K4`9lhNueF8$d5eu+#f00fE%s8;RLql_[QqX&M,lJK&MqNl^3hnK$Yqi?7'MnaN6h=(@A+91cLs7E3Rrf:t^rorh=Ier*N%5CWIhhuEX>r8Sn!n]1ZPrl_4SqpUTjrSp-?l,QRarV(g:-W&)@dJS4'qocbRX1/*:&85%s~>%AI9_PrivateDataEnd