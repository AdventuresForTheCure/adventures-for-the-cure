%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: cerasport_logo_color.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: becky hansen%%CreationDate: 4/7/08%%BoundingBox: 0 0 249 110%%HiResBoundingBox: 0 0 248.6485 109.0518%%CropBox: 0 0 248.6485 109.0518%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x5205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 56 8%%BeginData: 12288 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2DFFC9FD7FFFC3C3FD7EFFC3C2FFFFCACAFD0CFFCACFFD68FFCA%A7FFFFC998CFFFC3A0FFFFCAA1FFFFCAA7FFFFFFA1C2CFFD68FFCAC2FFFF%CAC1C9FFC2C3FFFFBBCAFFFFBCFFFFFFC9C2CFFD66FFA0C3FFFF99C2FFCF%98C8FFC299FFC9BBCAFFC2C2FFFFC3BBC9FD68FF93C2FFCA92CFFFC6C0FF%BCC2FFC2BAFFCABBC9FFC2BBC9FD5EFFA8FD05FFCACAFFFFFFC292C2FFBB%99FFC7C6CABB99FF9EC7FFBB99FFC2C09FFFFFFFA7FD5CFFC3C9FD04FFC2%C8FFFFCFC1C0CFC2BBC2CFC7FFBBC1CFCCCFC9B4C9C9C1C1FFFFFFC2C9FD%47FFA8FD15FFC2BBA0FFFFFFA0C1C9FFCAC7C8CA98BBC9FFC9C198CACECA%98BBC9C6C0CFFFC999C2A8FFCACACAFD40FF7D52272727527D7D59FD047D%FD0DFFCAC298C9CFFFC8C1C1FFFFCECFC1BAC1FFCABAC1C9FFBBC1C1CDC7%FFCFC2755227272752767D597D7D7DA8FD3AFF5227277B7B7BFD052751F8%27FD0FFFC998C1C2CFA1C198C9CAFFC2C098C8C8C098C9C2C098C9CFFFA0%C14B27277B7B7BFD0627F87DFD39FF52277BFD05FE7BA5FEFEFE5227FD11%FFC7C0C0CEC9C1C0C7C9CFC0C1C1BBBBC2BBC1C0C1CFCFC1C151277BFD05%FEA5FEFEFEA4277DFD2FFF7DA8FD07FF7D2775FEC6FEC6FEC6FEC6FEC6FE%5127FD0CFFCACFCFFFFFFFC9C7C6CEC8C09EC0C1C198C28DC3C3B099C1C1%C8C0C0752775FEC6FEC6FEC6FEC6FEC6A5F87DFD2EFF7D2752FD07FF2727%FEC6FEC6FEC6FEC6FEC6FEC65227FD0DFFC9C9C8C8C9FFFFFFCEFFC9C7C0%C6C0BBBCC3C3CABCC3B5C6C0C7C05227FEC6FEC6FEC6FEC6FEC6FE9F277D%FD2DFF5227F87DFD06FFA8F87BFD04C69E9FFD06C62728FD0FFFCFC8C79E%C6C1C8C8CFC8C69EC68CBCFFFFCAFFA0B59EC69EC8F875FD04C67B517BFD%04C6A5F87DFD2CFF27207B277DFF7D5252A8FF5227C6FEC6C69F27F852C6%FEC6FEC65227FD0DFFFD04CAC9CEC8C6C0C6C6C7C6C7C0B5BCFFCACFCAC9%B0C1C6C67B277BFEC6C6A427F8277BFEC6C69F277DFD2AFFA8F827A4FEF8%7EA8522E5352FF2727FD04C651F827F87BFD04C62752FD0DFFCA99BB92BB%99C9C9CEC7FD05C68CBCFFCFCAFF9AB5C0C6C07CF8A5C6C6C67BF851F851%C6C6C69FF87DFD29FF52F875C6FEA4277D7DFD0452FFF87CFD04C62752A8%274BFD04C65127FD0FFFCFCEC9CFC9FFFFCFC7FEC6C6C6C1B5FFCACFFFBC%92FEC6C65127A4C6C6C67B27A72727C6C6C69F277DFD29FFF852C6FEC6C6%F87EFF275252527D2775C6C0C69E2752FF27279EC69EC62727FD10FFCFCF%CECDC7FEC6C6C6FEC6FEC6BBC3FFA8CA98C6C6FEC651F8C7C0C69E9FF884%2751C0C69E9FF87DFD29FF2751C6C6C6A4207DFFA85352FF7DF8C7C6C7C0%C7F87DFF7DF8C7C0C7C65127FFFFFF7D52275252A8FFFF7DA87DA77CA67B%A57BCCC67C517C7BFEC6A5514B275251A5FD04FE51279FC6C6C7C6275152%27C6C0C69F2752A87DA87DA87DA87D7D527EFD07FFA85252275252FFFFA8%7DA87DA87DA87DA8A8FF7D7D527DF852C6CCC6C7F859A8A8FFFFFF52269E%C6C0C69E2753FF52279EC0C0C64B27FFA82726517B7B51F8527D27F8FD0A%2751F827A752F851517B5151F8277DCFCF7DF89FC0C6C0C67527F8519F9F%9E9FF8FD0727F827275126277DFFFFFFA852F851517B5127F87DFD0827F8%FD0527F82751C6C6C6A4272727F8A8FFFF5227C7C0C7C0C7F87DFF7DF87C%9F9F7B5152A8F851C6FEC6FEFEFE4B27F87CFD05FEA5F8277BFEFE7CF827%27A5C6FEFEFEC6FE51277DFFA82751C6C0C7C0C72727F827F827F827A5FE%C6FEFEFE5151C6FEFEFE51277DFFFF27F8C7FEFEC6FEFE7BF82727FEC6FD%04FE52F852C6FE7B76C0C7C6C6C6C7C6C67B27A8FFFF274BC0C09EC09E20%53FF7D27F827F827F8522727C6FEC6FEC6FEC6FE272751FEC6FEC6FE9E27%75FEC6FE512727FEC6FEC6FEC6FEC6FE5127A8FFF8279EC0C0C09E9FF827%27522727F8A5C6FEC6FEC67B9EFEC6FEC6FE5127FF52F8C6C6FEC6FEC6FE%C67BF851C6FEC6FEC6FE2751C6FEC67B51C69EC6C0C69EC6C07BF8A8FFFF%274BC7C0C7C09FF87DFFA8527D5252527D27279FFEC6FEC6FEC6FEC6C7F8%7CC6FEC6FEC6A54BFEC6FEC67CF8C7C6FEC6FEC6FEC6CCC6FE2752FF7DF8%7CC0C7C0C7C0A0F8A8FFFF7D27A4FEC6CCC6FEC6FEC6FEC6CCC6FE2652F8%7CC6CCC6FEC6FEC6FEC65127FEC6FEC6FEC652A5FEC6FE7B7CC0C7C0C7C0%C7C0C67B27A8FFFFF851C0C09EC09F277DFD08FF2827C6C6C6A45127C7C6%C6C6524BC79EC6C6C67B9FFD04C6514BFD04C6512751FD04C67BF8FFA827%F8C1C0C19EC1C051F8FFFF7DF89FA4C6C6FEC6C6C67B9FC6C6FEC651F827%A4C6C6C67B519EC6C6C651279EA5FD04C67BFD04C67B519F9EC6C0C09E9F%9F75F8A8FFFF2751C1C0C1C09FF87DFD07FFA8F87CC6C6C67CF82751C6C6%C67B27F852C6C6C6C7C6C69F52272775C6C6C67B27F82775C6C6C69F277D%FF522751C1C0C1C0C1C05127FF7D27F8279FC6C6FEC67CF827A4C6C6C67B%2751C6C6C6A427F852C6C6C6C7F82727FD06C6C751512727F852C0C7C0C1%2727F827A8FFFFF85198C19EC075277DFD07FF7D277AC6C0C6FD04279EC6%C0C6F82751C69EC6C0C67527F827F827517B9E51F8A8F851C0C69EC7F87D%FFFF272775C09EC198C19E2652A82727F8A5C6C6C6C7F827F87BC6C6C6A5%F8759EC6C09FF82727C69EC6C027F827C0C69EC6C09FF827F827F8274BC0%9EC09E27275227A8FFFF2751C1C1C1C09FF87DFD07FF59F8C7C6C6C05152%7DF8C7C6C6C052F852C0C7C6C69F2727A87D52F827F827F852FF2751C6C0%C7C0277DFFFFA8F8279FC1C0C1C1C175277DFF7D279FC6C6C69F277D2751%C6C6C7C6277BC6C6C675272727C0C7C6C6512727C7C0C7C6C727277DFFA8%A8F852C0C1C0C1F87EFD05FFF85198C1BAC175277DFD07FF2727C0C6C0C6%267D52279EC6C0C0272751C0C0C6C051F8A8FD04FF7D53F82727A8F851C0%C0C0C7F87DFFFFFF7DF827BAC198C1BAC04B27FF7DF89FC0C6C07BF8A827%51C0C6C0C6279F9EC7C075F852F89F9EC7C075F827C0C0C0C6752753FD04%FF274BC098C19E277DFD05FF2751C1BAC1BA9FF8A8FD07FF2827C6C0C7C0%27F827F8C1C0C7C052F852C0C7C0C72752FD06FF5227F827272751C7C0C7%9E277DFD04FF52F852BAC1BAC1BAC1F87D7D279FC6C6C67527FF5227C7C6%C6C0529FC6C0C7512752279FC0C0C7752727C7C0C7C052F8FD05FFF852C0%C1BAC1F87DFD05FFF85198BB98C199267DFFA8A8FD04FFF8519EC09EC175%514B759EC09EC04B274BC09EC09E2752FD04FFA8F827759F9E9F27519EC1%9EC1F87DFD05FF52F87598BB98C19875F87DF89F9EC6C051F8FF27279EC6%C0C6519F9EC098752753F89F9EC09E7BF8279EC09EC02752FD04FFA8274B%C198C198277DFD05FF2751C1BBC1BBC1F87DFFA8F85252A8A82751C1C0C1%C0C1C0C1C0C1C0C1C052F876C0C1C09FF87DFD04FFF851C0C1C0C1C0C19F%C1C0C19F2753A8FD047D5227F89FBAC1BBC1992727279FC7C0C65127FF52%27C7C0C7C0769FC1C0C151527D279FC1C0C1752727C1C0C1C05152FD05FF%F852BAC1BAC1F87DFD05FFF85198BB98BB992659FF7D2727512027F852BA%C198C1BAC098C1BAC098C14B274BC1C0C199277DFFFFFF272798C1C0C198%C1BAC198C1BAC1F852F827274B2727F82727BB98BB98BB4B27F89F9EC1C0%51F8FF27279EC0C0C0519FBAC19875277DF89FBAC1989FF82798C1C0C127%52FD04FFA8274BBB98BB98277DFD05FF2727C1BBBB98C1F87DFFA8F87598%C175514BC1C1C1BA9F999F999F999F9952F852BAC1BA9FF87DFFFFA82775%C1BAC1BAC1759FBAC1BAC19F272E2775BB98BB7527522775BB99C1BA75F8%279FC0C0C15127FF5227C1C0C7C07699C1C1C1514C7D2799C1C1C1752727%C1BAC1BA4B52FD05FFF85198C1BBC1F87DFD05FF272798BB98BB982752FF%7D2775BB92BB6F5198C198C12727F827F827F820F8274BBB98C1992653FF%FF7DF89F98C1989F2627F87598BB98C1F852F87592BB9275F8A8F84B98BB%98BB9927F89F9EC09851F8FF27279EC09EC0519998C19851277DF89998C1%9875F82798BB98C12752FD04FFA8274BBB98BB982053FD05FF52F8FD05BB%277DFFA8F899BBBBBB7627C1BBC1BB4B2752F85252522E52F852BAC1BB9F%F87DFFFF5227BBC1BBC1512752274BC1BBC19927522775BBBBBB7527FF52%F8FD05BB27279FC1C0C15127FF5227C1C0C1C07699C1BBBB5152522799C1%BBC1752727C1BBC1BB4B52FD05FFF852BABBBBBBF87DFD05FF52276FBB99%BB922752FF532775BB92BB4B2798BB98BB2752FF27F85284FFFF274BBB98%BB99277DFFFF2727BB98BB985127FFF85198BB98BBF852F87592BB9275F8%FF592775BB92BB9927F89FBAC1987527FF272798C198C14B9998BB987527%7DF89998BB9875F82799BB98BB2752FD04FFA8274BBB92BB992659FD05FF%A8F87592BBBBBB4B52FF7DF8BBBBBB925227BB98BBBB4B52FFF8514B2727%7DF852BBBB9899F87DFFFF275198BBBBBB2752FF274BBBBBBB992752276F%BBBBBB6F27FFA8F876B5BB93BB272799C1C1C15127FF5227C1C1C1BA5275%BB99BB7527522799BB99BB512727BBBBBB984B52FD05FFF852B5BB93BBF8%7DFD05FFA82727B592BB9275F8FF274B92BB92BB202799BB92BB4B287D27%75BB9275F8274BBB92BB6F277DFFFF2727BB92BB924B27FFF84B92BB9299%F852F87592BB9275F8FF7D276FBB92BB9227F89998C19875F8FF274B98C1%98C1207592BB9275F827F8BB92BB9251F82792BB92BB2652FD04FFA82727%BB92BB92277DFFA8A8FFFFFF272793BBB5BB9327F82775BBB5BB9927F899%93BBB576F85220BBB5BBB527F852B5BB939AF827527D2E2799BBBBBB7527%7D274BBBBBBB992727276FBBB5BB9327522727BBB5BB939AF82799C1BBC1%99277D2751C1BBC1992751BBBBBB9927F852FD04BB272727BBBBBBB54BF8%5252FFFFFFF852B5BB93BBF8527D2727FFFFFF7DF87592BB93B593516FB5%92BB9251F8274BB592BB934BF87592BB927527756FBB93B593754B202753%F89992BB93BB4B27279992BB93BB4B51F87592BB93B56F4B279992BB93B5%4B27F89998C198BB4B27209998C19899F82793BB92BB4B276FBB93B56F27%4B7592BB93BB6F752727A8FFFF2727B593B5927527272027FFFFFFA82727%B593BBB5B592B5B5B593BB204C2727B5BB93BBB5BB93BBB5B527768DB593%BBB5BB92B527527D2775B593BBB5B593BBB5BB93BBB5B56F276FB593BBB5%B593B5B5B593B5B54BF82799BB99C1BBBB759FBBBB99BB5127F899B5BB93%BB93BB93BBB55127B5B5BB93BBB5B58C76F8FFFFFF272793BBB5B593BBB5%7520FD04FF52274BB592B593B592B592B54B277D7DF8758CB592B592B592%B56F274BB593B592B593B5924B27FFF82793B592B592B58CB593B592B592%75F8758CB592B592B592B593B58C75F827F89998BB98BB98BB98BB98BB98%27F82727B592B592B592B58C99F84B92B593B592B593B54B27A8FFFF52F8%998CB593B592B54B27A8FD04FF27276FB5B0B593B5B0B54B2752FFA827F8%998DB5B5B593B56F27F876B0B58DB5B0B58DB52752FF7DF85193B5B5B58D%9A4BB58DB5B0B06F276FB08DB593B58DB5B5B58D9AF8527D2799BBBBBB75%99B4BBBBBBB476F8A852274BB58DB5B5B58DBB27274BB5B0B58DB5B0B58D%76F8FFFFFFA82727B5B0B58DB5B07527FD05FFA8F827279993B593992727%27FFFFFF7D27F8516FB593934B27F82727754B754B754B754B2727FFFF52%F8274B996F4BF8274B754B754B4BF84B4B754B4B279393B5934BF827A87D%F89992BB9251F87592BB9951F852FFFFF8274B9393B593752027F8274B75%4B754B754B752727A8FFFFFF522726756F6F6F752627A9FD05FFA82727F8%27F827F82752FD05FF7D27F827F827F827277DF827F827F827F827F827F8%52FFFFFF53F827F827F827F827F827F827F827F827F827F827F827F827F8%27A8FF7D2799BBBBBB4B27F827F827F852A8FFFFA82727F827F827F82753%52F827F827F827F827F827F8FD05FF5227F827F827F82752FD08FF7D5227%2727527DFD07FFA87D2727275259FFFFFD0C7DFD04FFA8525252FD097D52%FD057D52522727277DFFFFFF7DF89992BB9251F8522727277DFFFFA8FFFF%FF53522727277DA8FFFD057D7E7D7D7D7E7D7DA8FD05FFA87D5253527DA8%FD4AFF7D52272793BBB5B54B275252A8FFA8A8FFFFFFA87DFFA87DA8FF7D%FD04FFA8A8FFA8A8FFA8A8A9FFFFA97DA8FF7DA8FFA97DFFA87DFD0DFFAF%FFA8FFA8FFA8FFFFFFA8FFFFFFA9FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFA8%FD05FFA8FFA8FFFFA8F8FD05FFAFFFFFFFA8FFA8FD06FF7DF8756F9392BB%93994B51F8A8A82752FFFFA8272752522752272727FFFF7DF82752272752%272727FFFF52F8275227527D2727522E2752FD06FFA8F853285227272752%525227525252277DFFFF272727A827277D28F859532727A8272752282727%7DA8F8277D52F85252277DFFFFA8272752A8F827A8522752522752FF7D27%93B5B5B593BBB5B56F2784FF277DFFFF7D525252277D27525252A8FF7D7D%277DA85252A8277DFFFF537D275227A87D275252277D27FD07FFFD042752%5227F827277D2727F8277DFF7D2752522827F85252277D7D27277D2727A8%52272752275227527D27527DF8FFFFFF5227527D2752275252FD0527FF7D%F8938CB593B592B58C75F8A8FF2752FFFFFF27277D52F87D522727FFFFFF%5227FFFFF884FF277DFFFFFF27527D27F87D27275252F852FD07FF5227F8%277DA8F827F853A827F82727FFA87EF8A8A852277DA85327FF272727A87D%27595328592752527D2E7DF8FF7D27A8FFFF7D27FFA827527D527D277D27%7D27FF7D2793B0B0B58DB5B0B06F277EFF277DFFFF7D525227277D27277D%27A8FF7E527DA8A85252A8F8FFFFFF5952A8A8A8277DA82752277D27FD07%FF7DF852F884A827522752FFF82827525227A827F8527D27277D27278427%F8275252F8525227F87D7D27F87D52277DA8F87D27527D27F87D5227F87D%FD06277E7EF84B4B754B4B4B754B4BF8A8A82727A82052FD09277D275227%522727F87D5227A852FD0627F87D272752272727FD08FF7DA8A8FFFF7DFF%7DA8FFFD04A8FF7DFFA87DA8FF7D7EA8A87DFFA8847DA8A87DA853277EFF%FF7D7DFFA87DA8FF7DA8A884FF7D7DFFFF7D7EFFA87EA87DA87DFF7D27F8%27F827F827F827F8277DFF7D7DA87DA87D52FFA852A8FF52A8A87D847D53%FF7D7DA8A87DA884A87D7D7DA8527DFF7D52FF7D7DA8FD2AFFF8277DFD1C%FFA87DA87DA87DA87DA87DA87DFD2CFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-04-07T12:14:33-05:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-07T12:14:33-05:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-07T12:14:33-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>112</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FVP6xB9YNtzHrhBJ6ffgSRUfSMHELrqy4Dw8XTkkFzqbWnnu2tHf9xqNjwVT0E0Ejup+lXY&#xA;fdmFPPw6gRP8UfudjDBx6QyHOE/sIH7E2OqRjW00qn7xrZronf7KyLGP+JZleJ6+HytwxgPheJ04&#xA;uH7LV/rlt9cFnzH1kxmb0+4QMF5H6TtkuMXXVr8OXDxfw3XxXG4gFwLbmPXKGQR9+AIFfvOHiF11&#xA;RwHh4unJR1LUrTTrb6xdPxUsEjQbvJI2yxovVmY9AMjkyCIss8OGWSXDH+wd58kSjFkVipQkAlDS&#xA;or2NCR9xyYayN28UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVwYEVBBF&#xA;SNvEbHFaWyTRRAGR1QMQqliBVj0Ar3OAyA5pjEnkk/m671ix0d9Q0ri81kwmmtnFVmhFRIleq0B5&#xA;Ajw+jMfVZJQgZR/h+5zez8eLJl4MnKWwPcen6vixbWfNa6hpFn5p0hWS90aZRfWb9fQuPgkjJH2l&#xA;YqpDe1e2a7Jro5IDLDnA7jyLttN2f4eSWnyfTlHpPnHkfvVfNF2monQtf04841BkifuGVlPBvcEE&#xA;EfPNP7Qa7wzhzQ5b/MVsjQYjj8XDPmv/AEizfm9HF9kfo36sV9yfrB8fAZvRnvViP9H9rDwf9bSf&#xA;9s4v9615f1hYr/zJ5m1MtFbqIo4h4JHz4xr4t0+k5h9ndoDJLLll9MaH37e/knWaa4YcGPc7n4mt&#xA;/d+pvy75gW20q981awT9a1aU/U7Vd2FvBVIok9gSxJ9698vjr4YsZzZDvPkPIdyNZo+LJHT4vpxj&#xA;c/0jzP3I3yxp+o6ter5l1sfvACNJs/2II26yAd2cftHt9FLdAJ5v32T/ADR3DvaNdmhhj4GL/PPU&#xA;nu9wZakkb14MG4kq1DWhHUH3zaAg8nTkEc28KHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8&#xA;p17/AJyB0aLWZtF8p6PeebdRtWK3TWIC20ZBoQZyHB37hePvmPqNXiwR4ssowHmaZRiTyS9v+ci7&#xA;nSIxP5y8k6roVo2y3URS7i512VmK24WvbKtN2lps54ceSEz3AglMschzCMH/ADkr5LIBGja8Qeh+&#xA;of8AXzMnxod4+bGiy38vfzN8vefLa+n0aK6iXT5VguUu41icOwJoAGfpTfLEMtxV2KpNqnl+WSRr&#xA;zSLt9M1E7s6ANDMf+L4T8DHtz+0PHMfLgJ3geGX2H3hzsGrAHDkjxw+0f1Tz+HJJn81z27NpXm7T&#xA;REsoKG6hBktpVPU8TVgPvPyzWZO0hjPh6iPDfXmC5o7PEv3mmnddDtIfj4IWTWr/AEACSOX9N+WJ&#xA;vgR+QeaCv+62Y9R4c/ltmPLWnALB8XAfmPL+1uGlhqNiPCzj5Hz/ALFfQ9G0K8F42kzB9O1CB4Lq&#xA;2b+8hLD4SVO+x6Zj6HSR8Uywy4sOSJEo9YHofMdP182vVanNDh8QVOBsHoWMeTNQ/RWoTaFqg/0G&#xA;aUqa9IrhDx5b9AaUOYGCcJE6fP8AQT/pZA8/0F2vaWHxYDNj+sD5xVVuGP5q/W+/1swV9gnoZljU&#xA;/wCH/wCfX+9YGH+t/D/Rv/fKPmu7/S2oW/l/St7GKbiCOk07mhkNOoWtBmJknEGOnw7xB5/zpHmf&#xA;1eTZoMfhQObJ9ZHyj3MkvtJ0eyaK71iUQ2FqiQ2Vod5JI4hRfhG/xdT8+2GWjE8vjag8GGO0IfxS&#xA;A5WOl8+/fo63FqMkwY4hc5byPQEvPdd/Py41jV20fyrpN7q0Fuf9Ji04hSyj9l7qjLGD/kA+Fc3u&#xA;fUnhEsso4MPmakfLy93NxI+FhvhHi5e/+Ef8V9yKm/5yD1PQLGCPWfIV9ocDFYoJQ/1i3XelKokV&#xA;W8F2qe/fMrTa/T5RwYJwkR0EuQ9wcMC5GWXi+XM/Eivt9ybD/nJXyaEBfR9dqB8TDT6D3O8hpmcM&#xA;sP5wcYhm/kDz/ofnrQ21rRVnWzWd7Yi5RY35xqrHZWfb4x3yxDJMVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVeN/8AORfnPVrWw0vyR5fkMeueapfReVDRorSoV9xuvqFqV/lDZVnzxxY5ZJfTEEn4MoxM&#xA;jQTDyh5c0jyrodvpGmRhIoVHqy0AeWT9qRz3Zj93TpnhvaevyazMcmTryHSI7h+N+bvsenEBQR1z&#xA;LpWrWl1YT+le20gMN3bkq60bYq4HTKIQzaeUcgEoS5xPL5d6eCMrHNExSrFGkabIihVHsBQZRMGU&#xA;jI8yyGNhn/OMxrd+fz463J/xKTPfNH/cQ/qx+557J9Re4ZksXYqsm9cJWAKzj9lyQCPCoBp9xyGT&#xA;ir01fn+P0FlGr3SPVNUjEDQazpUptj1dOM0fz5AqV+6uaLXa+IiY6nDLg7xUo/PavsLsNPpzd4sg&#xA;4vkUks4fLcbubK/9OOYcZrW5jb03U/ssaAZzWGOmhIywZ6B5wyRPCR3E/guwySzkeuF1yMTuk+pa&#xA;M+k3aX2k3QMLGqSQSBmjJ/YYjqPmN++VauEtMRlxTBif5suLhPdfd3EjfqHMwakZo8GSO/mOfmxz&#xA;zBqpbV7L6wqm51S4SN6fACBQSFaBvjaoA2pyPhktDetzGc+XWup/a7PS4KxS4fphH+z4foCMX8tP&#xA;Mn+HJrES+t5ml1NLi31dZn9P6r6ZpIJR8SrXlVaV5U9s68aEcNCI4r+zvcY9t4PHE6rAMZBhW/Ff&#xA;Ku/lv3fFB6Dqb2mvXttAyS3WmFRDcU5Blkj2kIIHxipqKUB8c5TXg6LKMmPrdeRcjVYBPDEysRnz&#xA;HuPL3MT/ADh1fWja6fpNrMz6x5muBZxSs3xCOqq+/UAmRV+VadMyexQcsparMbhjF2e8fq++nSdo&#xA;ZxCAw49uLu7v2vTfKHl3SvK2g22kabGEjhUerKAA0stPjkc9yx/pnB9p67JrMxyz68h3DoB+Oe7V&#xA;j04gKCsvmLy1qV1PpC31neXSVFxYCWOSQcTvyjqTt8tsh+S1OGIzcM4DpKiPt8/tX0SPDYKM1C5r&#xA;YXIr/up/+InKdJD99D+sPvZTx7Fi/wDziT/5Kyb/ALadx/ybhz6Aede1Yq7FXYq7FXYq7FXYq7FX&#xA;Yq7FWI/mJ+Z/ljyJpn1nVZvVvZh/oOlwkNcXD9AFXsterHYfPbFXmX5Mee/Pfmj83ddTzSr2JttK&#xA;V7XRd1jtkmkgkT4P9+MjgszfF22pQU4NRDNDjxkSjvuOWxo/aEyiQaL1m3/MXyPcasukwazbSXzy&#xA;/V0QMeDTD/dSy09NpNvsBq5ch4de3g8w/wDOSWtXjtztvLVmtnaV34ycQjgDt8cs2cv7XZzDR8I/&#xA;jkB/vv0Ow7Nx8WS+4Mk/MHXJ9L8k61fW7mO4jtZBDIOqvIOCsPcM1c4HsTSDLrMcZcuK/lv+h2+r&#xA;PBikXi1v5b1T8trfyJ54iu3az8xxhtTgb4QqOwbifFXgkDKT0YE+Ger9p6GOqwSxy6jbyPQvPYMp&#xA;hMF9E/WPfPE/Dep4GOf84xmtx59P/a6f9b57npP7mH9Ufc8nl+o+97lmQwdiqldQGe3eESvAXFBL&#xA;EQHX3UkMPwyMo2K5M8cuE3QPvYdf+T/OHrrLa+bLkRKahZljFPnxTi/0jNRqsOpibjOPD/Ssfrv7&#xA;Hd4e0dNVSwRvyv8AXsuj0a3CU1e/tp5BWs1tEY5Cf8oRn0/+EGcxrIdnys58mIS78d38hY+xTqZX&#xA;+6jIDukbH27/AGpZcabbpKRA5lj7MV4n7qnOL1U8UZ1jlxx76pzYZiR6hRYn500m7ifS9atojMNJ&#xA;uBLcQqKkwsVLkD24dvnm79nO0IY8phI1x1XvHT427Xs7PEieKRrxI0D59HqcUUEsKSIpexeFZAUk&#xA;RdOZeLkuRXlxNd1pTp7nPTwNvL/YvISkQSD9d1yPH029/nz5+QeXeWNKu7rV9Y164TjHfzcbMFeJ&#xA;eGMkCUj/ACxQ/j3zzT2l7ShOYxxN8Nk+/u/W9drM8YY8eEc4Df3np8GFecU/5D35TtZSBDFZtOga&#xA;tOf+kn9cS0zN7LyH+R85HPiI+YgP0vN5/VqYe79b0zV7m5/RN79Val16EvoEVqJOB49PfOW0WOPj&#xA;w4/p4437r3djlieA1zp8z6Lo/wChLHyR50s7tnvNR1S4t7uGv2Tbyxilf+LI5Ty+eeyazB4uLJCV&#xA;cMokfZ+KeZxzETEjmC+nb64/0K43/wB1v/xE54zpYfvY/wBYfe9Nkh6T7kq/5xJ/8lZN/wBtO4/5&#xA;Nw57m8m9qxV2KuxV2KuxV2KuxV2KuxVhn5x+bNV8pfltrWv6T6Y1G0WFbdpV5qpnuI4C3GoqVWQk&#xA;V2r1qNsVeV/lj5QsLi3s/POu3Eut+aNUhS6N9eHn6HqCoWFNwvEbA9v2eI2zy72o7c1GTLPTx9GO&#xA;Jo1zl7z3eXzt3Gk0keES6ld5Kt7q/wDz2/MS1tJvq91c6HHFb3G/7uR4LZUfb+VjXOw9lBXZ2P8A&#xA;zv8AdycDWCsp/HRiNl5I80G8uNKh0S8g1K7jbT10v6vPHb2brbWkcWotehfq8saXEMrr8ZNfiHxN&#xA;nROMiPyruWvfNPnnWnNWv9UchqginqzSUH/IwZxHtib8OP8AW/Q7zsaN8R936U2/OOdv+Vb6wFYg&#xA;kW428DcxA5o/ZzHWtx/53+5k53aUf3Evh94VPz5sIh/zjp5LK/8AHn+iwjHduJ090pX7j9GepPKp&#xA;bB+enkVYI1e4uC6qAx9FjuBvnnOX2U1JmSOCie/9j0Ue1MQAu0u/K/8ANux8oeXvNuoWUB1DWNd1&#xA;nhoOnUYGV5AxDuB8XFea1A3JIHeo9AxDw8QEtuGO/wAA6CZ4pGurM7b8vfOPmZV1Hz/5r1E3Uvxj&#xA;SNLmFtawV6JRQysR3IH0nqeA7S9uJCfDpoAxH8Ur39wFfafgHOx6Hb1KknkHzh5ZBv8AyF5rvxcR&#xA;fEdI1aUXVnPTqnxBQhb+alfcdh2d7cyMuHUwHCf4o3t8Dd/A/Ark0G3pYZ5b87/mX+YP5jatpp8w&#xA;33lWOC2Nw9hDR1hmhaGCWJVYqQpd2bc51HbnbI0enjmjHxBKQG0q5gm7F9zi4cJnKuTNn/Lnz05q&#xA;/wCY2osfEwRn9b5w2X2o0+Q3PSwkfOV/7xzhpZjlJgVhefm+/wCYWseTtI8wvdxWqItxq15GpEEb&#xA;KjmRUHJQ55cVG/0dRvs0ezBooarLhjHi3EY8ye7bhsd97NEfF4zEFV/NLQvMvkrQ7DW/8a6zf3M2&#xA;oQ29whneGH02jkkYrEjbH9145j9g63S6/OcZ02KERAy+kE8wP5o72WeE8cb4iyKw/wCVgfmZXVZL&#xA;+Xyd5RlP+4+xsifrtxF/vx5jQqG8eh/l/aNHaObs3s2ZhiwjLm68RsR+d7+75ssccuQWTQTA/kV5&#xA;cWL/AEfX9dhuR8S3IvRy5dakCMD7qZrf9GeqPpljxGHUcJ/4oto0hBsGVqcPmfzV+XOp20PnGb/E&#xA;fk27lEK66qGO7smY0X6wqVDp79T2PRTuOytN2V2mT+78PL1iJED3xqhXwH6WjKcuLrYSz8/oLbQP&#xA;zO8kebYCDpdzF9Wa4VuacUkJZuW4oY7qo8aZ057FxYdJkwYRQmCed+qvP3Bpxag+LGUuhZr9Y988&#xA;t8J67hfO35i6VqnljzBb2kERm0OW/OqaZGoO00nASwgiv++1FKdKZ6j2Pq46rDxH+94RGXwuvvJ+&#xA;byut05w5K/h5hldz+dXmw20ok8oTxx8G5uxmAUU3JrD2zWY/ZDFGQlxy2PcHJl2tIiuEJp+S/k7z&#xA;ZeeRLa90jzpe6HbXM0ztYW8SMgdX9MvUsN2CDI9te1Z0WoOLw+OgDfFXP/NLh4tLxxu2V+YPK35m&#xA;aZoOpalB+YuqXM1jaz3MVsIUBkaKNnVNmJ+IrTpmFo/bg5s0MZxVxyjG+PlZq/pZz0VAm1PQvIP5&#xA;l6lpcF15n8/6zaai6BhZ6fcNCsVRULIykCRh+1t9J65DX+3IhkMcOPiiD9RPP3V07j9iYaIkbo21&#xA;89eefy11ixtfN+pf4i8l38ot01yVAl1ZSNXj63GvNO5Jqeu4pxPQdhe0OLXgiuDJHnHnt3g/imjN&#xA;pzj9zIPza/NjV9K1Wz8l+Soo7zzfqaiQzvRobOBgT6r9i3EcgDsBuQagHc6vVY9PjOTIajFphAyN&#xA;BjMP5Q3GoAXXmrzfrWq6kw+NorowQIT1EcdHoPpHyzzjVe3WoMv3UIxh/Ssn7CAPdv73Yx0Arcrb&#xA;rTfzD/LyI6x5V1y88xaPaDnfeXNWk9dmgXd/q0tKowFTRV/4Lodv2L7YjPMYs8RCUuUh9N91Hl8z&#xA;8GrNojEWGK/ldqf5k+fbbU75vPWo6alrcCOKJFSSquCwrUrSnTNn2/7Qns+UAIcfHf8AFVVXke9q&#xA;wafxL35M3/wP+Yv/AJcvVP8AkTH/AM15z3+j6X+o/wCz/wCON/5A97B/IGt/nf5sbU9JTzTNZaLZ&#xA;XckdzrbxrJdOyUUQQk047LyPEildydhnTds+0OLQwiSOLJIWI+XeT0Hw3+dY+HTmZ8l/mv8AL/X7&#xA;3zDF5UvPPGt32n3unyX92l5cSTxO8NzEqr6JcJQFwwrWhAzVaf2snLSnOcY/vOCuL+jd3X6HJx6D&#xA;inwX0t6J5esU0bQ7DSUlMyWMCQLKRxLCNeNSKmmcRrs35jNLLVcRuneYsHBER7mIa75L1i38xaz5&#xA;w0TzLc6Pe3duBNHbxqapBEihC5boTED0zqOxPaE4MePT+He9Xxfzpd1efe4Gr7P4jKd9O7uD0v8A&#xA;5x88wa1r/wCV+n6nrN5JfX8s1yslzKauQkzKoJ9gM9EdC8K/Iy59TQtUnICvNfszU940NPxzivam&#xA;N5If1T970vYcfRL3pr+cUvLyDfj/AC4P+Ty5h+zsK1Q9xcjteNYD7w960Dy7oXmD8uPLljrdhDqN&#xA;mNPsZRb3CB05rbKA1D3AY56C8ks/5U3+Vf8A1Kum/wDSOn9MVeFadovl28/PzWm0nToLHRvKqehb&#xA;W0CBE+tgCN5GVdi3P1N/8lfDOY9rdUcek4I88h4fhzP6vi5/Z2LjyX3Mn/NTz5qPljy7FNpSLLqt&#xA;9cJaWasOQDMCxbj3+zQDxOcT7O9jQ1ecjJ9ERZ8+4fjudnrcpxQscyoflN+YWqeZ9Hu01mNY9X0y&#xA;f0LngvAMCKqxX9lqhlI9ss9pOxMekyxOP6Jjl3Ec/huGOhzHLE3zDFvzD1//AJV/+YUXm6zsVu/0&#xA;3YSWlxEXMQ9aKSJjJUK25RUFKZtux9IO0dD+XySI8Kdj3EGh9svsaNV+4y8YH1B6j5a8xvrHl/Tt&#xA;VeMQNfW8c5hDcgpkUNxrQVp8s5HtDQDBnnjBsRNOww+uAl3pRe6r5a8lR6vr2p3AhfVrkTSsBykk&#xA;ZIljjiRRu1FQn2qe2bGGDP2h4eHGNsUK8hvuT+OjTKMMNyl/EXk3nr82/LPntdJ0SW3nsNOTVILi&#xA;7u7grQW6q8cnwoXoaSZ13ZHs7l0BnlEhPJ4ZAiO/Yjc+7ydbn1UctRqhfN7OfOfl6Ly/dapp91Bd&#xA;WGn27ylbWRGASFCeACk06UAzh/5J1Es8YZIyjKcqsg9TufPvdt4kBAyiQQA8s0L84PzGXWdCvtds&#xA;YovLXmW4eDTyEC/CkqxO0bBuZ9N5FryG/bO21/sjpY6eRxgjJGJN3zodem/lTqsOumZi+RL1vzJZ&#xA;W+taBqGlTqHjvIHioezMvwsK91ahGcJ2dlOn1EMg24ZD5dfsdxmwcUCGHeVvLlx+aX/ONUGmN+91&#xA;vQpZY9KlbqZLXeOKp7NBL6Xh0PbPb3lUj/Kzzo+qaUdH1AmPWtKHozxyVDtGh4K5B35L9l/f55wP&#xA;b/ZfhZfEiPRP7Jft5vVdlaoZIcB+qP3Mj8z6Hp/mLSJtNvh8D/FFKB8cUg+zIh8R+I2zWaDUz02Q&#xA;Tj8R3juc/U6SOaBif7Ew8k/mNqep+S/M/kPzMxbzXpWlXgtJ9yb+1EDBJEJ3aQVHLuevXlT0vTai&#xA;OaAnHkXi8+GWKRjLmHnf5NfmLq2kzaN5Fu9HeBZ5J2F3MzxvRuctREyCu4p1zjvajsGGQT1XEeKM&#xA;Rt02czR59xCub3g3QoanbvXpTPNRi7nceG8l0L/nIFNT87RaQ2niPRby4azsNQDMXaQGiMwpxo5Z&#xA;fhG617522s9jRi0hyCR8WMeKQ/h8wOu3f17g63HreLJw16Sz7zxpUWv+UdV0mRebXNu4hqK0mQc4&#xA;m+iRQc5vsfOdPqseTlUhfuOx+xzc+DigQ8v/AOcerWe4h1XzPqEj3F9OYtOhnlJLiG2iSoDHcinB&#xA;f9jnYe2upJMMI5fUfuH6XD7Mw2DL4J9+b35ran5Pj0+DSoYZb28Lu7XAZkWKOgpxVkNWLePY5qvZ&#xA;32ex6wTllJ4Y7Cu/9jdrdQcVAcyzLyt5oTXfLun6uq+n9chWR461Cv0dQfZgRmk7R7O/LZ54ufCf&#xA;s5j7HLwHxICXe8cXzs/5Y+c9b0Gy0xLmz1O8jurdjIYxHHMoPFVCtUKWK/RneHsyPa2lxZckjGUY&#xA;kHlueRP2W6iWT8vklEB7x9c98818J3nhsL1Pzh5R/LfQ4LO5kZpZDJKlrCA000kjl5JKEgAF2O7H&#xA;27Z0cOz9T2tnlkAqPKzyAHIDvNd3vNW4M5Y9PEA83lut/nzb3Hmi21yx0pz6NlLYtDPKFr6kyS8w&#xA;VD9PTpTOs03ssIaY4JTu58dgf0apwh2hw5OMDpT1ry/rjarodhqbRiFryCOcxA8gvNQ1K0FaZyGt&#xA;0Qw5pYxvwl6LTy8SAl3sC85fmpq9nrmqeW7HQ21D0YlVponctxmhVuRRY2pQyU650nY/s9DJjhnM&#xA;iDd17pfsdVrteYSljr8EPYv+cZ7S6tfyj02G6heCZZ7omOVSjAGdiNmAOdy8+8I/JGTh5cvh43h/&#xA;5NJnJe0UbyR/q/peq7AF45e9NfzYl5eRr4f5cH/J5cxew41qR7i5PbUf8HPvD6b8pvbQeUtCTmsc&#xA;ZsbSOEFgASYV4qtepzt3jE6xV8n/AJP3TXF95t1Z6+rqGqOzsepIZ5N/pmOcR7XjiljHdxfbX6nf&#xA;9iwsSPu/Sr/mudQku/LFzbafcalBYagt1dQ20TTNwiKNSigj4hUb5V7LZMeE5DOQjfDzIHf3s+18&#xA;E5CPCCefIe5D/lMmpJr/AJv1K70+506HVLuO4to7qJomKvJcPQcgASocVpkvarLjzeHwSjKuLkQf&#xA;5vcvZGCceLiBHLmPehP+chCsvl/TJf2o7sqPk8bE7/7DD7IjhnkHeB+PtR2zCoxPmzbyDc8fJOhr&#xA;XpZQf8QGaPtnFeryH+k5+hh+5j7kisvLsH5h/npDomqK02heXbMXdzakkJIzcG4n/XaaMN4qudn7&#xA;MaWOPSiQ5zJJ+Bofd9rou1Zk5jH+b/a9u83flT+V2saby1zRrOG1sYGCXMf+h/V4Uqxo8RjCqvXf&#xA;bOidY+SvNfkzynqGrSwfldHq2qW0TNHcXdz6S2le6xSkRMR/r5janWYcIvJIR/Hdzb8OnyZPpBKb&#xA;eYLnzU9l+Xei6poD6db+V7kQ/X1mS4jm+szwGremOMRBi6FjWuYh7QwZ8UxjkCeE7cjy7ju3flMu&#xA;OY4o1uHtn1v3zyvwXruBb/ziT/5Kyb/tp3H/ACbhz2h4RjX/ADkL+WN9omq/8rO8poUmiYPrtrGP&#xA;hPY3HEfsuNpf+C8TlWfDHLAwkLBbMOWWOQlHmEH5Z81WWv6VFf2rUJ+GeEn4o5B9pT/D2zgNboJY&#xA;MhieXQ94e50WpjnhxDn1HcUt862t/Gtr5m0VjD5g0BxdWkq9XRN5ImA+0Ctdu+475sexNWcWTgP0&#xA;z+/8bOF2xofEx8Y+qP3fjdE+bvN9h5t/NT8ufMdl8MV9pTu8VamOVWuVljP+o4Ize9ui9Hk/qvM6&#xA;Ifvo+9nHmbUTbeW9WuQ3H0bO4k5eHCJjXb5Z5f2dhvU4wf58f90HpdRGscj/AET9zxLUdLt7D8pf&#xA;yy1qMATyatqEjsoox/0lEG/egtRnseWPFAjvDyUTRe//AFnPD/Dey4GEflpBHp3lf6ugCgXl6CB/&#xA;kXUkY/BM6b2gl4upvujH7r/S43ZuGsXxP31+hh/5kRJqf5hRW0qF4bby3q10SD0aOxvXQ/RJEudL&#xA;7Jw4dNL+uf8AcxdX2wKyj+r+ksk/Jm7I/LvTUJ2RrgD5G4dv45zntJgH5yR7xH7qdn2WLwj4sA/O&#xA;+Nf8d6Rcqd5beFWHuk77/c2dJ7LX+VkD0mfuDrO14VlH9X9b3X6375594L0nAxD8lfKGm+evzD8z&#xA;eb/MECX1rpFyLPSrWZecXNSwDMjbH040UgEfaavUZ612bpRg08IDoPt5n7Xi9Vk48kj5vQf+cjtO&#xA;0+H8mPMDw2sMbp9TCMkaqRW+gGxA98zmh555In4+T9FFelnB/wAQGec9qY71M/6z3PZ8f3EPcj/y&#xA;Sbl+fHm5vHTIP1W2dj2IK0kPj/ui8v2sK1Evh9wfRObV1z4w/K8i0Gu6fsptb9wUHQdU27/7rzm+&#xA;3oeqJ971fs2bjMe79KZfmVIX8k6koFT+5NBvsJ0JzA7KjWoj8fuLsu2o/wCCz+H+6DPfzrkV/wDn&#xA;GnQJI2qrQaQyMO4MAIOdm8Ewry6/nzRrC0m8v+b7+1rHG7WV4VvLcEqCVWOXZB8hmhPbJjMxlGwC&#xA;eT00fZ/jxxlCVExBo+Y/HRQ/KO2m0vTtXsZ3WSaDUHR3UkgkRJuKgHNV2+RklCQ5GLf2PgMBOJ5x&#xA;lTJte85aNoMcMmpzmFJyVjIRnqVFT9gHxzVaXszJnvgHJztVqseCuPqk3/K4PJH/AC3P/wAiZv8A&#xA;mnMz/Q9qO4fNxP5X0/efkwv81PPXl7zDotra6ZcNNNFciV1MbpRfTda1YDu2bnsXszLp5yMwNw6v&#xA;tTW4s0QIdC9H8lXPHyhoy+FnD/xAZz3aeK9RM/0nfdnQ/cQ9yO/IhuX55+b28dOT/iVvnadlCtND&#xA;3PJ9pCtRP3pn/wA5LeZby+1LQfy5sZ2gXVz9c1d0NGNtGx4J8iY3eniozJ1OcYscp9waNNhOXIID&#xA;qUBYpY6bYxWlpGtvaW68URdgAO5/ic86zceWZlLeRe7x4I440NohILP80fKN/qY0yK6Jlkf04ndC&#xA;IpHrQBWPieleuZ8+w8+OHH9x3Dr4dp6fJPg+8bFlH1v3zVeC7XgeJeU/Mvmuw0jy9pOj63eaTa6h&#xA;eXX1gWcrR1NYhyIBoTTPTc+TggZdwJfPtPi8TJGH84gfNnWqHzqum3bP521mZFhkLRSXHJHAQ1Vg&#xA;eoPQ5pcXbMpzEeHmQOb0Of2ejDHKXH9IJ5d3xYD5Rj1Xym/l3WJ2rovmuOZQd6K9vcvbEH/KRlVq&#xA;/wArZn9paQZsR/nDcfjzdV2XqzhzA/wnY/r+D1v184zge/4HlXleB9O/Nqx0wH/R7O6uGtl7LHNC&#xA;0iqPYA51GvyeJoJS74vCQweFrODul9nT7Hs3nO4r5P10V66fdj/kg+cJ2dj/AMJx/wBeP+6D0Gqj&#xA;+6n/AFT9zAvOtB+RP5W/8xdz/wAnnz1WXJ4oc3qv1n3zx3wnveBiflK546Q4r/x+6h+N9Nm+7RxX&#xA;l/zYf7iLV2fD9yPfL/dFIdRmU/mm8jMFVfK2qFmJoABaXhJJzpvZyNYD/XP3RdD28KzD+r+kq/5S&#xA;3HDyLYr/AJc//J5s0nb2O9SfcHbdjRvAPeWK/nLMJPMWg77gGo70Mq5t/Z2FYZf1v0Os7dFZY/1f&#xA;0vWvrfvnIeC9TwJh/wA4q/8AHE81/wDbbl/5Nrnp+P6R7nzqf1Fkv/OSn/klfMf/AEZf9R8GTYvI&#xA;/J89PKukDwtIf+IDOE7QheefvfQOzY/4PD3J1+RDcvzx82Hx0yH/ALFs6nsgVpo/H/dF5Ptkf4VL&#xA;4f7kPo7Nk6t8c3FsdC/OPzro7KUE9093ED2SR/WQb/5FyKZqO2MXFAS7j970ns1lrNKH86P3fgon&#xA;zSrXXlzUYFBZmgcqo6kqOQH3jNRofTmifP79npe1sJnppgd1/LdMvzI8yR6j/wA43eQdMgk53uoy&#xA;wW0cYPVdPSS3cGlPsyemM60mhb5vGJJoc24pRHEkYOyKFH0CmcTMcRJ731XFh4IiPcKY3+XOrpPd&#xA;eYQHLcr9p1qa/BIWC/gmZ/a2Co4/KNfKnm+xMniTynvlfztX8+pZXF35bN8gkshqsEd0rdDFIw5q&#xA;fYquWdhbSkO8Bq9pMdQgfM/j7EF5j0G0t/zb8z2Xl3S9MfTNMljRNMvYme2PBER0DKfVQlgxPFhU&#xA;5vNTqo4QDLq89o9DPUExhzAtd5113yF/gm/0648hL5d80yiEafqVo3r2rMk8bS0csCnKIP8AD8Xz&#xA;yWLUQyC4m2Go0mXCanEhkXlK54+V9JWvS0h/4gM4/X47zz973fZkP8Hh/VT3/nH9uX52ebG8dNT/&#xA;AIlb51PZwrBH3PGdrCtTP3pX+Z1wz/8AORd76m4tdOhSGpOwMKsafTI2Vdri8BHu+9u7Djepj8fu&#xA;Q/mu8kHlnVTGaP8AVZqEbEfAan7s5vQ4h40L73re04kaeZH81jPmfy/oul+TfyivbG0ihvNSkupt&#xA;QulUCWZ1ubcr6jjdgnIhQegzsc/93L3H7ngdP/eR/rD72d/W/fOD8N9M4HjWgGi+Uj4Xl3+uLO51&#xA;f91L+qXzrs7/ABjH/Xj9707U5WfTrpF3ZoZFA9ypGcpp41kif6Q+99D1sP3E/wCpL7kF5hs7G7/5&#xA;xO8q3nJfremanOqN0Yetc3XOMfNWVvozs3y9MbW6drWFpNpGRS4PiQK5xWXGBMgcrL6npQZYok8z&#xA;EfcwmGWM/nPZulOQp6lP5vqzdf8AY0zbTj/reR5H/dPI6sf65V5j/ch6f5nL3HlrVoE+3NZXEa18&#xA;WiYDpnLaKFZ4H+nH73c6uH7mf9U/cwvzRcR3f5IflXAhpK1/eRhB8RrHcsh6f6wNPfPRpmokvBwF&#xA;yAej/WffPL/DfReBhfk7U1n0mZlIoL286f5dw8n/ABvnQdpafhyD+rH7q/Q4nYsuPB7pS/X+lJPM&#xA;97HaecxdyuVjufL+sWbGlQS2n3QjA+cki5uewxWIj+l+gOj9oo1mj/V/SUw/LV2h8mWCtsW9VqHw&#xA;Mz0/DNR2tHi1B+H3O87Exf4NE99/ew780LszecdNi7QxRfOrSsT+AGbfsbHw4D5yP6HQ9vyB1AHd&#xA;EfpL1f6375y/hva8DKP+cU/+OF5q/wC21L/ybXO+x/SHy/J9RZN/zkp/5JXzH/0Zf9R8GTYPEvK0&#xA;/Hy1pYr0tYf+IDOO1sP30ve+kdlx/wAGh/VZN/zj+3L86/NTeOmRfrt86LswVgj8fvLxvbgrVz+H&#xA;+5D6PS4t3mkgSVGmh4mWIMCyc915KNxyptXM91L5m/5yf0C40Hzrovnu2jZrS7QWWola0EkQPGvv&#xA;JCxC/wCplWfEMkDE9XK0WpODLHIP4T/b9jHYr6KaJZI2DxSKGRgagqRUHOYOIxNHmH1XEYZYCUd4&#xA;yCUWflvRrS/W8iVyYiWt4GcmKItuxjTtXMvJrMkocJdXg9ntPiy+ILsch0H48yq+ZdfXTNInnDUn&#xA;YGO3HcyMKA/7HrkNJpuOY7gy7b1Y0+nJ/ilsP1/D9SSaHpGs+SPMtrp2tRG3/Tdhb3duGBXaZecY&#xA;Ne6nmhH82bTtLBx49ucd3juwNUMeoAPKfp+PT9XxZTrtnb6xpsllM5QMQ0cq/aR1NVYZpNNM4p8Q&#xA;e21/Z0dTiMDt3HuKloenrphup5rl73Ub+Uz317L9uWRiTU7nuxPXqcs1eeWYixQDT2Z2PHSxIB4p&#xA;S68kh1ttP8zeZRpE0si22nwPIzQsoJmZ0BB5Bh8K/jmVgEtPh4wPVI9e7d1WfFj1+sOEk8GOJ5fz&#xA;rF9D7vgymxMNlZQWcTExW8axIWoWIQUFaU3zX5AZyMjzL0mn0YxYxAcosf13TjaNqWv6fqV9Y6g8&#xA;JLm1n9FWEaiingAxX4BtyzZaLVTBjjocLznbXYuIQnnuXFz6V0Hd+lU8yrf6ZN5A833sss0GsaUI&#xA;Lq7lZnYzRSSRvzdieiSRtmz1eLxMZi8r2bqBhzxmeQO/uOxZFLcRyxPFIA0cilXU9CpFCM5eMDE2&#xA;OYfT54IziQd4yH2Fj8Pl1uWnQXep3F3pWivJJo+nSU4W7TOJHo3Uguoam3TNpk7QnKHDVEvO4fZj&#xA;Hjyccp3EG6qvmb/QGRfXR45qfCel8N57c6HaaN5j0OK0nnlhaR24TMGCkUrxCqoFe+b/AB55ZcM+&#xA;KuR+54fUdmw0utwxgSblE7/1vcGd/Wc0vA954aQny3aNFHZveXT6PDcNdxaO0pNoszChYR08Ns2P&#xA;8oZOGuve82PZXD4nFZ4L+n9F932+aeSX0cUbSSMEjQFnYmgAAqSc14xEmg9DkMccTKRqIYF5Yupr&#xA;38xLLVXUrFdzz+gSCKpHEyg/dQfPNzrMXBpTHuD5tpc/ja4T/nSt7M0yspVt1IoQfA5xwjRsPbnG&#xA;CKLDbLyLNBe6ck2pNPomj3E11pensm8Uk5RmHOu45RKfozfZu2DPEY8PqIovPYOwODMJGXoBsd7J&#xA;Nd1qPTNHvL9zT0ImZR4vSiL9LUGajS6bxMkY95+zq7jW5Riwyn3D7ejzL8stUa1+taVODG78LqBW&#xA;2LB0FT9K8CPbOl7V0/FUx02dL7MakcUsR67j9P48k/8ANXl+28wR24ec28tuW4yBeVVenJaVXwGY&#xA;Wj1Bw3tYLve1OxRquE8XCY+V/pCbWJt7CxhtITSC3jVFLHeiilScxsgOSZkeZc7Bpo4MQiPpiP7S&#xA;wuy07TPM+rX2sXE0y+lciO2EbKFMcSrxNGVjvSubfJknp4RhEDlu8totDj7Ry5ckjIVIVVcunQ9A&#xA;zn66PHNL4T2fhMJ8w2935f025vtF1jUbN7i49SWGG5aKItIdzxjCb/Tm+0WrnOXCaqnh+2+xcWmx&#xA;eJEyJMq3rzPc+rPz906TUPyf8zQRqWZLZLggfy200c7H6BHXNm8s+bvKepJN5dsCp+xEIiPAx/B/&#xA;xrnN63FWUvpnYMhk0kK6bfI/qXtaXsOq3Gp6Rq13o93eQi2vZLOT02liBBpyHxA/CNx4Zdp9ZLFH&#xA;hq3H7R9nY6jL4nFwk89r/S9K/wCcSkKSed4zI8xS9t09WVuTtx9cVZu5NN83eKRlEE9Q8Hq8Ix5p&#xA;wHKMiPkae2ebvKmj+a/L15oOrxerZXicWK0DowNUkQkGjI24OTcd8k+aPys/M78u7mWOKxk17y4G&#xA;LQXlqjScUO/xqnJ4T/NyBWvQ5j5tLHJv1dv2d21n0m0d4fzTy+HcxuDzRr91MLe10C5muHNI4oxI&#xA;7E+yrHU5jDs4d/2O9n7YS4fTjAl5yv7KH3vWPyq/IHzLrGt2vmf8woRa2VowlsdCanKRgQVMyVbg&#xA;ldyrfE3Q0HXNxYowFB5bW67LqZ8eQ2fsHueo/nd+UMH5haHCbSRLTzDppL6ddvUKwahaGQrvxagI&#xA;P7J+nLHEfMWqr+Y3lSU2HmPy/c+rH8KXPFvTcA0qJUWSOT5qcwMmgjI2NnqNF7UZsURHJEZAPgfn&#xA;v9yrotr+ZPnCVbDy5oFwjSHjJeuGEMYJ6mZ1jjT8T4CuOPQRibO6632ozZY8OOIxg+dn57V8rdff&#xA;lH+aflTzLdwabod3q4jRYmv4raZ4JS6pJIY2HEkB6qCfuzKzYRkFF0/Z3aU9JkM4AEkVvfkehHcq&#xA;f4f/ADt/6k+8/wCkO4/5qzG/k+Hm7n/Rdqf5uP5S/wCKUbvyt+dN1ay20nlC9EcyFGK2k9aMKbVJ&#xA;ycNFCJBFuPq/aTPnxHHKMBGXcDf+6fQmmflRF5r/ACH0Tyrr0MmnapbW4e3kkQiW1uVZuJZDQ0Ia&#xA;jL3B8aHMt554Nqvkn83vJc50++0K41WyiPG3vbNJLiNl6LSSMMVG32ZFDZiZdHCZvkXe6D2gz6aH&#xA;AKlEcuLp7kHP5f8Azj1KOC4tfKmoxWodZFX6rNVyhDDlUK3H5AVxx6OEfejW+0Goz0DUYgg0Otb7&#xA;oj9A/nd/1J93/wBIdx/zVkP5Ph5ub/ot1P8ANx/KX/FJfe+T/wA47nULO5l8oah61qWMISyuCh5U&#xA;ryO/h4jLoaaMYmI5F1uq7Zy5s0M0hHihVVdbG990e3l/87ipA8oXgJHUWc9R97ZUNBDzdhk9q9TK&#xA;JFQFjmBK/h6ksvNb83aTL9T1jy9dW96mzrIksJPvxZG/XkJdnxJ2NOTp/a7JGNZICZ7weH9B/QyL&#xA;yr+Wv5l/mLcxwfUJNC8uMwN1qF0jKGQbkRhwjTHwCjjX7Ry/DpY49+rqe0u3c2qHCfTDuH6e9kf5&#xA;u+W9J8rfmT5I0TSYvSsbDSXjjB3ZjzuCzue7OxLMfHIdoC8MnH7IH+FQ96D8w3ciaBqbRsUdbSco&#xA;ymhBEbUIIzmdND97H+sPve918awZD/Ql9zDdP/MTzRb6fbtfaLNdCVOUF4A8Syqp48h+7dW3G5Xb&#xA;Nzm7GhI3E8P2vKab2jnCNTjx+d189iyfyv5C/ML809StY72wl0PyjFIJLu5lVkMir1WPmFMrHoKL&#xA;xXqcy9JoIYNxvLvdd2h2rk1Ox2iOg/S9P/On8gpNYhsdd8kKtprukwRWq2QIRJ7e3XhEFZthJGg4&#xA;/Fsy7HpmbKIIouvx5JQkJRNEPBL3XPOGkSmz1ny9dW96lQ6yJLDWm1QrI33g0zXy7OiTsaes0/tb&#xA;kjGskBM94PD+g/oTfy95O/M78wpUstM0qTS9IlIF3qdyrpEEP2qOypz2P2YwT47Zdh0cYG+Zdd2l&#xA;7QZtTHgAEIdw6+8/2Jdp3kP839GE9rZeVL+WAysyyPaTEmnwg/CV7DJ5tNHId3H7N7Zy6MSEBE8X&#xA;ffT3EIv/AA/+dv8A1J95/wBIdx/zVlP8nw83Z/6LtT/Nx/KX/FIPVfJn5y6naG1uPKN8sZIYlLSc&#xA;Gq/MnLcWljjNhwe0e3c2rxiExEAG9gf0k977lurW3u7aa1uYxLbzo0U0TbqyOOLKfYg5kukfInnL&#xA;8k/zG8i6rdSeWbGXXvLU8hkgWBWmnjUnZZIk/ecwu3NQVPfwynNp45Obsuzu1c2kJMDseYPJjUP/&#xA;ACsi7b0bLyfqTzkVH+jXLgDpUgRrtv45jDs+PeXdH2uz9IQ+39b3v/nGnyN5w8s2PmC88zWH6Pm1&#xA;meGeCAujPRRIXLKrOU3k2Db5nRjwgDueXzZTkmZy5yJJ+L2nC1vG/PP/ADkNN5R8y6/ot15b9UaP&#xA;bRXVvcG9VDdLNJDGvGP0X4f35J3b7PTFUsk/5ya1PkssHk71dOkvbTT4b79JRqjS3sPrxA/uCFPp&#xA;77mniRirVp/zlDcaiq/ojyob6RpNSAjW/VD6Om26XJl3gO0iOdvEUHImmKqS/wDOV9s1rFJ/huk8&#xA;mmSaiYfry0Ekdw8focvQ7wx+rypWp48e+KvR/OH5mR+U/wAuIfOGqaa63UsNs36HWUFluLlVJgM3&#xA;Gn7sk1bj26dsVYTef85H3Njo2pXOpeVpNP1S1u7SwtNPmu1Ilmu4nlLNN6aokcYj+1vWo+ziqX3H&#xA;/OVDQ+VrDX18rNNDLeS6dqKC+RTBcxosihB6TtIskbFgaAbUriqYecP+cidY8tW+m3N15S9KO6tY&#xA;Ly7gudRghuo/XoCiWxU3B4MaFnjXftShxVMrv8+LhvP0PlHSPLcmoySJZSvcNdxwOI7yJJ2dYCjs&#xA;4hikq3Fux6dcVSDS/wDnKV5tZh07VfKU2nRfpJdKvrtbxbiOCZyVHSFA5DK1QD0FQT0xVH/9DKWv&#xA;+LPqX6Cl/wALfpL9C/p/1hX614+hxrw7/arx36/DiqhD/wA5DeZL7VPMegw+TnttW0K2vZZpvrgu&#xA;YYntIpGBlKwogBdFUfHvXr4qss/IHzP5k8zflraat5gVmvJbm7EV6zo5uYvXY+oEQD0gjloQh7JX&#xA;oRiqSX3/ADkFMnmu+0bTvLE99p+natb6Jdat9ZWNVuJneNiYRG78VMT0NaGm5WoxVDQ/85KWUvmp&#xA;LQaJIPKkupfoaPzF6673W3xGDjX06MD9r7O/tiqXT/8AOUl1Y3l7Bqfky4hj03Uv0TfTQXkc4Sf9&#xA;6OA/dRqzkwNReVCATy8VWR6N+asnnbyV58R9Km0PUvL9veWtxbySiR1YQSgHkqx8XVo2DL28Tir5&#xA;t8pWUd3a2Ot3txPc6inqBJJpWcAcnSgDV2pmo12olZh0e19nuycc4RzknjBPu+5k100V1azW0tTF&#xA;OjRyAbHi4Kn8DmsgDGQI6PWZtMMkDA8pAj5obyFDJpP5p+TLKxvLpbKa7o9s0zmOg3pwrxp8Wb/R&#xA;55ZATJ857c7Nx6TJGMLoxvf3/B7l5d17za3/ADkVr2galqbXGjQaM13YWCAJFEHntwpIH2pAGb4j&#xA;406ZlukSX/nIzzf5i0PU9It7bWbnRtKnsdRnWSwYCeW/t4S9tHJQO/omTgGNONCakdQqwPVfzJ/M&#xA;2PzNpsdxr8kOrvDoR0zT7eSE2Nx9dhU3RuylYgzP05Mux+H4aHCqfflv5888ah+bdnp91rs15PcX&#xA;urQ67pMjJ9Qht7VVNv8AUyPhZ+Va8CWoPi2qcCp3/wA5Gan+YWizxazpfmE6PpEMMUOl2FqxNze6&#xA;lJOOaPHT4kWAltyR8NKfFiqVeatZ/NbSfPnlVbrzC8ep+Y7i0jj0KP8Ad2UVq0ax3ImDjj63qk04&#xA;lj4fsjCqcflh/jtPzbvdA1bzTd6vb+XtOSTWEZw9vJfXQHBI/gRuCRvy335LgVB/n9q/5m6F5gg1&#xA;TStfaxs5XtrXy7oloect5clgZzNDx+JRWm/IfZG1cVSyD8yNet/zF1iDVdf1K21K2vr6LSfL6wc9&#xA;OuPQtuUUDSV5KzSsKU5dulQcKsJ0j84fzGGj6y1n5llv7q60U39y9y6A2dyuoLFItuGACH6u2ydy&#xA;wK78RgV7h/zj95i1jWLTzIlxq1xrWj2Ooeho99f0F6U4VcTLs6/sleQ8cVes4q8g/Nv8iH8++c9L&#xA;1tbuG2s4LU2uoxNzEkgRneIrxFDRn3qemKpVaf8AOO2oRfkxeeSnvrU65cagupR3w9T0FkQpGATx&#xA;509FSPs9TiqJ/LD/AJx5Pk3zpLrM91Bd6Y2mLZx2o5mQXUkUKXUh5KF4OySU70YDtirELT/nEfU4&#xA;/qZm1S1cw6iXn3mIbTTx/dCq/wB59vbpv1xV6B5s/KPzj5t0XzXpWveYkubbULyO88rx+kAtiIpJ&#xA;mEUlFUsGjkVCQSRSvsVUr1j8kPPnmHyjJZ+YfMdvea5BqMF/paFJGsIUgjMRg4sOfGQNVvh6geJx&#xA;VCa3+Q/n7VfLmj6dLrekRXVhfPqVw0FgltGZaKsKgW6RBwihqllqa+2KqP5j/wDOOHmXzb5sv9ej&#xA;1myQ6pa2sd0s8DMyT28cUbGEgHgrejWoNdytKYqiNZ/Ifz5rPmPQdTvtf08RaKdPWKWC2MV1HHaR&#xA;oJhHKiqzh5VLqJGPGuxG4KrzX8s/Kg/MLzrqtvbazBHo9pr7a5NYmOT154ElYLJE9AAGEnCjEUrW&#xA;hwq9G/6Fv1r/ABL6f6ag/wAGfpn9O/VPTb656v8AvrnTjTj8PLl70rgVPfJf5P8Am3SdY853esax&#xA;aXVt5yt5ku0t4XV0uJCwjkHKnwqk0lVHU08MVUfKf5Wfmr5d8laR5dsfNFraNpuoyzyPDGzpJYyl&#xA;ZPQ+NK8vVMrV/wArriq62/Jzzvpfn7UtU0LzHHYeXNa1aPWNUgRXF4xVpHkt1ahjMbtM3X2223VS&#xA;a3/5xu1mLzHFbtrUJ8jQaydcj08I/wBaMpCgRk04UogQsD03pXFUBqX/ADjd56v4tYEvmCw9TVtY&#xA;j1yVhDIAJ0FxX6P9K6YqyfQfyp84eXYvzDu59Qt9RTzXb306WdtEyym7mErR0LbU/estB3OKvA9N&#xA;/L/87dPso7OHyncNFFy4l4iW+JixrRx3OY2TSRnKzbvdB7QZtLj8OAgR5g/rCJ/wf+ef/UpTf8im&#xA;/wCqmV/kIebm/wCi7U/zcfyl/wAUnf5e+QvzVP5l+WdS1ry5PZ2Wn3YeW49MqioRuWqzeGZGHAMY&#xA;2dN2l2nk1kxKYiCBW1/pJe2W35feeYfzi1HzuLzTV069sZNNWALObhYAqvC+49P1BNEnLcrxrQVp&#xA;lrrmK+Yvyb/N3WRZapfa9pepeYlsdQ0i9kuUkgg+qX0TxK0X1aFf3iCZuqU6bnFUnm/5xg82Rc9M&#xA;stZsX0TUk00arcTCZbuN7BOD/V0VWjYMSSvJh2HapVTXQvyD89aXrljKmrafHp+gzapeaHcxCX62&#xA;1xqEYWL6wjR+nxjdFY0LbVFDXFUXrH5U/nNqt9peq32uaPf6xp+m3NlHd3Ec6ehc3M8jfXbZLeOF&#xA;EnjhaNUfjsVrQnfFVt3+S35manr+kDW/MlvqGgadf2uqNJO9xJepLBGBLDCrL6fpu4NDyB7kbUxV&#xA;OPK/5bfmXomseetXj1XTYr/zWvq2M8KSsbe6iZ/QJWVGTgEmbkCG3p74qk2tflL+cmpazFrcmvaV&#xA;NrMemJp0Woyi4SW3k5F5bi1ECRRxSOSV5cfs7YqiD+UH5o6l5u0a98weZLS60nQrybUNPulV3v1e&#xA;WOIJEVeMRFInhFCWqdyQa0CrHbz/AJxt8962NbufMGsaUdTubNbTT5rGAwRyst4tz6t0kUMKIxCc&#xA;P3anrU1I+JV6X+U/5f8AmHy1e+ZNY8w3FpJqvmK6jnlg071Pq0SwqwXj6ixmrGQ1+HwxV//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:ABABD78C061C11DD942BF6C84C8EC183</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:ABABD78D061C11DD942BF6C84C8EC183</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -109.052 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 109.052 li248.648 109.052 li248.648 0 licpclp[1 0 0 1 0 0 ] concat124.34 40.9834 mo75.498 40.9834 li56.7598 40.9834 li81.9482 35.9961 li59.2549 26.8965 li83.9424 31.1338 li67.6094 14.6758 li88.0566 26.8965 li80.9492 6.07422 li94.0391 24.7734 li97.2822 3.45703 li100.027 24.8994 li113.367 6.07422 li105.883 27.0225 li126.709 14.8008 li110.252 31.1338 li135.064 26.8965 li112.121 36.1211 li137.183 40.9834 li124.34 40.9834 licpfalse sop/0 [/DeviceCMYK] /CSA add_reslevel3{gsaveclp[-1.64033e-06 -37.5264 37.5264 -1.64033e-06 96.9712 40.9834 ] concat/0 <</ShadingType 2 /ColorSpace /0 /CSA get_res/Coords [0 0 1 0 ]/Domain [0 1 ]/Extend[ true true]/Function<</Domain[0 1 ] /FunctionType 3/Functions [<</Domain[0 1 ] /Range[0 1 0 1 0 1 0 1 ] /FunctionType 0/Order 1/BitsPerSample 8/Decode [0 1 0 1 0 1 0 1 ]/Size [64]/DataSource <~!!*$!!!E3#!!iH&!"/Z)!"So,!##20!#>A2!#bY6!$1n9!$M(;!$q@?!%@UB!%[gE!&+'H!&F9K!&jNN!'9cQ!'TuT!($5W!(HM[!(c\]!)2ta!)W4d!)rCf!*A[j!*epm!+,-p!+PBs!+kU!!,:j$!,_*'!-%<*!-IQ-!-mi1!.4#3!.X;7!/'P:!/Bb=!/g"@!067C!0QIF!0u^I!1;pL!1`0O!2/HS!2JWU!2nlX!3>/\!3Y>^!4(Vb!4Lke!4h(h!57=k!5[Rn!6!dq!6F$t!6a7"!70L%!7Td)!7os+!8?3.!8cK2!9)Z4!9Mr8~>>>]/Bounds []/Encode [0 1 ]>>>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-1.64033e-06 -37.5264 37.5264 -1.64033e-06 96.9712 40.9834 ] concatclp/0 {/0 /CSA get_res setcolorspace<</NumSamples 256 /NumComp 4 /Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]/Samples[0 <~!!!$$!sAc3#7(SA$4@7O%M'*_&J>`k'c%T&)&X>3*$$(B+<_pQ,:"Q^-R^Dn.k</&/h\n51,C^C2)[BQ3BB5a4?Ykm5X@_(6q'O67n?3D92&&S:/=\`;H$Op<`W:(=^#$7?!^lF?t!MSA7]@cB4u!oCM[j*DfBZ8EcZ>FG'A1VH$XgbI=?ZrJUrE*KS>/9Ll%"HMi<XUO-#KePEV5rQC!u,R[]e:SXuIHTq\<XUnsrdW2ZetXKAV-YHY:;Za@-J[^WcW]">Vg^:q@t_8=+.`Q#s=aN;TJbg"GZcd:(fe'uq!f@\a/g=tE=hV[8MiSrnY~><~s8N#srr2orrVc]nrVc]mr;?Kjr;?Hhqtp9fqtg0cqYL'bq>'j^q>'j^q"XXZq"XXYp\4FVp\4CTp@e4Rp@\+Op%A"No^qeJo^qeIoCMSFoCMSEo()ABo()>@naZ/>naQ&;nF5r:n*f`6n*f`5mdBN2mdBK0mHs<.mHs9,m-O**m-F!'lg*m&lK[["lK[[!l07Hsl07Eqkih6oki_-lkND$kkN:phk2tggjlPUcjlPUbjQ,C_jQ,@]j5]1[j5T(Xio8tWiSibSiSibSi8EPOi8EPNhr!>Khr!;IhVR,GhVI#Dh;-oCgt^]?gt^]>gY:K;~>0 ]>>0 0 1 0 []true true []/DeviceCMYKGenStrips} /Gradient add_res /0 /Gradient get_res exec grestore}ifnewpath60.377 33.0391 mo67.3594 35.7783 li75.5879 34.9092 li68.2324 32.665 li60.377 33.0391 licplevel3{gsaveclp[-1.36086e-07 -3.11328 3.11328 -1.36086e-07 67.9824 35.7783 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-1.36086e-07 -3.11328 3.11328 -1.36086e-07 67.9824 35.7783 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState60.377 33.0391 mo67.3594 35.7783 li75.5879 34.9092 li68.2324 32.665 li60.377 33.0391 licpclpgrestore % PSGState55.3887 15.333 mo71.2246 26.1826 li79.2031 28.3008 li73.2197 23.3125 li55.3887 15.333 licplevel3{gsaveclp[-5.66839e-07 -12.9678 12.9678 -5.66839e-07 67.2959 28.3008 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-5.66839e-07 -12.9678 12.9678 -5.66839e-07 67.2959 28.3008 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState55.3887 15.333 mo71.2246 26.1826 li79.2031 28.3008 li73.2197 23.3125 li55.3887 15.333 licpclpgrestore % PSGState74.7168 9.72168 mo77.833 16.9531 li83.5664 21.4463 li81.0732 14.3359 li74.7168 9.72168 licplevel3{gsaveclp[-5.12499e-07 -11.7246 11.7246 -5.12499e-07 79.1416 21.4463 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-5.12499e-07 -11.7246 11.7246 -5.12499e-07 79.1416 21.4463 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState74.7168 9.72168 mo77.833 16.9531 li83.5664 21.4463 li81.0732 14.3359 li74.7168 9.72168 licpclpgrestore % PSGState88.6816 0 mo89.4258 13.9619 li92.5449 18.5762 li93.417 12.8398 li88.6816 0 licplevel3{gsaveclp[-8.1199e-07 -18.5762 18.5762 -8.1199e-07 91.0493 18.5762 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-8.1199e-07 -18.5762 18.5762 -8.1199e-07 91.0493 18.5762 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState88.6816 0 mo89.4258 13.9619 li92.5449 18.5762 li93.417 12.8398 li88.6816 0 licpclpgrestore % PSGState105.264 5.73438 mo101.272 13.2139 li101.396 19.1973 li104.639 14.0859 li105.264 5.73438 licplevel3{gsaveclp[-5.88482e-07 -13.4629 13.4629 -5.88482e-07 103.268 19.1973 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-5.88482e-07 -13.4629 13.4629 -5.88482e-07 103.268 19.1973 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState105.264 5.73438 mo101.272 13.2139 li101.396 19.1973 li104.639 14.0859 li105.264 5.73438 licpclpgrestore % PSGState108.879 22.5645 mo114.988 18.2012 li124.838 4.86133 li111.872 16.082 li108.879 22.5645 licplevel3{gsaveclp[-7.73828e-07 -17.7031 17.7031 -7.73828e-07 116.858 22.5645 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-7.73828e-07 -17.7031 17.7031 -7.73828e-07 116.858 22.5645 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState108.879 22.5645 mo114.988 18.2012 li124.838 4.86133 li111.872 16.082 li108.879 22.5645 licpclpgrestore % PSGState121.099 22.8125 mo132.57 18.8262 li122.721 25.9346 li115.115 28.0518 li121.099 22.8125 licplevel3{gsaveclp[-4.03263e-07 -9.22559 9.22559 -4.03263e-07 123.843 28.0518 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-4.03263e-07 -9.22559 9.22559 -4.03263e-07 123.843 28.0518 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState121.099 22.8125 mo132.57 18.8262 li122.721 25.9346 li115.115 28.0518 li121.099 22.8125 licpclpgrestore % PSGState124.588 32.9111 mo133.943 32.7891 li125.213 35.9063 li118.604 35.2813 li124.588 32.9111 licplevel3{gsaveclp[-1.36257e-07 -3.11719 3.11719 -1.36257e-07 126.273 35.9063 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-1.36257e-07 -3.11719 3.11719 -1.36257e-07 126.273 35.9063 ] concatclp/0 /Gradient get_res exec grestore}ifnewpathgsave % PSGState124.588 32.9111 mo133.943 32.7891 li125.213 35.9063 li118.604 35.2813 li124.588 32.9111 licpclpgrestore % PSGState89.3896 31.7305 mo89.3896 27.4941 93.2363 23.8848 97.4004 23.8848 cv101.566 23.8848 105.248 27.4912 105.248 31.7285 cv105.248 35.9658 101.908 39.6436 97.1729 39.6436 cv92.4082 39.6436 89.3896 35.9658 89.3896 31.7305 cvcp0 0.9 0.86 0 cmykf97.5527 39.4219 mo100.061 39.0723 101.004 37.7705 101.004 37.7705 cv102.76 31.8506 li102.408 31.71 li101.271 35.2158 li98.2305 35.9727 97.918 37.9082 97.918 37.9082 cv97.6895 37.9346 li97.8086 36.1211 li99.9023 35.3701 100.973 34.3613 100.973 34.3613 cv102.859 28.3818 li102.472 28.3682 li101.338 31.6758 li101.01 31.7959 99.0693 32.7188 99.0693 32.7188 cv98.1143 33.2744 97.918 34.4707 97.918 34.4707 cv97.7227 34.4648 li97.7764 32.584 li100.658 31.5957 101.08 30.4736 101.08 30.4736 cv102.472 25.9717 li102.025 25.665 li101.244 28.1084 li99.4824 28.5137 98.5703 29.751 98.3379 30.0039 cv98.1006 30.2598 98.0215 30.7432 98.0215 30.7432 cv97.7949 30.7676 li97.8301 29.4736 li98.5781 28.3555 98.5664 27.5117 98.5664 27.5117 cv98.7109 25.8955 97.6758 24.6377 97.6758 24.6377 cv97.5928 24.1436 li97.1123 24.1436 li97.0293 24.6377 li97.0293 24.6377 95.9922 25.8955 96.1348 27.5117 cv96.1348 27.5117 96.125 28.3555 96.873 29.4736 cv96.9082 30.7676 li96.6816 30.7432 li96.6816 30.7432 96.6045 30.2598 96.3691 30.0039 cv96.1309 29.751 95.2236 28.5137 93.46 28.1084 cv92.6777 25.665 li92.2305 25.9717 li93.625 30.4736 li93.625 30.4736 94.0449 31.5957 96.9277 32.584 cv96.9805 34.4648 li96.7842 34.4707 li96.7842 34.4707 96.5898 33.2744 95.6328 32.7188 cv95.6328 32.7188 93.6934 31.7959 93.3662 31.6758 cv92.2344 28.3682 li91.8457 28.3818 li93.7324 34.3613 li93.7324 34.3613 94.8008 35.3701 96.8965 36.1211 cv97.0127 37.9346 li96.7842 37.9082 li96.7842 37.9082 96.4717 35.9727 93.4336 35.2158 cv92.293 31.71 li91.9434 31.8506 li93.6992 37.7705 li93.6992 37.7705 94.6475 39.0723 97.1533 39.4219 cv97.5527 39.4219 licp0 0 0 0 cmykf32.0254 67.9092 mo31.9355 80.957 27.2324 90.0098 18.3555 90.0098 cv7.9707 90.0098 3 79.2705 3 56.9912 cv3 36.1318 6.72852 22.5518 16.3135 22.5518 cv19.4199 22.5518 21.7285 23.8848 23.416 26.8125 cv23.5918 26.8125 li23.5918 23.6172 li31.4922 23.6172 li31.4922 44.832 li23.5918 44.832 li23.5918 36.3105 21.6406 31.1611 17.7344 31.1611 cv13.8281 31.1611 13.1182 34.0908 13.1182 55.8369 cv13.1182 76.4297 14.0957 81.3994 18.5332 81.3994 cv21.6406 81.3994 24.0371 78.2041 23.9473 65.6904 cv32.0254 67.9092 licp0 0 0 1 cmykf6 lw0 lc0 lj4 ml[] 0 dshtrue sadj32.0254 67.9092 mo31.9355 80.957 27.2324 90.0098 18.3555 90.0098 cv7.9707 90.0098 3 79.2705 3 56.9912 cv3 36.1318 6.72852 22.5518 16.3135 22.5518 cv19.4199 22.5518 21.7285 23.8848 23.416 26.8125 cv23.5918 26.8125 li23.5918 23.6172 li31.4922 23.6172 li31.4922 44.832 li23.5918 44.832 li23.5918 36.3105 21.6406 31.1611 17.7344 31.1611 cv13.8281 31.1611 13.1182 34.0908 13.1182 55.8369 cv13.1182 76.4297 14.0957 81.3994 18.5332 81.3994 cv21.6406 81.3994 24.0371 78.2041 23.9473 65.6904 cv32.0254 67.9092 licp@50.4863 61.9619 mo50.4863 57.9678 li50.4863 52.0205 49.1543 49.4473 46.5811 49.4473 cv43.918 49.4473 42.7646 51.8438 42.7646 60.0088 cv42.7646 61.9619 li50.4863 61.9619 licp58.4746 77.8496 mo56.6113 85.4834 52.1738 90.0098 46.7578 90.0098 cv37.4395 90.0098 34.1543 81.5791 34.1543 66.5762 cv34.1543 48.7363 38.9473 42.3477 46.6699 42.3477 cv52.1738 42.3477 58.6514 46.873 58.6514 61.5195 cv58.6514 68.4404 li42.7646 68.4404 li42.7646 70.3955 li42.7646 79.9805 44.4512 82.4658 46.9355 82.4658 cv49.4219 82.4658 50.9316 79.7148 51.2852 75.1865 cv58.4746 77.8496 licpf50.4863 61.9619 mo50.4863 57.9678 li50.4863 52.0205 49.1543 49.4473 46.5811 49.4473 cv43.918 49.4473 42.7646 51.8438 42.7646 60.0088 cv42.7646 61.9619 li50.4863 61.9619 licp58.4746 77.8496 mo56.6113 85.4834 52.1738 90.0098 46.7578 90.0098 cv37.4395 90.0098 34.1543 81.5791 34.1543 66.5762 cv34.1543 48.7363 38.9473 42.3477 46.6699 42.3477 cv52.1738 42.3477 58.6514 46.873 58.6514 61.5195 cv58.6514 68.4404 li42.7646 68.4404 li42.7646 70.3955 li42.7646 79.9805 44.4512 82.4658 46.9355 82.4658 cv49.4219 82.4658 50.9316 79.7148 51.2852 75.1865 cv58.4746 77.8496 licp@59.1846 81.3994 mo63.2676 81.3994 li63.2676 50.9551 li59.1846 50.9551 li59.1846 43.4111 li71.4346 43.4111 li71.4346 52.2881 li71.6113 52.2881 li74.6289 44.5645 76.8477 42.8779 82.1738 42.8779 cv82.1738 51.4883 li75.3389 51.1348 71.4346 55.6602 71.4346 63.7373 cv71.4346 81.3994 li76.0488 81.3994 li76.0488 88.9463 li59.1846 88.9463 li59.1846 81.3994 licpf59.1846 81.3994 mo63.2676 81.3994 li63.2676 50.9551 li59.1846 50.9551 li59.1846 43.4111 li71.4346 43.4111 li71.4346 52.2881 li71.6113 52.2881 li74.6289 44.5645 76.8477 42.8779 82.1738 42.8779 cv82.1738 51.4883 li75.3389 51.1348 71.4346 55.6602 71.4346 63.7373 cv71.4346 81.3994 li76.0488 81.3994 li76.0488 88.9463 li59.1846 88.9463 li59.1846 81.3994 licp@100.28 69.9502 mo98.9492 68.4404 97.7949 67.8193 96.1973 67.8193 cv93.1797 67.8193 91.582 70.3955 91.582 75.1865 cv91.582 79.8926 93.1797 82.376 96.1973 82.376 cv97.7949 82.376 98.8613 81.7549 100.28 79.9805 cv100.28 69.9502 licp111.996 88.9463 mo100.28 88.9463 li100.28 85.0391 li100.104 85.0391 li98.3271 87.9688 95.6641 89.4766 92.7363 89.4766 cv86.9648 89.4766 82.9717 83.7959 82.9717 75.4541 cv82.9717 64.8037 88.6514 61.0752 93.7998 61.0752 cv96.375 61.0752 98.417 62.0498 100.28 64.2695 cv100.28 56.459 li100.28 52.9102 100.191 49.4473 96.1074 49.4473 cv92.6465 49.4473 91.8467 52.8184 91.6699 55.3047 cv84.126 53.1748 li85.1914 46.4287 89.8945 42.3477 96.375 42.3477 cv102.41 42.3477 108.445 46.1641 108.445 54.9512 cv108.445 81.3994 li111.996 81.3994 li111.996 88.9463 licpf100.28 69.9502 mo98.9492 68.4404 97.7949 67.8193 96.1973 67.8193 cv93.1797 67.8193 91.582 70.3955 91.582 75.1865 cv91.582 79.8926 93.1797 82.376 96.1973 82.376 cv97.7949 82.376 98.8613 81.7549 100.28 79.9805 cv100.28 69.9502 licp111.996 88.9463 mo100.28 88.9463 li100.28 85.0391 li100.104 85.0391 li98.3271 87.9688 95.6641 89.4766 92.7363 89.4766 cv86.9648 89.4766 82.9717 83.7959 82.9717 75.4541 cv82.9717 64.8037 88.6514 61.0752 93.7998 61.0752 cv96.375 61.0752 98.417 62.0498 100.28 64.2695 cv100.28 56.459 li100.28 52.9102 100.191 49.4473 96.1074 49.4473 cv92.6465 49.4473 91.8467 52.8184 91.6699 55.3047 cv84.126 53.1748 li85.1914 46.4287 89.8945 42.3477 96.375 42.3477 cv102.41 42.3477 108.445 46.1641 108.445 54.9512 cv108.445 81.3994 li111.996 81.3994 li111.996 88.9463 licp@115.279 66.4873 mo123.18 66.4873 li123.18 72.5244 li123.18 79.4463 124.423 82.0205 128.063 82.0205 cv130.815 82.0205 132.68 79.5361 132.68 75.6309 cv132.68 72.0801 131.258 67.1094 127.797 62.6719 cv123.359 57.0801 li116.701 48.7363 114.658 44.4766 114.658 37.1094 cv114.658 28.5869 118.919 22.5518 124.956 22.5518 cv127.529 22.5518 129.482 23.4404 131.525 25.5693 cv131.525 23.6172 li139.425 23.6172 li139.425 43.1455 li131.525 43.1455 li131.525 38.1748 li131.525 33.2939 130.459 30.54 127.176 30.54 cv124.334 30.54 123.359 32.9365 123.359 35.333 cv123.359 39.0615 124.956 43.1455 128.151 47.0498 cv132.499 52.4658 li138.804 60.2744 141.73 67.1094 141.73 74.2998 cv141.73 83.3535 136.85 90.0098 130.193 90.0098 cv127.441 90.0098 125.133 88.9463 123.18 86.9033 cv123.18 88.9463 li115.279 88.9463 li115.279 66.4873 licpf115.279 66.4873 mo123.18 66.4873 li123.18 72.5244 li123.18 79.4463 124.423 82.0205 128.063 82.0205 cv130.815 82.0205 132.68 79.5361 132.68 75.6309 cv132.68 72.0801 131.258 67.1094 127.797 62.6719 cv123.359 57.0801 li116.701 48.7363 114.658 44.4766 114.658 37.1094 cv114.658 28.5869 118.919 22.5518 124.956 22.5518 cv127.529 22.5518 129.482 23.4404 131.525 25.5693 cv131.525 23.6172 li139.425 23.6172 li139.425 43.1455 li131.525 43.1455 li131.525 38.1748 li131.525 33.2939 130.459 30.54 127.176 30.54 cv124.334 30.54 123.359 32.9365 123.359 35.333 cv123.359 39.0615 124.956 43.1455 128.151 47.0498 cv132.499 52.4658 li138.804 60.2744 141.73 67.1094 141.73 74.2998 cv141.73 83.3535 136.85 90.0098 130.193 90.0098 cv127.441 90.0098 125.133 88.9463 123.18 86.9033 cv123.18 88.9463 li115.279 88.9463 li115.279 66.4873 licp@154.158 72.2588 mo154.158 79.5361 155.313 82.9092 158.595 82.9092 cv161.26 82.9092 162.855 81.1348 162.855 71.2813 cv162.855 64.8916 li162.855 53.9736 161.881 50.4238 158.595 50.4238 cv155.933 50.4238 154.158 52.998 154.158 65.0684 cv154.158 72.2588 licp154.158 43.4111 mo154.158 48.0273 li154.336 48.0273 li155.313 46.1641 156.289 44.832 157.353 44.0322 cv158.33 43.3223 159.484 42.8779 161.081 42.8779 cv168.448 42.8779 171.467 51.0459 171.467 67.4648 cv171.467 86.8145 166.675 90.0098 161.348 90.0098 cv158.595 90.0098 156.379 88.7676 154.336 85.9277 cv154.158 85.9277 li154.158 96.8457 li158.595 96.8457 li158.595 104.391 li142.086 104.391 li142.086 96.8457 li145.992 96.8457 li145.992 50.9551 li142.086 50.9551 li142.086 43.4111 li154.158 43.4111 licpf154.158 72.2588 mo154.158 79.5361 155.313 82.9092 158.595 82.9092 cv161.26 82.9092 162.855 81.1348 162.855 71.2813 cv162.855 64.8916 li162.855 53.9736 161.881 50.4238 158.595 50.4238 cv155.933 50.4238 154.158 52.998 154.158 65.0684 cv154.158 72.2588 licp154.158 43.4111 mo154.158 48.0273 li154.336 48.0273 li155.313 46.1641 156.289 44.832 157.353 44.0322 cv158.33 43.3223 159.484 42.8779 161.081 42.8779 cv168.448 42.8779 171.467 51.0459 171.467 67.4648 cv171.467 86.8145 166.675 90.0098 161.348 90.0098 cv158.595 90.0098 156.379 88.7676 154.336 85.9277 cv154.158 85.9277 li154.158 96.8457 li158.595 96.8457 li158.595 104.391 li142.086 104.391 li142.086 96.8457 li145.992 96.8457 li145.992 50.9551 li142.086 50.9551 li142.086 43.4111 li154.158 43.4111 licp@184.959 82.4658 mo187.977 82.4658 188.687 78.915 188.687 66.1338 cv188.687 53.0869 187.888 49.8916 184.959 49.8916 cv182.117 49.8916 181.319 52.8184 181.319 66.0459 cv181.319 80.4238 182.206 82.4658 184.959 82.4658 cvcp184.959 42.3477 mo193.301 42.3477 197.295 50.0684 197.295 66.2236 cv197.295 81.5791 193.656 90.0098 184.959 90.0098 cv176.792 90.0098 172.709 82.9092 172.709 66.1338 cv172.709 51.7549 175.639 42.3477 184.959 42.3477 cvcpf184.959 82.4658 mo187.977 82.4658 188.687 78.915 188.687 66.1338 cv188.687 53.0869 187.888 49.8916 184.959 49.8916 cv182.117 49.8916 181.319 52.8184 181.319 66.0459 cv181.319 80.4238 182.206 82.4658 184.959 82.4658 cvcp184.959 42.3477 mo193.301 42.3477 197.295 50.0684 197.295 66.2236 cv197.295 81.5791 193.656 90.0098 184.959 90.0098 cv176.792 90.0098 172.709 82.9092 172.709 66.1338 cv172.709 51.7549 175.639 42.3477 184.959 42.3477 cvcp@197.65 81.3994 mo201.734 81.3994 li201.734 50.9551 li197.65 50.9551 li197.65 43.4111 li209.899 43.4111 li209.899 52.2881 li210.076 52.2881 li213.094 44.5645 215.313 42.8779 220.639 42.8779 cv220.639 51.4883 li213.805 51.1348 209.899 55.6602 209.899 63.7373 cv209.899 81.3994 li214.516 81.3994 li214.516 88.9463 li197.65 88.9463 li197.65 81.3994 licpf197.65 81.3994 mo201.734 81.3994 li201.734 50.9551 li197.65 50.9551 li197.65 43.4111 li209.899 43.4111 li209.899 52.2881 li210.076 52.2881 li213.094 44.5645 215.313 42.8779 220.639 42.8779 cv220.639 51.4883 li213.805 51.1348 209.899 55.6602 209.899 63.7373 cv209.899 81.3994 li214.516 81.3994 li214.516 88.9463 li197.65 88.9463 li197.65 81.3994 licp@234.644 77.6719 mo234.644 80.6904 235.797 82.2002 238.284 82.2002 cv239.438 82.2002 239.971 82.0205 241.567 81.3994 cv241.567 88.501 li239.792 89.123 237.838 89.4766 235.088 89.4766 cv228.786 89.4766 226.478 85.4834 226.478 77.6719 cv226.478 50.9551 li222.482 50.9551 li222.482 43.4111 li226.478 43.4111 li226.478 35.9551 li229.14 34.2676 232.069 32.1387 234.644 30.0088 cv234.644 43.4111 li240.059 43.4111 li240.059 50.9551 li234.644 50.9551 li234.644 77.6719 licpf234.644 77.6719 mo234.644 80.6904 235.797 82.2002 238.284 82.2002 cv239.438 82.2002 239.971 82.0205 241.567 81.3994 cv241.567 88.501 li239.792 89.123 237.838 89.4766 235.088 89.4766 cv228.786 89.4766 226.478 85.4834 226.478 77.6719 cv226.478 50.9551 li222.482 50.9551 li222.482 43.4111 li226.478 43.4111 li226.478 35.9551 li229.14 34.2676 232.069 32.1387 234.644 30.0088 cv234.644 43.4111 li240.059 43.4111 li240.059 50.9551 li234.644 50.9551 li234.644 77.6719 licp@31.9395 67.5332 mo31.8486 80.5811 27.1455 89.6338 18.2695 89.6338 cv7.88477 89.6338 2.91406 78.8945 2.91406 56.6143 cv2.91406 35.7559 6.6416 22.1748 16.2266 22.1748 cv19.334 22.1748 21.6416 23.5088 23.3281 26.4355 cv23.5059 26.4355 li23.5059 23.2412 li31.4063 23.2412 li31.4063 44.4561 li23.5059 44.4561 li23.5059 35.9346 21.5527 30.7852 17.6475 30.7852 cv13.7412 30.7852 13.0313 33.7139 13.0313 55.4609 cv13.0313 76.0537 14.0088 81.0234 18.4473 81.0234 cv21.5527 81.0234 23.9502 77.8281 23.8613 65.3135 cv31.9395 67.5332 licpf1 lw31.9395 67.5332 mo31.8486 80.5811 27.1455 89.6338 18.2695 89.6338 cv7.88477 89.6338 2.91406 78.8945 2.91406 56.6143 cv2.91406 35.7559 6.6416 22.1748 16.2266 22.1748 cv19.334 22.1748 21.6416 23.5088 23.3281 26.4355 cv23.5059 26.4355 li23.5059 23.2412 li31.4063 23.2412 li31.4063 44.4561 li23.5059 44.4561 li23.5059 35.9346 21.5527 30.7852 17.6475 30.7852 cv13.7412 30.7852 13.0313 33.7139 13.0313 55.4609 cv13.0313 76.0537 14.0088 81.0234 18.4473 81.0234 cv21.5527 81.0234 23.9502 77.8281 23.8613 65.3135 cv31.9395 67.5332 licp@50.4004 61.585 mo50.4004 57.5918 li50.4004 51.6445 49.0684 49.0693 46.4951 49.0693 cv43.8301 49.0693 42.6777 51.4668 42.6777 59.6328 cv42.6777 61.585 li50.4004 61.585 licp58.3887 77.4736 mo56.5244 85.1074 52.0859 89.6338 46.6719 89.6338 cv37.3525 89.6338 34.0684 81.2031 34.0684 66.2002 cv34.0684 48.3604 38.8604 41.9707 46.583 41.9707 cv52.0859 41.9707 58.5645 46.4971 58.5645 61.1426 cv58.5645 68.0645 li42.6777 68.0645 li42.6777 70.0186 li42.6777 79.6035 44.3633 82.0889 46.8496 82.0889 cv49.334 82.0889 50.8438 79.3389 51.1973 74.8096 cv58.3887 77.4736 licpf50.4004 61.585 mo50.4004 57.5918 li50.4004 51.6445 49.0684 49.0693 46.4951 49.0693 cv43.8301 49.0693 42.6777 51.4668 42.6777 59.6328 cv42.6777 61.585 li50.4004 61.585 licp58.3887 77.4736 mo56.5244 85.1074 52.0859 89.6338 46.6719 89.6338 cv37.3525 89.6338 34.0684 81.2031 34.0684 66.2002 cv34.0684 48.3604 38.8604 41.9707 46.583 41.9707 cv52.0859 41.9707 58.5645 46.4971 58.5645 61.1426 cv58.5645 68.0645 li42.6777 68.0645 li42.6777 70.0186 li42.6777 79.6035 44.3633 82.0889 46.8496 82.0889 cv49.334 82.0889 50.8438 79.3389 51.1973 74.8096 cv58.3887 77.4736 licp@59.0986 81.0234 mo63.1797 81.0234 li63.1797 50.5791 li59.0986 50.5791 li59.0986 43.0342 li71.3477 43.0342 li71.3477 51.9121 li71.5254 51.9121 li74.543 44.1885 76.7598 42.502 82.0869 42.502 cv82.0869 51.1113 li75.252 50.7578 71.3477 55.2832 71.3477 63.3613 cv71.3477 81.0234 li75.9629 81.0234 li75.9629 88.5693 li59.0986 88.5693 li59.0986 81.0234 licpf59.0986 81.0234 mo63.1797 81.0234 li63.1797 50.5791 li59.0986 50.5791 li59.0986 43.0342 li71.3477 43.0342 li71.3477 51.9121 li71.5254 51.9121 li74.543 44.1885 76.7598 42.502 82.0869 42.502 cv82.0869 51.1113 li75.252 50.7578 71.3477 55.2832 71.3477 63.3613 cv71.3477 81.0234 li75.9629 81.0234 li75.9629 88.5693 li59.0986 88.5693 li59.0986 81.0234 licp@100.193 69.5742 mo98.8633 68.0645 97.709 67.4434 96.1094 67.4434 cv93.0918 67.4434 91.4951 70.0186 91.4951 74.8096 cv91.4951 79.5156 93.0918 82.001 96.1094 82.001 cv97.709 82.001 98.7734 81.3799 100.193 79.6035 cv100.193 69.5742 licp111.91 88.5693 mo100.193 88.5693 li100.193 84.6631 li100.017 84.6631 li98.2422 87.5928 95.5771 89.1006 92.6484 89.1006 cv86.8789 89.1006 82.8848 83.4209 82.8848 75.0781 cv82.8848 64.4268 88.5654 60.6982 93.7129 60.6982 cv96.2891 60.6982 98.3301 61.6738 100.193 63.8945 cv100.193 56.0811 li100.193 52.5332 100.104 49.0693 96.0215 49.0693 cv92.5605 49.0693 91.7607 52.4424 91.584 54.9277 cv84.0391 52.7979 li85.1035 46.0527 89.8076 41.9707 96.2891 41.9707 cv102.322 41.9707 108.359 45.7871 108.359 54.5732 cv108.359 81.0234 li111.91 81.0234 li111.91 88.5693 licpf100.193 69.5742 mo98.8633 68.0645 97.709 67.4434 96.1094 67.4434 cv93.0918 67.4434 91.4951 70.0186 91.4951 74.8096 cv91.4951 79.5156 93.0918 82.001 96.1094 82.001 cv97.709 82.001 98.7734 81.3799 100.193 79.6035 cv100.193 69.5742 licp111.91 88.5693 mo100.193 88.5693 li100.193 84.6631 li100.017 84.6631 li98.2422 87.5928 95.5771 89.1006 92.6484 89.1006 cv86.8789 89.1006 82.8848 83.4209 82.8848 75.0781 cv82.8848 64.4268 88.5654 60.6982 93.7129 60.6982 cv96.2891 60.6982 98.3301 61.6738 100.193 63.8945 cv100.193 56.0811 li100.193 52.5332 100.104 49.0693 96.0215 49.0693 cv92.5605 49.0693 91.7607 52.4424 91.584 54.9277 cv84.0391 52.7979 li85.1035 46.0527 89.8076 41.9707 96.2891 41.9707 cv102.322 41.9707 108.359 45.7871 108.359 54.5732 cv108.359 81.0234 li111.91 81.0234 li111.91 88.5693 licp@115.193 66.1113 mo123.094 66.1113 li123.094 72.1484 li123.094 79.0723 124.336 81.6455 127.976 81.6455 cv130.729 81.6455 132.592 79.1602 132.592 75.2549 cv132.592 71.7041 131.171 66.7334 127.71 62.2949 cv123.273 56.7031 li116.615 48.3604 114.572 44.0996 114.572 36.7334 cv114.572 28.2109 118.834 22.1748 124.869 22.1748 cv127.443 22.1748 129.396 23.0635 131.438 25.1934 cv131.438 23.2412 li139.338 23.2412 li139.338 42.7686 li131.438 42.7686 li131.438 37.7988 li131.438 32.916 130.373 30.1641 127.089 30.1641 cv124.248 30.1641 123.273 32.5605 123.273 34.957 cv123.273 38.6855 124.869 42.7686 128.063 46.6738 cv132.413 52.0889 li138.718 59.8984 141.645 66.7334 141.645 73.9238 cv141.645 82.9785 136.764 89.6338 130.107 89.6338 cv127.354 89.6338 125.047 88.5693 123.094 86.5264 cv123.094 88.5693 li115.193 88.5693 li115.193 66.1113 licpf115.193 66.1113 mo123.094 66.1113 li123.094 72.1484 li123.094 79.0723 124.336 81.6455 127.976 81.6455 cv130.729 81.6455 132.592 79.1602 132.592 75.2549 cv132.592 71.7041 131.171 66.7334 127.71 62.2949 cv123.273 56.7031 li116.615 48.3604 114.572 44.0996 114.572 36.7334 cv114.572 28.2109 118.834 22.1748 124.869 22.1748 cv127.443 22.1748 129.396 23.0635 131.438 25.1934 cv131.438 23.2412 li139.338 23.2412 li139.338 42.7686 li131.438 42.7686 li131.438 37.7988 li131.438 32.916 130.373 30.1641 127.089 30.1641 cv124.248 30.1641 123.273 32.5605 123.273 34.957 cv123.273 38.6855 124.869 42.7686 128.063 46.6738 cv132.413 52.0889 li138.718 59.8984 141.645 66.7334 141.645 73.9238 cv141.645 82.9785 136.764 89.6338 130.107 89.6338 cv127.354 89.6338 125.047 88.5693 123.094 86.5264 cv123.094 88.5693 li115.193 88.5693 li115.193 66.1113 licp@154.07 71.8828 mo154.07 79.1602 155.226 82.5332 158.51 82.5332 cv161.174 82.5332 162.77 80.7588 162.77 70.9053 cv162.77 64.5146 li162.77 53.5977 161.795 50.0479 158.51 50.0479 cv155.847 50.0479 154.07 52.6211 154.07 64.6924 cv154.07 71.8828 licp154.07 43.0342 mo154.07 47.6514 li154.25 47.6514 li155.226 45.7871 156.203 44.4561 157.267 43.6553 cv158.244 42.9463 159.397 42.502 160.994 42.502 cv168.361 42.502 171.38 50.6689 171.38 67.0889 cv171.38 86.4385 166.588 89.6338 161.262 89.6338 cv158.51 89.6338 156.291 88.3906 154.25 85.5518 cv154.07 85.5518 li154.07 96.4697 li158.51 96.4697 li158.51 104.015 li142.001 104.015 li142.001 96.4697 li145.905 96.4697 li145.905 50.5791 li142.001 50.5791 li142.001 43.0342 li154.07 43.0342 licpf154.07 71.8828 mo154.07 79.1602 155.226 82.5332 158.51 82.5332 cv161.174 82.5332 162.77 80.7588 162.77 70.9053 cv162.77 64.5146 li162.77 53.5977 161.795 50.0479 158.51 50.0479 cv155.847 50.0479 154.07 52.6211 154.07 64.6924 cv154.07 71.8828 licp154.07 43.0342 mo154.07 47.6514 li154.25 47.6514 li155.226 45.7871 156.203 44.4561 157.267 43.6553 cv158.244 42.9463 159.397 42.502 160.994 42.502 cv168.361 42.502 171.38 50.6689 171.38 67.0889 cv171.38 86.4385 166.588 89.6338 161.262 89.6338 cv158.51 89.6338 156.291 88.3906 154.25 85.5518 cv154.07 85.5518 li154.07 96.4697 li158.51 96.4697 li158.51 104.015 li142.001 104.015 li142.001 96.4697 li145.905 96.4697 li145.905 50.5791 li142.001 50.5791 li142.001 43.0342 li154.07 43.0342 licp@184.872 82.0889 mo187.89 82.0889 188.599 78.5381 188.599 65.7578 cv188.599 52.71 187.802 49.5156 184.872 49.5156 cv182.031 49.5156 181.232 52.4424 181.232 65.6699 cv181.232 80.0488 182.119 82.0889 184.872 82.0889 cvcp184.872 41.9707 mo193.214 41.9707 197.209 49.6924 197.209 65.8467 cv197.209 81.2031 193.57 89.6338 184.872 89.6338 cv176.706 89.6338 172.622 82.5332 172.622 65.7578 cv172.622 51.3789 175.552 41.9707 184.872 41.9707 cvcpf184.872 82.0889 mo187.89 82.0889 188.599 78.5381 188.599 65.7578 cv188.599 52.71 187.802 49.5156 184.872 49.5156 cv182.031 49.5156 181.232 52.4424 181.232 65.6699 cv181.232 80.0488 182.119 82.0889 184.872 82.0889 cvcp184.872 41.9707 mo193.214 41.9707 197.209 49.6924 197.209 65.8467 cv197.209 81.2031 193.57 89.6338 184.872 89.6338 cv176.706 89.6338 172.622 82.5332 172.622 65.7578 cv172.622 51.3789 175.552 41.9707 184.872 41.9707 cvcp@197.563 81.0234 mo201.647 81.0234 li201.647 50.5791 li197.563 50.5791 li197.563 43.0342 li209.813 43.0342 li209.813 51.9121 li209.989 51.9121 li213.007 44.1885 215.228 42.502 220.553 42.502 cv220.553 51.1113 li213.718 50.7578 209.813 55.2832 209.813 63.3613 cv209.813 81.0234 li214.43 81.0234 li214.43 88.5693 li197.563 88.5693 li197.563 81.0234 licpf197.563 81.0234 mo201.647 81.0234 li201.647 50.5791 li197.563 50.5791 li197.563 43.0342 li209.813 43.0342 li209.813 51.9121 li209.989 51.9121 li213.007 44.1885 215.228 42.502 220.553 42.502 cv220.553 51.1113 li213.718 50.7578 209.813 55.2832 209.813 63.3613 cv209.813 81.0234 li214.43 81.0234 li214.43 88.5693 li197.563 88.5693 li197.563 81.0234 licp@234.557 77.2959 mo234.557 80.3135 235.712 81.8242 238.196 81.8242 cv239.352 81.8242 239.884 81.6455 241.48 81.0234 cv241.48 88.126 li239.706 88.7461 237.752 89.1006 235.002 89.1006 cv228.7 89.1006 226.391 85.1074 226.391 77.2959 cv226.391 50.5791 li222.396 50.5791 li222.396 43.0342 li226.391 43.0342 li226.391 35.5791 li229.053 33.8916 231.983 31.7627 234.557 29.6328 cv234.557 43.0342 li239.972 43.0342 li239.972 50.5791 li234.557 50.5791 li234.557 77.2959 licpf234.557 77.2959 mo234.557 80.3135 235.712 81.8242 238.196 81.8242 cv239.352 81.8242 239.884 81.6455 241.48 81.0234 cv241.48 88.126 li239.706 88.7461 237.752 89.1006 235.002 89.1006 cv228.7 89.1006 226.391 85.1074 226.391 77.2959 cv226.391 50.5791 li222.396 50.5791 li222.396 43.0342 li226.391 43.0342 li226.391 35.5791 li229.053 33.8916 231.983 31.7627 234.557 29.6328 cv234.557 43.0342 li239.972 43.0342 li239.972 50.5791 li234.557 50.5791 li234.557 77.2959 licp@32.2041 67.2158 mo32.1162 80.2637 27.4121 89.3164 18.5352 89.3164 cv8.15039 89.3164 3.17969 78.5771 3.17969 56.2969 cv3.17969 35.4375 6.9082 21.8574 16.4941 21.8574 cv19.6006 21.8574 21.9082 23.1885 23.5947 26.1182 cv23.7734 26.1182 li23.7734 22.9229 li31.6719 22.9229 li31.6719 44.1367 li23.7734 44.1367 li23.7734 35.6143 21.8193 30.4678 17.9131 30.4678 cv14.0088 30.4678 13.2988 33.3975 13.2988 55.1436 cv13.2988 75.7354 14.2754 80.7061 18.7129 80.7061 cv21.8193 80.7061 24.2168 77.5107 24.127 64.9961 cv32.2041 67.2158 licplevel3{gsaveclp[-2.94873e-06 67.459 -67.459 -2.94873e-06 17.6919 21.8574 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.94873e-06 67.459 -67.459 -2.94873e-06 17.6919 21.8574 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath50.667 61.2676 mo50.667 57.2744 li50.667 51.3271 49.3359 48.7529 46.7598 48.7529 cv44.0977 48.7529 42.9434 51.1494 42.9434 59.3154 cv42.9434 61.2676 li50.667 61.2676 licp58.6563 77.1572 mo56.792 84.79 52.3535 89.3164 46.9395 89.3164 cv37.6191 89.3164 34.334 80.8848 34.334 65.8828 cv34.334 48.043 39.1279 41.6514 46.8516 41.6514 cv52.3535 41.6514 58.833 46.1787 58.833 60.8232 cv58.833 67.7461 li42.9434 67.7461 li42.9434 69.7012 li42.9434 79.2871 44.6309 81.7715 47.1162 81.7715 cv49.6016 81.7715 51.1094 79.0215 51.4648 74.4932 cv58.6563 77.1572 licplevel3{gsaveclp[-2.08351e-06 47.665 -47.665 -2.08351e-06 46.5835 41.6514 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.08351e-06 47.665 -47.665 -2.08351e-06 46.5835 41.6514 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath59.3652 80.7061 mo63.4473 80.7061 li63.4473 50.2607 li59.3652 50.2607 li59.3652 42.7168 li71.6133 42.7168 li71.6133 51.5918 li71.791 51.5918 li74.8105 43.8711 77.0283 42.1836 82.3535 42.1836 cv82.3535 50.7939 li75.5195 50.4375 71.6133 54.9658 71.6133 63.043 cv71.6133 80.7061 li76.2285 80.7061 li76.2285 88.2529 li59.3652 88.2529 li59.3652 80.7061 licplevel3{gsaveclp[-2.01375e-06 46.0693 -46.0693 -2.01375e-06 70.8594 42.1836 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.01375e-06 46.0693 -46.0693 -2.01375e-06 70.8594 42.1836 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath100.461 69.2568 mo99.1289 67.7461 97.9756 67.126 96.377 67.126 cv93.3594 67.126 91.7627 69.7012 91.7627 74.4932 cv91.7627 79.1982 93.3594 81.6826 96.377 81.6826 cv97.9756 81.6826 99.04 81.0615 100.461 79.2871 cv100.461 69.2568 licp112.178 88.2529 mo100.461 88.2529 li100.461 84.3457 li100.281 84.3457 li98.5068 87.2754 95.8438 88.7832 92.915 88.7832 cv87.1465 88.7832 83.1533 83.1035 83.1533 74.7607 cv83.1533 64.1104 88.833 60.3809 93.9805 60.3809 cv96.5537 60.3809 98.5967 61.3564 100.461 63.5771 cv100.461 55.7646 li100.461 52.2139 100.371 48.7529 96.2891 48.7529 cv92.8262 48.7529 92.0283 52.125 91.8506 54.6104 cv84.3047 52.4805 li85.3701 45.7344 90.0752 41.6514 96.5537 41.6514 cv102.592 41.6514 108.627 45.4678 108.627 54.2568 cv108.627 80.7061 li112.178 80.7061 li112.178 88.2529 licplevel3{gsaveclp[-2.0602e-06 47.1318 -47.1318 -2.0602e-06 97.6655 41.6514 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.0602e-06 47.1318 -47.1318 -2.0602e-06 97.6655 41.6514 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath115.461 65.7949 mo123.36 65.7949 li123.36 71.8311 li123.36 78.7539 124.604 81.3271 128.243 81.3271 cv130.994 81.3271 132.857 78.8418 132.857 74.9365 cv132.857 71.3857 131.438 66.416 127.976 61.9775 cv123.537 56.3857 li116.881 48.043 114.84 43.7822 114.84 36.415 cv114.84 27.8936 119.1 21.8574 125.137 21.8574 cv127.71 21.8574 129.663 22.7451 131.704 24.875 cv131.704 22.9229 li139.604 22.9229 li139.604 42.4512 li131.704 42.4512 li131.704 37.4805 li131.704 32.5986 130.641 29.8457 127.354 29.8457 cv124.516 29.8457 123.537 32.2432 123.537 34.6396 cv123.537 38.3672 125.137 42.4512 128.331 46.3555 cv132.68 51.7705 li138.982 59.5811 141.913 66.416 141.913 73.6064 cv141.913 82.6602 137.03 89.3164 130.373 89.3164 cv127.622 89.3164 125.313 88.2529 123.36 86.21 cv123.36 88.2529 li115.461 88.2529 li115.461 65.7949 licplevel3{gsaveclp[-2.94873e-06 67.459 -67.459 -2.94873e-06 128.376 21.8574 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.94873e-06 67.459 -67.459 -2.94873e-06 128.376 21.8574 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath154.338 71.5654 mo154.338 78.8418 155.494 82.2158 158.775 82.2158 cv161.438 82.2158 163.037 80.4404 163.037 70.5879 cv163.037 64.1973 li163.037 53.2793 162.061 49.7275 158.775 49.7275 cv156.113 49.7275 154.338 52.3018 154.338 64.375 cv154.338 71.5654 licp154.338 42.7168 mo154.338 47.3311 li154.516 47.3311 li155.494 45.4678 156.469 44.1367 157.533 43.3389 cv158.512 42.6279 159.664 42.1836 161.262 42.1836 cv168.629 42.1836 171.646 50.3486 171.646 66.7715 cv171.646 86.1221 166.854 89.3164 161.527 89.3164 cv158.775 89.3164 156.557 88.0732 154.516 85.2344 cv154.338 85.2344 li154.338 96.1523 li158.775 96.1523 li158.775 103.697 li142.266 103.697 li142.266 96.1523 li146.173 96.1523 li146.173 50.2607 li142.266 50.2607 li142.266 42.7168 li154.338 42.7168 licplevel3{gsaveclp[-2.68885e-06 61.5137 -61.5137 -2.68885e-06 156.956 42.1836 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.68885e-06 61.5137 -61.5137 -2.68885e-06 156.956 42.1836 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath185.137 81.7715 mo188.155 81.7715 188.865 78.2207 188.865 65.4404 cv188.865 52.3926 188.067 49.1953 185.137 49.1953 cv182.299 49.1953 181.499 52.125 181.499 65.3525 cv181.499 79.7305 182.387 81.7715 185.137 81.7715 cvcp185.137 41.6514 mo193.481 41.6514 197.475 49.374 197.475 65.5293 cv197.475 80.8848 193.838 89.3164 185.137 89.3164 cv176.972 89.3164 172.89 82.2158 172.89 65.4404 cv172.89 51.0586 175.817 41.6514 185.137 41.6514 cvcplevel3{gsaveclp[-2.08351e-06 47.665 -47.665 -2.08351e-06 185.183 41.6514 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.08351e-06 47.665 -47.665 -2.08351e-06 185.183 41.6514 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath197.831 80.7061 mo201.913 80.7061 li201.913 50.2607 li197.831 50.2607 li197.831 42.7168 li210.08 42.7168 li210.08 51.5918 li210.257 51.5918 li213.275 43.8711 215.493 42.1836 220.819 42.1836 cv220.819 50.7939 li213.985 50.4375 210.08 54.9658 210.08 63.043 cv210.08 80.7061 li214.695 80.7061 li214.695 88.2529 li197.831 88.2529 li197.831 80.7061 licplevel3{gsaveclp[-2.01375e-06 46.0693 -46.0693 -2.01375e-06 209.325 42.1836 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.01375e-06 46.0693 -46.0693 -2.01375e-06 209.325 42.1836 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath234.825 76.9785 mo234.825 79.9961 235.977 81.5059 238.462 81.5059 cv239.616 81.5059 240.149 81.3271 241.747 80.7061 cv241.747 87.8076 li239.972 88.4287 238.02 88.7832 235.267 88.7832 cv228.965 88.7832 226.656 84.79 226.656 76.9785 cv226.656 50.2607 li222.664 50.2607 li222.664 42.7168 li226.656 42.7168 li226.656 35.2607 li229.321 33.5732 232.248 31.4443 234.825 29.3125 cv234.825 42.7168 li240.238 42.7168 li240.238 50.2607 li234.825 50.2607 li234.825 76.9785 licplevel3{gsaveclp[-2.59955e-06 59.4707 -59.4707 -2.59955e-06 232.205 29.3125 ] concat/0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-2.59955e-06 59.4707 -59.4707 -2.59955e-06 232.205 29.3125 ] concatclp/0 /Gradient get_res exec grestore}ifnewpath243.775 33.5479 mo244.238 33.5479 li244.814 33.5479 245.259 33.3623 245.259 32.8809 cv245.259 32.4922 244.979 32.1943 244.313 32.1943 cv244.071 32.1943 243.905 32.1943 243.775 32.2139 cv243.775 33.5479 licp243.775 36.2168 mo242.793 36.2168 li242.793 31.584 li243.163 31.5283 243.572 31.4541 244.274 31.4541 cv245.072 31.4541 245.555 31.584 245.869 31.8252 cv246.129 32.0283 246.277 32.3438 246.277 32.8252 cv246.277 33.3809 245.887 33.7705 245.387 33.9004 cv245.387 33.9365 li245.796 34.0107 246.055 34.3809 246.129 35.0674 cv246.221 35.79 246.313 36.0674 246.389 36.2168 cv245.368 36.2168 li245.259 36.0498 245.184 35.6426 245.091 35.0117 cv245.016 34.5117 244.721 34.3076 244.22 34.3076 cv243.775 34.3076 li243.775 36.2168 licp244.479 30.4531 mo242.736 30.4531 241.329 31.9541 241.329 33.8066 cv241.329 35.6787 242.736 37.1426 244.499 37.1426 cv246.258 37.1621 247.687 35.6787 247.687 33.8066 cv247.687 31.9541 246.258 30.4531 244.499 30.4531 cv244.479 30.4531 licp244.516 29.6191 mo246.814 29.6191 248.648 31.4902 248.648 33.7881 cv248.648 36.123 246.814 37.9766 244.499 37.9766 cv242.199 37.9766 240.328 36.123 240.328 33.7881 cv240.328 31.4902 242.199 29.6191 244.499 29.6191 cv244.516 29.6191 licp0 0 0 1 cmykf10.0684 99.041 mo9.5752 99.041 li9.5752 97.3145 li12.7969 97.3145 li12.7969 99.041 li12.2715 99.041 li12.9287 102.493 li12.9609 102.493 li13.9473 97.3145 li15.7891 97.3145 li16.7588 102.493 li16.791 102.493 li17.416 99.041 li16.9395 99.041 li16.9395 97.3145 li19.4873 97.3145 li19.4873 99.041 li18.9941 99.041 li17.5801 105.484 li15.5586 105.484 li14.6543 101.835 li14.6211 101.835 li13.6348 105.484 li11.5977 105.484 li10.0684 99.041 licpf20.1777 99.041 mo19.6846 99.041 li19.6846 97.3145 li22.9063 97.3145 li22.9063 99.041 li22.3809 99.041 li23.0371 102.493 li23.0703 102.493 li24.0566 97.3145 li25.8984 97.3145 li26.8672 102.493 li26.9004 102.493 li27.5254 99.041 li27.0488 99.041 li27.0488 97.3145 li29.5967 97.3145 li29.5967 99.041 li29.1035 99.041 li27.6895 105.484 li25.668 105.484 li24.7637 101.835 li24.7305 101.835 li23.7441 105.484 li21.707 105.484 li20.1777 99.041 licpf30.2871 99.041 mo29.793 99.041 li29.793 97.3145 li33.0156 97.3145 li33.0156 99.041 li32.4893 99.041 li33.1465 102.493 li33.1797 102.493 li34.166 97.3145 li36.0078 97.3145 li36.9766 102.493 li37.0098 102.493 li37.6348 99.041 li37.1582 99.041 li37.1582 97.3145 li39.7051 97.3145 li39.7051 99.041 li39.2129 99.041 li37.7988 105.484 li35.7773 105.484 li34.873 101.835 li34.8398 101.835 li33.8535 105.484 li31.8154 105.484 li30.2871 99.041 licpf39.9385 102.806 mo42.5029 102.806 li42.5029 105.369 li39.9385 105.369 li39.9385 102.806 licpf50.2617 102.871 mo49.9492 104.695 48.9961 105.6 47.3516 105.6 cv45.3789 105.6 44.1797 103.972 44.1797 101.26 cv44.1797 98.8105 45.2637 97.1836 46.8418 97.1836 cv47.6641 97.1836 48.0918 97.5117 48.3711 98.1865 cv48.4043 98.1865 li48.4043 97.3145 li50.1299 97.3145 li50.1299 100.569 li48.4043 100.569 li48.3223 99.3691 48.043 98.8604 47.4668 98.8604 cv46.875 98.8604 46.6777 99.4346 46.6777 101.26 cv46.6777 103.332 46.875 103.874 47.5654 103.874 cv48.0918 103.874 48.3047 103.397 48.4043 102.181 cv50.2617 102.871 licpf54.9951 100.503 mo54.9951 100.109 li54.9951 99.1563 54.8145 98.7285 54.3711 98.7285 cv53.9277 98.7285 53.7295 99.123 53.7295 100.503 cv54.9951 100.503 licp57.2793 103.594 mo56.8027 104.86 55.7354 105.6 54.3867 105.6 cv52.3818 105.6 51.3457 104.121 51.3457 101.244 cv51.3457 97.9063 52.9902 97.085 54.4531 97.085 cv55.7188 97.085 57.3945 97.9229 57.3945 100.948 cv57.3945 101.704 li53.7295 101.704 li53.7295 103.562 53.9277 103.874 54.4688 103.874 cv54.9131 103.874 55.1602 103.627 55.291 102.854 cv57.2793 103.594 licpf58.2656 103.644 mo59.1211 103.644 li59.1211 99.041 li58.2656 99.041 li58.2656 97.3145 li61.5215 97.3145 li61.5215 98.9258 li61.5547 98.9258 li61.8828 97.6104 62.4414 97.1338 63.3291 97.1836 cv63.3291 99.8789 li62.1123 99.8789 61.5215 100.668 61.5215 102.262 cv61.5215 103.644 li62.4746 103.644 li62.4746 105.369 li58.2656 105.369 li58.2656 103.644 licpf67.9814 102.082 mo67.751 101.803 67.5537 101.704 67.291 101.704 cv66.8145 101.704 66.5176 102.131 66.5176 102.772 cv66.5176 103.397 66.7969 103.759 67.2578 103.759 cv67.5537 103.759 67.751 103.644 67.9814 103.298 cv67.9814 102.082 licp67.9814 105.369 mo67.9814 104.745 li67.4551 105.271 66.9287 105.484 66.3203 105.484 cv65.0547 105.484 64.1182 104.383 64.1182 102.871 cv64.1182 101.342 65.1211 100.191 66.5352 100.191 cv67.0605 100.191 67.4395 100.323 67.9814 100.685 cv67.9814 99.8301 li67.9814 98.959 67.7832 98.6455 67.2246 98.6455 cv66.8145 98.6455 66.5996 98.8271 66.4355 99.2715 cv64.2822 98.8271 li64.874 97.71 66.0254 97.085 67.5205 97.085 cv68.8511 97.085 70.3804 97.5947 70.3804 99.5176 cv70.3804 103.644 li71.1362 103.644 li71.1362 105.369 li67.9814 105.369 licpf72.1069 103.184 mo73.8315 103.184 li73.8823 103.774 74.1128 104.055 74.5229 104.055 cv74.8511 104.055 75.0483 103.824 75.0483 103.495 cv75.0483 102.345 71.9917 101.983 71.9917 99.4346 cv71.9917 98.0879 72.7476 97.1836 73.8647 97.1836 cv74.5386 97.1836 74.9331 97.5947 75.1304 97.8408 cv75.1636 97.8408 li75.1636 97.3145 li76.8901 97.3145 li76.8901 99.4023 li75.1636 99.4023 li75.0815 98.8271 74.8687 98.5635 74.4897 98.5635 cv74.1616 98.5635 73.9468 98.7939 73.9468 99.123 cv73.9468 100.388 77.0874 100.569 77.0874 103.266 cv77.0874 104.613 76.3472 105.501 75.2124 105.501 cv74.2769 105.501 74.1616 105.139 73.8647 104.844 cv73.8315 104.844 li73.8315 105.369 li72.1069 105.369 li72.1069 103.184 licpf81.7065 103.774 mo82.2651 103.774 82.3628 103.281 82.3628 101.293 cv82.3628 99.665 82.1987 99.1064 81.6909 99.1064 cv81.2456 99.1064 81.0308 99.583 81.0308 100.536 cv81.0308 102.278 li81.0308 103.347 81.2124 103.774 81.7065 103.774 cvcp77.8433 107.326 mo78.6323 107.326 li78.6323 99.041 li77.8433 99.041 li77.8433 97.3145 li81.0308 97.3145 li81.0308 98.2354 li81.0659 98.2354 li81.312 97.4961 81.9194 97.1836 82.5288 97.1836 cv84.0405 97.1836 84.8628 98.6455 84.8628 101.309 cv84.8628 104.022 84.0229 105.501 82.5444 105.501 cv81.9526 105.501 81.5249 105.287 81.0308 104.745 cv81.0308 107.326 li82.1323 107.326 li82.1323 109.052 li77.8433 109.052 li77.8433 107.326 licpf89.3647 103.759 mo89.9741 103.759 90.2534 103.02 90.2534 101.342 cv90.2534 99.665 89.9741 98.9258 89.3647 98.9258 cv88.7417 98.9258 88.4624 99.665 88.4624 101.342 cv88.4624 103.02 88.7417 103.759 89.3647 103.759 cvcp89.3647 97.085 mo91.355 97.085 92.7515 98.8438 92.7515 101.342 cv92.7515 103.841 91.355 105.6 89.3647 105.6 cv87.3608 105.6 85.9624 103.841 85.9624 101.342 cv85.9624 98.8438 87.3608 97.085 89.3647 97.085 cvcpf93.7222 103.644 mo94.5776 103.644 li94.5776 99.041 li93.7222 99.041 li93.7222 97.3145 li96.9761 97.3145 li96.9761 98.9258 li97.0093 98.9258 li97.3374 97.6104 97.896 97.1338 98.7847 97.1836 cv98.7847 99.8789 li97.5679 99.8789 96.9761 100.668 96.9761 102.262 cv96.9761 103.644 li97.9292 103.644 li97.9292 105.369 li93.7222 105.369 li93.7222 103.644 licpf103.894 105.336 mo103.367 105.518 102.923 105.6 102.431 105.6 cv101.001 105.6 100.523 104.663 100.523 103.298 cv100.523 99.041 li99.8003 99.041 li99.8003 97.3145 li100.523 97.3145 li100.523 96.2959 li102.923 94.4219 li102.923 97.3145 li103.894 97.3145 li103.894 99.041 li102.923 99.041 li102.923 102.641 li102.923 103.363 103.087 103.627 103.531 103.627 cv103.664 103.627 103.779 103.594 103.894 103.545 cv103.894 105.336 licpf105.521 102.806 mo108.085 102.806 li108.085 105.369 li105.521 105.369 li105.521 102.806 licpf115.843 102.871 mo115.531 104.695 114.578 105.6 112.933 105.6 cv110.96 105.6 109.761 103.972 109.761 101.26 cv109.761 98.8105 110.845 97.1836 112.423 97.1836 cv113.246 97.1836 113.673 97.5117 113.953 98.1865 cv113.986 98.1865 li113.986 97.3145 li115.712 97.3145 li115.712 100.569 li113.986 100.569 li113.904 99.3691 113.625 98.8604 113.048 98.8604 cv112.457 98.8604 112.259 99.4346 112.259 101.26 cv112.259 103.332 112.457 103.874 113.148 103.874 cv113.673 103.874 113.886 103.397 113.986 102.181 cv115.843 102.871 licpf120.347 103.759 mo120.955 103.759 121.234 103.02 121.234 101.342 cv121.234 99.665 120.955 98.9258 120.347 98.9258 cv119.722 98.9258 119.443 99.665 119.443 101.342 cv119.443 103.02 119.722 103.759 120.347 103.759 cvcp120.347 97.085 mo122.335 97.085 123.732 98.8438 123.732 101.342 cv123.732 103.841 122.335 105.6 120.347 105.6 cv118.341 105.6 116.945 103.841 116.945 101.342 cv116.945 98.8438 118.341 97.085 120.347 97.085 cvcpf124.703 103.644 mo125.509 103.644 li125.509 99.041 li124.703 99.041 li124.703 97.3145 li127.908 97.3145 li127.908 98.1699 li127.957 98.1699 li128.32 97.7588 128.763 97.1836 129.716 97.1836 cv130.49 97.1836 131.031 97.5283 131.458 98.2686 cv132.314 97.4795 132.888 97.1836 133.595 97.1836 cv134.73 97.1836 135.699 98.0381 135.699 100.044 cv135.699 103.644 li136.556 103.644 li136.556 105.369 li133.298 105.369 li133.298 100.323 li133.298 99.4023 133.101 99.0244 132.593 99.0244 cv132.314 99.0244 132.099 99.1396 131.804 99.4346 cv131.804 103.644 li132.478 103.644 li132.478 105.369 li129.404 105.369 li129.404 100.323 li129.404 99.3857 129.207 99.0244 128.714 99.0244 cv128.402 99.0244 128.171 99.1563 127.908 99.4346 cv127.908 103.644 li128.582 103.644 li128.582 105.369 li124.703 105.369 li124.703 103.644 licpf164.773 103.976 mo165.644 103.976 li165.644 97.2383 li165.349 97.3623 165.085 97.4238 164.773 97.4707 cv164.773 95.8867 li165.707 95.6855 166.328 95.3125 167.025 94.583 cv167.912 94.583 li167.912 103.976 li168.763 103.976 li168.763 105.605 li164.773 105.605 li164.773 103.976 licpf170.767 103.184 mo173.187 103.184 li173.187 105.605 li170.767 105.605 li170.767 103.184 licpf176.386 102.36 mo176.386 103.929 176.541 104.395 177.177 104.395 cv177.752 104.395 177.955 103.897 177.955 102.36 cv177.955 100.964 177.723 100.421 177.164 100.421 cv176.587 100.421 176.386 100.964 176.386 102.36 cvcp176.371 97.7188 mo176.371 98.7588 176.587 99.1631 177.148 99.1631 cv177.707 99.1631 177.971 98.7588 177.971 97.6729 cv177.971 96.4932 177.768 96.0107 177.148 96.0107 cv176.572 96.0107 176.371 96.4775 176.371 97.7188 cvcp177.177 105.823 mo175.019 105.823 174.259 104.286 174.259 102.656 cv174.259 101.166 174.755 100.343 175.937 99.7842 cv174.912 99.3184 174.414 98.5264 174.414 97.3926 cv174.414 95.7158 175.533 94.583 177.177 94.583 cv178.809 94.583 179.926 95.7158 179.926 97.3926 cv179.926 98.5264 179.43 99.3184 178.391 99.7842 cv179.568 100.343 180.082 101.166 180.082 102.625 cv180.082 103.867 179.631 105.823 177.177 105.823 cvcpf182.629 102.36 mo182.629 103.929 182.783 104.395 183.42 104.395 cv183.994 104.395 184.195 103.897 184.195 102.36 cv184.195 100.964 183.963 100.421 183.404 100.421 cv182.83 100.421 182.629 100.964 182.629 102.36 cvcp182.611 97.7188 mo182.611 98.7588 182.83 99.1631 183.389 99.1631 cv183.947 99.1631 184.213 98.7588 184.213 97.6729 cv184.213 96.4932 184.01 96.0107 183.389 96.0107 cv182.814 96.0107 182.611 96.4775 182.611 97.7188 cvcp183.42 105.823 mo181.262 105.823 180.5 104.286 180.5 102.656 cv180.5 101.166 180.998 100.343 182.178 99.7842 cv181.152 99.3184 180.656 98.5264 180.656 97.3926 cv180.656 95.7158 181.773 94.583 183.42 94.583 cv185.049 94.583 186.168 95.7158 186.168 97.3926 cv186.168 98.5264 185.67 99.3184 184.631 99.7842 cv185.811 100.343 186.322 101.166 186.322 102.625 cv186.322 103.867 185.871 105.823 183.42 105.823 cvcpf188.869 102.36 mo188.869 103.929 189.023 104.395 189.66 104.395 cv190.234 104.395 190.436 103.897 190.436 102.36 cv190.436 100.964 190.203 100.421 189.645 100.421 cv189.07 100.421 188.869 100.964 188.869 102.36 cvcp188.854 97.7188 mo188.854 98.7588 189.07 99.1631 189.629 99.1631 cv190.188 99.1631 190.451 98.7588 190.451 97.6729 cv190.451 96.4932 190.25 96.0107 189.629 96.0107 cv189.055 96.0107 188.854 96.4775 188.854 97.7188 cvcp189.66 105.823 mo187.502 105.823 186.742 104.286 186.742 102.656 cv186.742 101.166 187.238 100.343 188.418 99.7842 cv187.395 99.3184 186.896 98.5264 186.896 97.3926 cv186.896 95.7158 188.014 94.583 189.66 94.583 cv191.291 94.583 192.408 95.7158 192.408 97.3926 cv192.408 98.5264 191.912 99.3184 190.871 99.7842 cv192.053 100.343 192.563 101.166 192.563 102.625 cv192.563 103.867 192.113 105.823 189.66 105.823 cvcpf193.635 103.184 mo196.057 103.184 li196.057 105.605 li193.635 105.605 li193.635 103.184 licpf197.111 105.605 mo197.064 100.529 200.373 100.607 200.373 97.4092 cv200.373 96.5547 200.154 96.167 199.689 96.167 cv199.176 96.167 198.943 96.6016 198.943 97.4863 cv198.943 97.7041 198.959 97.998 198.99 98.2314 cv197.096 98.123 li197.08 98.0293 197.08 97.7813 197.08 97.5947 cv197.08 95.7627 198.152 94.583 199.828 94.583 cv201.506 94.583 202.686 95.7158 202.686 97.5332 cv202.686 100.917 198.943 101.461 198.912 104.101 cv201.102 104.101 li201.102 102.438 li202.732 102.438 li202.732 105.605 li197.111 105.605 licpf205.277 102.299 mo205.215 103.851 205.447 104.302 205.977 104.302 cv206.566 104.302 206.721 103.759 206.721 102.376 cv206.721 100.995 206.426 100.575 205.635 100.622 cv205.635 98.9912 li206.473 99.0547 206.691 98.7129 206.691 97.5645 cv206.691 96.5244 206.488 96.1045 205.992 96.1045 cv205.463 96.1045 205.293 96.5391 205.277 97.7813 cv203.492 97.5791 li203.586 95.624 204.516 94.583 206.162 94.583 cv207.297 94.583 208.895 95.0957 208.895 97.4863 cv208.895 98.6357 208.521 99.2861 207.621 99.7686 cv208.568 100.313 209.033 101.243 209.033 102.594 cv209.033 104.565 207.947 105.823 206.225 105.823 cv204.174 105.823 203.336 104.627 203.367 102.47 cv205.277 102.299 licpf210.4 103.976 mo211.191 103.976 li211.238 102.454 211.439 101.196 211.75 100.017 cv212.076 98.7754 212.574 97.5645 213.271 96.2285 cv211.037 96.2285 li211.037 97.6885 li209.576 97.6885 li209.576 94.708 li215.166 94.708 li215.166 95.9648 li214.607 97.0049 214.219 98.3096 213.908 99.7061 cv213.582 101.15 213.506 102.609 213.49 103.976 cv214.328 103.976 li214.328 105.605 li210.4 105.605 li210.4 103.976 licpf216.502 103.184 mo218.924 103.184 li218.924 105.605 li216.502 105.605 li216.502 103.184 licpf219.979 105.605 mo219.932 100.529 223.238 100.607 223.238 97.4092 cv223.238 96.5547 223.021 96.167 222.555 96.167 cv222.045 96.167 221.811 96.6016 221.811 97.4863 cv221.811 97.7041 221.826 97.998 221.857 98.2314 cv219.963 98.123 li219.947 98.0293 219.947 97.7813 219.947 97.5947 cv219.947 95.7627 221.02 94.583 222.695 94.583 cv224.373 94.583 225.553 95.7158 225.553 97.5332 cv225.553 100.917 221.811 101.461 221.779 104.101 cv223.969 104.101 li223.969 102.438 li225.6 102.438 li225.6 105.605 li219.979 105.605 licpf228.051 102.688 mo228.082 103.806 228.301 104.286 228.781 104.286 cv229.277 104.286 229.494 103.897 229.494 102.004 cv229.494 100.451 229.355 100.079 228.797 100.079 cv228.377 100.079 228.16 100.374 228.113 101.026 cv226.607 100.188 li226.871 94.708 li231.281 94.708 li231.281 96.8809 li229.867 96.8809 li229.838 96.2129 li228.314 96.2129 li228.191 98.9766 li228.656 98.542 229.076 98.3711 229.635 98.3711 cv231.047 98.3711 231.809 99.582 231.809 101.864 cv231.809 104.473 230.814 105.823 228.875 105.823 cv227.213 105.823 226.359 104.876 226.205 102.904 cv228.051 102.688 licpf235.969 97.4551 mo235.969 96.4775 235.828 96.0889 235.379 96.0889 cv234.865 96.0889 234.758 96.5547 234.758 97.998 cv234.758 99.7217 234.93 100.048 235.41 100.048 cv235.627 100.048 235.781 99.9551 235.969 99.7217 cv235.969 97.4551 licp234.773 103.028 mo234.805 103.944 234.961 104.302 235.363 104.302 cv235.844 104.302 235.969 103.914 235.969 102.269 cv235.969 101.243 li235.58 101.522 235.301 101.616 234.852 101.616 cv233.393 101.616 232.553 100.404 232.553 98.293 cv232.553 95.6387 233.764 94.583 235.348 94.583 cv237.49 94.583 238.174 96.2598 238.174 99.6758 cv238.174 101.058 li238.174 104.101 237.459 105.823 235.363 105.823 cv233.857 105.823 232.834 104.798 232.725 103.184 cv234.773 103.028 licpf240.844 102.36 mo240.844 103.929 240.998 104.395 241.635 104.395 cv242.209 104.395 242.41 103.897 242.41 102.36 cv242.41 100.964 242.178 100.421 241.619 100.421 cv241.045 100.421 240.844 100.964 240.844 102.36 cvcp240.828 97.7188 mo240.828 98.7588 241.045 99.1631 241.604 99.1631 cv242.162 99.1631 242.428 98.7588 242.428 97.6729 cv242.428 96.4932 242.225 96.0107 241.604 96.0107 cv241.029 96.0107 240.828 96.4775 240.828 97.7188 cvcp241.635 105.823 mo239.477 105.823 238.717 104.286 238.717 102.656 cv238.717 101.166 239.213 100.343 240.393 99.7842 cv239.369 99.3184 238.871 98.5264 238.871 97.3926 cv238.871 95.7158 239.988 94.583 241.635 94.583 cv243.266 94.583 244.383 95.7158 244.383 97.3926 cv244.383 98.5264 243.887 99.3184 242.846 99.7842 cv244.027 100.343 244.537 101.166 244.537 102.625 cv244.537 103.867 244.088 105.823 241.635 105.823 cvcpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]][/Gradient [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (becky hansen) (becky hansen graphic design)%%Title: (cerasport_logo_color.eps)%%CreationDate: 4/7/08 12:14 PM%AI9_DataStream%Gb"-6l&M@YE@,o6]SH?)!39`B4820"(ng/p.^scI[\.J,0H(#;6V6W.,R#51]004[)%k1.RC,k3%l=aq0FOs.^3oOs,r.7Lpu\'8%:Hs=+met2`hgG:h5J9\"?[^\X]IIFidc,ZIbr>[erQjC"n?ga34Mm>[j)pbEXnM.)82KR!Y=kI04aHqhm>i@GIJiZBc_'(.qr*=R%Vsciuro'bVJ,AC&$i&lL2t+K\rmO)=h0f7bm=0KUc1TuDhql-Jrn[ONcQD"k\JhZ(^gd0-c&_>.s6f?)r:#d956(8TVGIGfJ#g9]%lA*pA:TsD7"96Wd\)75\h7K;]:>^Ko2]pVk5KF*.\,,tThL54*B!DOPfD$tJqj[WWo&C6f5(1cf((ai&oaa9:p\X\LI/3^&bPP'W%s3"3bp700!YJP#k?4ZiIb10ktm/$1"q=fA_G83W[]#YQbbA*_fp1NT>1Z-G`:[+mMD1DQQ];q$W2Nipqo%f'cIfJQR45GH#bNjKI%D/!MY3<)7u[>rrnVJu4qW9L=;rjp]AemIN].Nqs4]gM8fl2A5DQG%S@ro9>@5Q&@KpLisPg<NrQrpl!As3Fm6[PkbDAC-tKq#.hN%^\[a)b?@`uY%`sqmAKF0ID>9iT=t:(N@]DF-,Fe@nB3b_J,er[_Qltps!S9Se#O)MdG">M2uiI:ZgF-mi:$^@mc,rbrE;_gD+sPD%:2uu`S?H.(8/knh]SrhtX0Jl`21898l5;77$Ad9FoHcZj'n,JicPDuIrTEpiJ,f&:UT?DU4YR$8ld,%7g\B7HeZ`sQOk8Xg5Pa2+%]I*[?bI`h&_8>EZhsPq[Gl>+dYS[6.%h$KD^3Talm+]%MCC4i>2[^9`hS/gV7\FISX8hh[^L,gpb88"\Yl<`8hcl<5F3=7#L!Z@O%B?p'^cLP\pp?DOh4Ddm%-EUI8^KQh%X\#SEmdJilSC2"EBf"@*H$W5"25dgEhrMDV\m2&]jW[K,0(R-G,&Qc:jjX,(f&Z)mHhmU=%hO^tagN[Qtp."pYT&f&p^\UF69.QEoI$[kh-dL4*P8VJdBd5EsmkSgaKKUi,P4.t.bXfH@:UX$LZcktSbIlr75\3^]:0UG>^U0/L%a`hH?IkNMDO,VlFfN-C#8\WrC2KKhNNSVTdDjQT-O4_>K8Lp4$I$^F@#Ar&cRI-C>PZBP(m]`gN4Y-,fn+)ghcLtVZgW0OBhkcU^%:VPR9)OB$egABuk_uU`9nV;I'j0MaP<jlmN(Rqsp?:JhmZM.PKgb3HZJ'peu8'I4NajW.`qc)]*hkcUs\'31L`1E7_dRIjCl5O1j%c]5,t]tpqB3)!R#[`QT";[aIe0"@gfmP[+1FaL<oRuEk!_R\@PV%qm*^"`/P\c&jsgW;9g[QV+-Yo`?+TAf6&mInc)Dg5I[al5?u%gc+RHhJ`=UV`,+UV!hUO.dqeI&TK,Yl+IuT/'#j->/0cAN'[Kc:SWdZs&--up.tQeMZ(5<g:p_He7t*De,K#XJ+'$'D[cMi%).)H%ht=C*Z@CTCRiD6Os0R9Z^:Cp7aSooRmdBH1rR:`Ls(Ct/p.i?V^=qKBbC6ViV/e$Xr\iT8Q(.NW>uiXdo(q`KInRAMf9bh#gMkQt%mdG)KOPeVPeb.BOa$lW4%bCJ;ib,ap>fTLkcWQkJ,Hicj,!25G\r/L+lRhZ@H[D0*C@1G3YVlkZf$bG/+lac[-,k^Tc`Zt"hRriZ%p:dMI\6R@U@r)reSXYO(du?J4Xf^\<IB'H<?]R)%MOE44da[,bBCqaCosLAjbe:W1q./2q_S!q%qs*RClaZd#76Y#K*noNMRf-Df%IHqf@orqhUiA.16k!.JTOmeW#?@>b`N@n6NnMU#\XcT[IobuLco,X4Kl=6sHp#Sqlbb26K(YcL.T%CD$]#SCTeo,=r?+t(=\*G[f%HXH5J5AtBD=-$:,(`_N"J'I3>>5h^kK"]\P`QRYFlT&8rme,eW8al51IOfK^CT[!QINr4*#HM.C?`[%,CDhqFMGFV\U5n7PX1g8s%I0G<Nr7%!7CEC[DUOLt_DtMfWc=uaS\)#s7S*T`Q^')$u3U4]_>-Y<o3-EiaoR)c9O)e9D&#9,@q\j6\O6c$lp39jYFM1V7e7K]3%r3i9!`MG`t^J8IlRH*YmBZR=`rnZgdmqa7b^1lBFl+N2uBgDmRADFK?0>CqT9NNCnff3`P1!*V@aBok7V:j!>/dRK[WWV?9G8QgN%q8+mi*#[/@M"UA:.d!j/[>,QFTD,W\Jnm]:[%3421r]?cX'.,mY*K.&XIW#e\0:Y"kFK=KlF6u&g0WLC(gR_i\ILPu@-bT"=KTVm%;ks!!BP0>+k+\mgqMjp6SrTg`7`K&8?9R,f3,?+4]kVnZ[/]I"0!\ii!p^0K^U4\5onIh*=tIfAHeDpdMF#t.i6D5QJ(kmDZ!H+Q%UjcSbI]ZPsn#k7jdTt+5-Zp5BDK:JR-*_dKBg'^^;9tYhY3CBB2-ZHk27r(@c0Mca1@idFpZ&jM*7cOiXJ>^F2:o*Ah=OsolH3iY%k3G2H);0UKp.2@ZI$Ye4e^+**T"'-b/u=\Sp6Kjh.W2#(?`]A;qa@$h/f`XB>q$4QL/jGoFKb&![:;RA3uNm&fm0rQRWl>@\rsjr%Auci&N_&TC4/$R4)0^QRI[8e%8kcarPYr.3hD'o3]>b<=p_;GdpHe:dmAo[>qL&p!f":<k&1V>9ekc;`,q$DFbut'n^Kdtm=nd.-%2o79BbJO18@FoY(8h8LlnQJ`.U4fSfGu(N,Z.1*E`u<dg*hmlVQZoW5<GE^;acYdm-('#Up^%f]T";>cOcdc`lEj@Khs.&sHujM;%SOB<+$RTAM2lp;"Eh;Al97O7JpHg71D9_b'aPJQ)Q$2_(ce,AdWf1BC)nrNKWHu/9]V!&dkYB7Dlr6SqW>Ti_fq#f;rR1;8GA+DI%NZD.O]uM[hY1R'8F+:g[q&4gE<H`IT%u,#nV),T%<V=W<`E7?<7=LSK?WX\%T6a/dg1okcnBQ]Tn\<jdZKAY5UV59.kIdXfS-"^@%."h4<Ik+6Y)jTT(m>JZ[3A%W03ioN*,J,CO](UC-\a6Wh+TECQnFZFYh)K;94./%r4rN`\pPr,\H1Pu;$F\-dCA'9TH@2aMbe(nY%(qi"FJ?>9faN((:hm/S<<=GLb^>9D7N%,GV5T^]TlkV@XQF$C/:)CmWIQ;?CEoUZE(_(c_`!%@fNR=X+hn?PD5oO4A%A.mr6^(NS%G<]r<X7V4/\AlfFHoTt0FA:)P@t_!-0`lGZXA@7eFh]QW]?JE8U*\LJ>a/h>DU!Ob0'>C(E!:Ic3mi6`j>J\uDEYU\$<=<U$Uq;3%jo4K:V![aF^3sbWgQd6E>s"[`q2KZ\]iTTFo=]*cn.a@XY*+,BC+?,$Dn0[V@^nlkA=onoT%`XLE"hoW(PU%4)X["#fr)P[hO^j_%GL%#uR+&B_%%m^FX'OfSYYur%Cr`;5%8,Zm/R6$V[dpT1#H)rdB1:Cumc66Dq&AY8Zde<<(.*l@Sa6odVO]T@XYOh,hq*/[Ic8P'%a4Fgnq`PbSU+k&r]L0)N)SH]0[(l"aqcqn=r%AaZmLl@8h.Y$-I?.1uIE>n"'JnANm(@j6P-6;-<;I7hERIPD/9&U"]o@r?pXo65%Klu!)a5%8"OWM=*.6#&mO=,/L(k_33\IuMSN..m-1,)m[TCQ>=Dfb)1IQVfqrT_Z\Ch^oBnE_"B\,5&XXNFR43M:3#_OXbEnU$NK%4*>fnhAhK03-bM!a`>*)HfVrCMdV\*W35MIs%Xmq!Ya06ep%>LD!-@Z2S[BtQSI9#bFVWj"FUAPj?>m74ni3"D<:"$V'\add68:M%_u#>I<&NA++LN`G[eEtO%s\b^WU#!/Bol80(ouu/rjKKfrKc;g5Ei7\^Z4,4-$REk9\E4X$gsI4H=s.\='>-8USgfM^[-u`+jQ+n%\e'Wu]DJR*V"PDnN#cgpRDdu7dbh:"2Jb-p:O_27$g;\of".1MItPr'aNh'3(hMRtQ=i:-A,ghLh[ebq_21UUMOP);4dOL)-[.oI%qpGGe?,GK0`3uspC1QtJlSlEKh)G\PEQQ6LGE:SHNH@Ib%WFi9`if2ETsLr>\")+Dd]SM2Cf/i!oL1e(?khngR]@b_nbe5l[opu#%DsR1DB+Nu?WJI*=Bk&&(q]00Ks,CgFrD`(OB`I`.bO/SqTLa]b)b&r%Pr_%]J%k%"I9EbC)oKD'qgsqcnugE-;.-(#U);efcVmJS%d,$(HA=mEn"8lGC!]g),7\^fjnFr/*EWTddEL%hh!'=s50PsL!F;MoH\SheB2r@nYL]^DoDb^_F^"Vcr2j2s+(f.`RC%o.7a!Ep3%6c-O?W_nbUFtcg/HYUgWFF/JV%0P2=8_sIHC(q\@Bg`,or(N0l(a/k1Lo0hTH"Ydeo!Hej^?[3On<jKo!C2.q[i=Fs\Gr:UOak%^%I`R#&_Mp=L:1s%pc."O]q_($"H:#2JDYEngDJT9;kF86^l&RLaI,rSrPB+7"i_PuOoZbk2d2kBa7VV<Ql#,c\Fl`,c9Xa[Qn"#g@%&iZb3OhO;Y9IQOtdrS0Qq^b,'ER:*940MoWh!a=Ln+46WM:!<rC$A>U1QH6<FQ_gAil=-QSB?C4ihRr+)dP2;?2JsqgW;JLV_T3d%>P@KRN-6am0Xq0B?hq`B/$L1:pR>8IoO#4+PT\\>X?d$pq"[*-5\Z=A$X<3s4*8d>k/KAC]PBXG!;*G"+E5-kl'l0ICp`p1)G*3O%L(-N6Jk5?H^"9[J5J[?e_>#oOg\SD5*hVDAh)U@NaY8k?g%H+i_YIMN3h/u=CHcGfT9$^W(a('\DfG\fhcO"kQ)kRo1&Pl*.<]TG%Ym)\hNaSL9<8<Z5jLeOX7df>!></9pUT#U^aHt,=mkgGoIp5]leofi5SGkfEipKNBFj8I@LH'5t3eefeT]u9D@KQ3;S+"A>k(OJZ%`\kI[]%k!-lNLrF4n!f\p!Ol1-i84ni(b#&Z0\=[GuK7Jqet_A^U)`Hc/IjOh;AKf%Hnu)D`MsKF/2kWKA`Lem<pVr2>Tk3:@VX[%Rij'^Y(L4W"\qT1<I`0U%-:qo>JJ3S=bSbOV4F2rUM1G[+W.V6I.F(l='")T`k2&lCAZ(nDY.:]MOT%^p!1u,(!e]5QHuocJ(G<1%g\l3;pNNh"#"g2Uj&di/?Z'77=F2tZ)_R^p2A^ckT21Uckkk8aI6-hpQ2?'ZVmTX%`b?g6J,5f.(b",.%`&gT6''#b>ao:C1-qqr%!h\a=i2kM!JGfcI\X][8k`OKG[sQ/[Xp[s2/JX;<>G&BB$1./k>u+hNMP4S]2?^oD^pU#c"n;Fb?0'g#,V;IY<c(UfHdjF&1'm7:%R+@]f2Xio_/bB7e?"%M!Y!"NiULCarpXDRQX:1#@5&`H6)P$h!EK'3\g-4WZg[Ar)J'3'5?*M?*C[J9!;af?&%QZAi^0oGcHdAK[%.8\XFX&0-$hin-Wmj@[#^=HqT#J?YkNHmasljl:T51PEU].tGFmXZsca/0=A+8`6b"5K?`!j4HS8i@KGp)%SrGJDf!jpN7oO\E)s%ZDqUCeKtFTVqiJ19/<".m1N96H1)ZT]`+Aj]NJH4=.W[sjP&C!0->[=mCTIOr^<I6?b\Ch"oCku&_"21'*=AAQg=$56)k1ER]b<*%#d,<Wg0<KN;:o?-^XbDP:UX3sjKiIG^"/>#':d89F7-f8I5Xb\k9objqo[`H1CQKHD3NB/G/*P'XN9_/g._s'7bY@<4!6(\Y'i*^%koKJCjX9+.6jhXO0%HEOjEi7MD`_H'-\j)eCqH(qW@;im@B8K4LCG9P/`j-p&_7TGp;+5"^<4pF%I/0(:hjlrct3C*.M3$kLJ/Jr%L),S@e8-^rrpYnnme&E(%c$3[B`QI%[C>uHcD`sFD=%/mYc#%[>]$gbD@/f\XLMl]]E_H\k=oPIkOgNeqS)]@<I#VoNfbjZ4P.`I%2%%C;[lo9p4HVC=cNG&eSJ(45\2+Q#3K*j+dN.TJl?+Q\:$Z0]BUcD5\_Q$F$Y_B^[&oj<fV"+)DUHN!WHf2J429D&hQ;-SB@MMp%mjgRr)eca#NH;n+Vp7Y1A<^jo-$fY&ilO(Or7p[:begd>P9)VeCTc7e+;ScQlm:p[[:nIRH"68He4-S/%n;J6nYRHcr3RNKD+E?k%c_(9J"g6\LBUU,AiF41tUm^6>697/b4ir,=h69n+r/A!#KlH@sE/1"k]P#P0R/cR&mDWK2)81[hrA#"N9@2,@b-'.\9i'KV4jEjl%4F?RPgNYH!rmYEZj&6I7RGBfG+2=#d!;l0Sl%?opr4ntVT7-_2rMSQ-BE#Mlnr%^!If,sp5j7+?rOYk+p%sd_PORl+oTSh"T7-b"%qWP+IJ,8\rJ+N2ST3hKHolm&-n_MaAhL,.:e]mjW5(<7D:Ta](5HjF1"atXq:[\_cqT\n%ro?lKpWLkqEq9+.^]2@SqX3a;oe6CC%[pT(.rl_o<hpF+68smT\X..F"rpY]D?[hkD]oVXP7m9Us'e8VND7nnAqS:.ds(Eq]r(UkooM*r0^\jRJbA."K2lmPi/ba^>oDSFP%J,f>h+91j0m7T*WiH'L4IJ,npZMX+JI"&Psf0B*&?\+OCo&1ZTIK0;%%iZGuaNr^jrpp'Up[<S$00ai0pYjHmG5L]OT0@`aQ;+&s%+91T]pRhG0%+6;;5(7_KJ%b[Ua$8+^Ct%k0J,F2T&3\?d)*`QEUBDB>rSe?+rqK6DqrJ@_g@?'[$8hb]c,Vc8Y8$D1$Mdj"]BIpX%P%698[/P4\`fp%CqsCG+Fn>,GN.:g%c$/Um:&X>,?iB9Ma#>*sI<Y@2J?Im-?G-KS$<O9lmp>t1X75D(IjLco+b^n.W1end7[W.\%0asCf)t(RkPXpKBF"D;;[^!jbB=s6`nIfd#?+aP8A5"H6<0Bk1YL[8Ldri5nQR"&rq]'Y#.HarVbq8ZPQ7R?QDt543k.?"J6A["R%>Y:ulQ!QqJja(4eQZ?<ub5JB@<kK`rPZhk']aCrj]pRJG]rcMO^4d>,C:TU1>ALp32VWAdBpX"tm[!J`H<ce\m\SOlH@OI8TD_sK%HW47]+(<+,UZ>9A*GtF'`a!`Ic+&_eEB!;uQuSuL6BkVcRpD7ro6T9;bIggkRHnf4YL@X.0%]d-?$DEf,`LaZEd`:_GC@7$YBZ7K%Z7,Tfg.f="2cHgjQ^ca!],U@q:7$>W(\-eSY:f*,IM#)k>B++Z1/tn\\,!Jff%[Y$j)I/!YA\>s0+rVOH[ck"ia'.=GNH!@qENQ6%hXfX\nTF`mlZ.C/*+.<Y^8?=ldN@Ms=$OFQnPpZZQ/aC`Y?1$o3kjUKYHYde$/@]CGC+^C?JSnIYFFS<qY6M?^;f]n++5`RGpVA?%WubX0d8rNGd\F!jHj0CnANq7'_E!Cls";@D_NM=-iDmPek-m:Ajku^2\ac]&D^!2W^NfFrDuX(LY/Zl15'6D6.gEV#7qXc1-8p*m%Utsh]3mAjKqH"<0r">^Gs%]NlSP]8HU&&t"ofnj@]dRX\-d"#.lIZ4IN:iYn5?[$Y?N:&oIt%(N.jbj1J,[Xfj$0_Srp'Xao2W?t%gT,i!0B)1XC&.@%htGpmlS`Cel93,<A^7=e$ee'u]hWY*d"fZg0OM:X$l")2nJ/;&nSu89mpCe!b6V5d5DD4"qZASi>tY(\^WH@b%H<h?#>Wp$r3b98a!fg/>J?b(a!Tr"=oP$RqblUum;250BMH?-G##:(CTnDWk2nUQj?EWW`F(RPK-u6ZZl#g@oc+kotJ[Xl/J0bAB%n7_T`=2.rFo,j<dFo20?,]\/$q-U:R\j1`[?Iq2`CHoB+O2(J\=iC9R]",A#qtA&@5QC@EPAL0Xl@3(Ks0qZ.a0>CZ$ZU#q3FLGS%30uT):AkO(af36:$A0?,'5,5,(3m7nE#AgrpE\bP9*3.;&=ZhdqtY@l4DUD;NWN<?/'87[rsPu(>t:@YOo(UD#CuQ19,b5uolZ9.%,L3Vs!7q[@A]VDWbcW!s:?rZagU`]+^qa9KN8QA#o.:A[?X/E,SaV-A>Zr4OAT9?C39&dj42ZAlY26m="q7j7-MR'4n>2]E-1Xa\%`&@u-!8sC-:G&`V%?2<h)TQ1d(:T5lgjQI.s"bG"7M:<lG]=mI,@6Gf3T\3\@`@Ni_0gO7YJeLtqE/U8;srrcrr50o[Ig0Y-BIh(%.Xj'\bL+*[b^s\hamc8_;W,>g_DGY<BjgD`,-IUY=>Fu')/qtg)s_(;fUDKb2+.[-;UiG7)PW46`fe`/iChi_R3/W%&$+b^_DQ`p%qDnjaf!gFE0X2/SFjAVS\?;?b)Lsh,Cs]CRUYn<\#+I\E<HIf-h$[g;XL=mBX*N=ted]V\W;s<H?H.td(;[hm2SYC6lZESIJ7Gug%740Yp3'fOUUf*%OQ0QC;*q,/`9tY9_>4%urQ4"4)d`BsH]'+ShU>*-5l8M5KDQQnZR1&KeM>hN$3b35%"NHV'^l(bKX8sM.UTX!9%/O;s`YqT0smPik,^CEmr!lZQWLPCc%4ZR1cm:e%0BQGFM_u_RmY+jed)qsF#q\X:Ch@/>R3/7N-$g_97X;`Cg^qj]M!3s0l>.YWJ%K>?/8\WGH0!mt4r9/O"[e!6"c""s.Y_ci\Yf$RC*V[HP1JJD?I<lkYbQfJBd2+sB>0<Y%VF>%..e$IUKXb/mQ1A-Ir?%OOR;K=.(%pu&kA]/ha6]rl3\>?jd@+-/s#2u5!GpYA,lRG^3\2H:jM`1f?&/&9SgGJI]g23Zc0Vjl@*:@7>c2>@Olo=9Zd5i50>A:90qjj5]n%-&YhNHJ,5H0VTM3XELK\:=bSNFooss!IJk7obCkKak+!\!*^\BQ;Vo3,lFt",GXYu%V"%2\M.sL]#$6C5R[fiL39W*m$e#[Y@nm+%Mu]BU@'X6i7gFqXe2Z*hUalPe)CJl-)M"f!%P%QK$sZR^JUR"rLCKbKL=V@Z(*+rDLhfg"8$G`P7[n%Hm%?H&$9E52Z&oGPknir+%Ctiab&n"D.0><"@&%Q(\qWrnDcmMCU)td"A^4],4[^HBWf6Kdi3G*H]e)3nGJK?n?K,oL6lsUlh/6?qdGAAPB<c5`gRtt>8H#D6j%mfW?M&QE,=PX<.E]OlYFL0mH&i+P(T[u7oIJVO-=j05Zsn":>&0[hV0bmJo1Y-"Ep0gjqDRPqp/2]+5%'P%I$(!@qLggb9M_87m$%.]PVb@p!PF_=U[7UUbma#@lSM4ki+Hi8-GF-,MLG?0@>eX0NE@'TYJ!a16O%Z_qp;$Xb8N^SGNJVV)LJfK6mF5D%:V(`+PbJOXkr%!\:I_^4\I.^=Xf?fgRN9$0,KO;?hWtl::n-rbR\ZY3[:E*kpDneu`ReH_&RfY]S=F=FC<t]f4q^UVr,"IJV.,]#fG][PLG1cZ*.'%,-V=#[l"9gF.VLHb8.EB69HkNlZII,DBc+k96;utK]k))1^!Ni;I[JZCn])62d7i)(.HlbYJ/T[`BM'-p(taEif(T4H`lWX/NF\X%#am:;B_s@eAT5"qFN7[`i-!m#?FC[V$=b(sI!#QFm+%$+q@!K*,dohOXP^\e.MfaSY@#-5eScHf8<@\QAWDtu1['`L@]'^0oksYt%if^Y710`5,.\67>BPqVdNb14L?JAQeJ-uZWj3[B1'uBjOafLN!D-9@h(su*:WZ0>7U=?Jo-)83.6&dLfXPXd&PdY_jI,/I%>2*S3%Cg2Mu"mX2I3/+g9N1lc;&7K&ef5p7aVuSFs_LQE;lo(_i;\u]_H[.B/6M-hj=aqW(YK,a$)[&XpEleMHqXsE^&tcga#niI4Q&"^C%>slNtEk)i1T3lVT1-NGd_kM-]Xno0IKV[o0\$R"+JN)[qZ$K')NliTG7W>V5CHRJO.BME+JF-p0=\mZeIC@3@gU#;<Ro5*ndM<LZ%Xg8CJ!EGhlK?n=T=ck'X4/)cbPk*B27`gB^94!Vn]gac%.8X5!:_T0q*]N^u+/dWT"?.-@kIMVPnC*t=!4[VJPf$[(ZBZ^aL$**;%[%P2C%SM!$6qRLCb,]b(6EOR`l(F<V.1raUCRT^_"_^of"V,-Pobo!LXjP/H`u;hXlG$A9TStds!5+CsNYS_+S@W.JijX1tVHKS4%:pt/scNBUEaJ8kg_hcYX/JKWA(gBMR3SJEnV0E6oZu\"Y;+se,_Cd_H@j&(SOZ/ohI:*:920-WW6Zul'RAq5?UqS^[^^&H,i[t!j%',2^g(RK9eUaAGG++%=]QjL1D(e/O5EL$#Yb&3K;GeL5iFC0WJR0gVh.;e0%co-IF$/(PN#0_cpk1X&ga+jt0"se%+>CK.=>8J)<%9Cr]tMZAsaOUe*;Cu7!QEe^aMcEi-Y\MO=G_#c5$Nk2]_%2]oX2,G[^eDJ":C>5raqNVZ*38,23p#6mk@ftIYhjXLd"<04%l_I@*%R#7rT6mm20p5aes'E(:,>HmRU-WGX\Kd+3.rtqDn=T,+!0nK]TC:+dVj0u%<j;KR;/S'AI3!3sN650\6_--YX<MdtNBNpSqbE'O&%[bJYe]/eK["BY:_#A^@TSUkS04"-?qQWpkpl-##p[R=MZ&[)O^`4:\@ntI)3N<62LlA2%`b5N;rF!+Zh7c@>A2Bb&0C;%+AXLXL2%/tCS;-,QkeWK%XO@ILf1kLLEX(U%.EWVkm3V63[!-]/`+4%!-ql>e@(,*@930W^;"7PrX9J-UCrXQb2oCaj:"gQK(_:0&1eXH\m5%A#,L*eLG,7?<J^<+4DE*n=p<&rQ?b:YKXe1p[Pjck3[Z+eQ]Zps$,5N]C?u;m8qhK(R'O/#(Sm"L'H2EG1a8#M\(@NL2J9e=(Cr+%$PQ3BSBT:L!T8)HJn5Bf]e?$n^5S+i7_KQkp'BU-LiteSQ2R/[8qFfP\Z9R)Mo#NJdK,YZUmAXq[:C\Q[_i7oK+aN@QJ$'A7dJOS%[E'7`LU6glc-QRh%GA`4N?@/;N]@F`pM&caNr.;:k]:&n>'o4eHHuN$3ANWt4AbQsBBJQFF5SG^<<644!!Ce]Qi-.%oDlHb1N6_b%n)[Dh)-A5^isHcL7gDt`UK=BA(7CfQZt/'Y(Gi:p?`!.G>_Q&"5.4YgS-s>1p>*QJ@K8$CD-Pq)KJJ?-:N/uacLSg*fj`H67T3_0%++a_2>GS`bq0=5oSJmeaKFS6>4,e2+RUooIa>It(Rk;qf[[aV:A("&Z^pQ7uE7.=J&X!0]bV0&C',=6G?j@t]58Q#LA2-Jn,t8)4%V':VmU;mMsl_D5"dfBJJ$*jR\\#nP6T_2^;&WS&,9P-1e;7][mc(())^5]%u`Jk9>ZVBLV($Hlu:',`9NXI*.o8CJ)ZE4kK*NA)+%6hjPe:Ca1aLOa$UI]8k0J;JtB!-Yu>*'9%g<_()?/(_B6o9eAfD(n8g:iQ>SBSp4B:n*h)>n@M^U#UeB9!gl;U-[B4Bo>`aGqd=j%1n-e86,/66`;F968@$G99Ye@;q3sK[-GB>66htcWUXos&\s'm]%YTYmj\iNS.H#"MU!0k-+ED\DA9Zk3!;!,olYQ.bio&7\SR-%H%4V0a2V@O?]P/TG9[WX-ic=Se"eMKQb`,_]lC)`mg@o2B#@@>@_gr'Jh!Rsc_\F3UrGG&P%CFdHk!T4!f-(&RdDY-2-1k0;a8sQ!:%n(I.HZOo;LqAgogRh1_W2YfL$6<ja@iGImV%\[iaT55&3Xc&6B/*'Yq9EcE"1\%6.;Q(S0Ja-(aP,cdkgfPAR)OcNGn?u9r[B6<P%2?KW&0[i^>^!I"7ala*pKj:9#(Su^V0JcXn?Sd5uba5@HqrJ3dW$e%)g'RL>5]Q(%2u-7#Y(nO)0G'n"9][6kGkQkJY$CIKK6',i%"Idp%#r%r9ml)Te)eX87+!=ioib&qBKM1o0rg9oTc)iET78olH]`LoY>JS3PSZ8Fm4"t`bJrOO^@.!>a#EK,*SQM4L(uS%e+(JN[%mSDm*<O.E+#*J8)g:tiG[Xdjl$m6Mo>U"/CT^'KKk[9@,[K6"kY"HFOG=((]$9J\lUt3.u!*GLQ2QfG[e80r[].fOTV"-8A<4e4n%];Y'Lm%>*gW)A=l$uBpUa`O+0JthUj.-\fKlbo7O^IV6h]<I1!UB:kp!mL#("NRciQ*u>p-ti)>o):c(`jI@HOglL-aNu"7/eKXn%.d.on4P:W"/F=Vo-jo;Wqn;>4L'Bh:R#+'!^+]f-+W49qM&KXd_$h:/]%o2WqhM.JQ8E<H5>pYNRQKkV;]n'<(Q$Jianp[M"KK/f%Y(RkG3c@B9:VlXBm<cCP%dL&1n:s5NbP6W(%DUQWrDK,&dt3EAYET.s58KPi^%aXORVH*9*e-&bPLeY)>i85S:jqjMT7tHYPk(*8%+qM1#8I)Mfp1'!#D?3n6"`2VZnKh@kEJ4EV[9?$bf1\4?X+5JR8P@--C)*,`46YgR,'KbZ8_:7&*=JgG0a#8r1r[_[M[;^qEa=8c%)*!4a#?T+Neb&;c/[8X:)@H<#&jU,*JIY[LRRr,n9F.rX8Zso628Ej%7NctN0S7a.?nuFMJX;W%(U)#eqAN+-e%mjrD7M$TKQt^.%H!R<C^=p0F?s//P<r]QQie88>jAi1pYQCFg!HP!5SZq:4)*SH9eb&u%,9mTKJsd/RBVqYKW#Z!\NLNV'YT<d^L5-.1Q9s<&Nd9$C%@BJGrgoa)[RkO-bEOC!-&DXGh_5.JMEt.cef>ikb>Mpp\eH^U>s(tjm7W]2.R7+2CP[EE6VRs#n!W1<\)-X;dcAVa[o8Qh*=LUcW%(^JGgVD'"'""s?Sf1%nZ#,oeOXkKlD7H!#<&.Y^l/]0+SC3&WB^.oB`1mB8IG3_#hV,knOR;+QgblWo&E+IQ0SHuU7<dJm.b%lG>%UK9g=!VN,?]:tG\"\`cB!+f%L.#B-TJstV%2$-.LZ>7$>58;4%Gt@nK_U<USPF0-n='i\i"'h@e(6:mE$Ht'UD^C$Ok_D7,!-<0B%NM&Eq8G0VpfKkP).`(Zu^t<<%F8fTObu"R$J%VY0Gq#.>?tg9UQ(r8:rEA*]oWhf"dK2np]83/G,TfVoh1&oDKa>tDTLFdGU_;56%_]jq^?YT/WTs1At6H%Fl'<VsJ6_]4g!Mj:'D>SrEOk:bW!sqIgYb\9HSb9"A[/ij%ed)o5j11d@eDm#3]N.UZZb*e+I3<d_OLO^1%@Eh]QYYXQT!8-PfhLs?%-8-]l'#TY/'4@?$(hQMhcUYe*?=JS$PV*CdZO4.!6GS\O'\M*igeFEJ'I;XHVUc"W50C`t*neB.IsO&6%[^C'9'6%#BHhHA$2?R'dF3RsdaT,6-eu2kP?4X4:NNiK+'b4EV@\K]u[*<JC)Uk+n8_jRK!9@-3_@36)L`MSjBm,(.KPjnN99Jf6%P:>k/;/tE/&tE1k1hp(=*KW=!p(l@9"\.3!X(cT]A530nF:ft0=)U`AWNP*9"2fq1TZ!s9L'Bc@>;=f)/cWW;G+Y^2_g"TNk![+]%)5s0O9>'\q2%jO0Qs5NWFGA<c\HOs._r3S"5d527/B<Iu81=.SiiPag^t?,j3Z.arOE^sHecVegM9k*k0hgaY^fVQ0c9HU019YGd%87:s(OGY^%?9f+SV&2AZ`19gBJXCdj'5(P/2Z0R/'D7uj7B4/"<en0J8.h3ok@*ThA9QV^o(fC&$H7ZE!B.^C-o2,r8?J:8_-@'2%<JnCr,I8o0']04m"`t`.]CI'ba?Rqr@*:uYc\7*i,.^?mr><?jq[T41X^\/rOoECAX%[E4E__(7%+9Saq($*DVba#W#$MWN=%h,(%fU4dW+\f;[o")Qd(T+eq4jHJ17[EI"CG$'5F%LW0K]A[GYjM,4rV7h]%Tf=m-[p=5i-c`X-0T>+g(f!*E$2Mc!_ajGFc5;O+M:2L%d)J39i5l7X<;_Ln[23h^R8B\:+nZoWY!'Q\X$Es'?lY/b$<01J?<QGiSg5+2E_\i!$eW[d+9GmTjfNX2QP"&q\&?NfjD9t>-<DFp%i&!]\7C]7U:N+*g<?V>\,S"_!^8ar`I+$R:%a.m)[L0&h$*:!p'4K[WCDJj[Ou_Km0sfTU5rH0pk@2g\#->&,$CE.dETo7(/6BUD%LY4o].OZ06de+J3LgW+-:E!!7b$kAo8BO3@p')M)l`J/WWp/LA.q3Rocm-[GaDA]<%D"6Z>C55HOiE)\Qq..idt1)ef.P6S.Mum3%)1aatH<'(n^4JHC/YS>E!IlcJM6l[]?VD/b:7mg;i.Msk,92Sdd2r]%&SB5ll0/IE7Nb!)$Kg\"_h-YjbRd`Se'p09Wam`Z$bdf1%q*(&2,"h@dmSm61!6c!*KAFl"6CdGtD?/.G!;E&mGX-:K9ZO(SV$?\^(SFoo'>+K.K+OsqM2=l]kQGT,#L4n3$GNmQpAdJeU92S`%jCRpV&E+Rc[EW[td.Ig!7aMB.Vse*g1>S_t$9*2Q"tnsdC:GS,o\V]]_@@>J!QZ+ID$pq9?Oi85,cmY[W=l7]"a("`W`bPh<%2CV%Am$*'LfrDrQMI1".LVo-6/^aidaa7t>%i/n]#E$hUQuG>-r.^[/cg^rV0]k\mnTq5&+2/-4R6'%NaKI,qHaJlCq7IIUY*Qd;Ylgi%&pH-AMf!#:fE];d)&9_r1hh\r+VOPU'fZjXc?/As4p#]>EX@BE3-Dd3Q]:4>\5$01W&fsikQ50uS+&Q/QS0mXHuUrP/A&Id/)geI%&fq%UVR99j"o9kD4-=3VO;X;RUgG%oVsCdDZ!nd\L3+Zu^f2N,KuLh88qHKX$kgVJ^ddpeMUn,\?O-QW<'"?Aa+7'G%g6N+,#Dto%MI!"bm.C=3Kht%*>e,AZI4()n>+q!9k!Ll$aVWgKG6D4jZ?"r\`>ueV-"%]s"k!hAJP*n`Wa/kH(arD*nS#Zq1BErc/ATcM[WO6`%$S*[;^6J/=hDcS_p224e)c>P4pr%%t^d\tX/El9t"!2=n(LZ>U-?S.k7r\!lPrO=plM85h;,7sdSc'>B]]#Ze()T<3ZuU$sUK=)^%bI(H=9C8tV2)ir0nLi9P9+6`a@h/S"g'klof2`^:qA+]0XI.?2jU;gql[jnEROZiOB:u/COT:iE8V!=SZAWQ)"('XK,^:/=-8;d^%4RVj`!-liu(#0G\,rnab!"AH__#PBW-kOF(JAs8EG[Uj!#\l89j+it.pYb))CBZ8Q*(Pecc;`^R`#hZQZ!D41h,8J+#s0r>Cp\"!%2NDUV,lkj-XdG70E<jfZJB\`\m1Fk<g@GQ$Yscul`56[.N39At5B05Dd8W1!d]SQq:XjUqd(QE)$VY[4A-C]$k&K:rA5M-F>:o*R%I3PsrZun=WAkE(;!]ko^[&qNfcoUC6MSC^Xqs2o@p<]E'ba\\B0HH_kA5q`C-$$l880sr1I+sAfi<q^qbuO%c+ocV('Muoa3&fU=%jC'LnP)4Q/\->DJd)S@rP\`9_M?._l"k^_QhjAu/?6l#o6)2+T9La^u)$*ej]<A'@8L30)fk_;W>VODiojnY/M9DY!V_WZ_"rX1t%HP]pcntR/5gK\b$G1]+)!i@bY+MBS_dZ.YWUp"@S$&hSf#dQLR!i(Da:VLU9L#@o_:f))V5dmdk103liM\f+;dnug8'8L+5=)/Vi%IfD+"HfG7=!1Qrf)?:cp.k!.+[I<jj:VC`L81QJ'j(3npL-^]q6'SfW63BajP8WRpZLmJ,1plRked5%>0bednloh/%4^)[["">3p%]E/O!3j@;qS/]\H/AMIq&5C?dIN,q0U\XPdh^+234Sb"M[mu9@G7aNadbDS<DQe,,=eur"S8bKUL@tFeb*hPl+dA2"6;H$@l1*ir%6JFuic)JlM#(]1Tir0P7pnc0WY<*SU5g,DS,l0dqU`N/,h&ZiVd;U!G@6j<R.d*_1(VAMpSrLkDo]#o/i,XE0Dn<t(.ZFk(gN2<5%I`\7=bF?OQMZ*1"K;n]uY[p'p:K6K[p<'@2S"rc*H/<WFcV>PkJ0V+L42tV7dXH0)aCJ/-X=A2_-d8Y_gs4joB:U:[;.g-<X9pXl%nu[Y;09"go2!Wd)2Y%!?SM7TETn'oo]JS__Nur5`[m2[eG_P>LVf5Ns?EP@P'Cb)]7(&8U+/+-jB(p)J'bMJEk!AdSD+c<a^%a@C%UAOW3m*bb"1AHE.6n^AdE@ES#R/.#or,a8A@&C'gV1.gCO49YuCERJ)+Yl?X3;f2r>7b.b2-:(8#S#EYk4A$%.;_eeXC8rBDjF.R%]-5&HnpCEB!^/S$N^)YK.HCSWRg#T,3(OL/#[Edp`-_B=D)YTiI_[94RQVqnq5Ld(9@OSgL++aC6ofqG'F4sqO#u?qpdl0m7j*Q5%)69<gjA>K"eIEGkFsK=LKn]VVd@UpXRk3p7q)N,gUB(ZO6?Uo+j>V,(78N"Jl'1]K*SGLWCc>MGC5QX+DU1Ob]s8TBMpp]]SWZ*R%,FLl0j-cFdV0k#916ngW)_[SqmMB]2-:CF!ET-HT$W4NK![Z`3=Uga]Kk=q2RliW<)XN!</S=e=U@/RsWSoJIRUpV\fAIUfe<0*j%pPI:0(Tb#OAuj<AOUkgR@t;fK:t+W%VL,#'K;a)M\)\#_AHscsn7C(!Jk*f\Y,m4W5=_Q.j4G"Z+c^,X%]qG]`9k&Z8`%[F;h-ZN%g8:FrL3C,=eO,J%?a4KPr;qutM;(%jRe`4&-C)CpNPX*Oo[$jShMBp0+mYr9q%atrCn(VV#Nf,dK.B"H*pNNG"SA[,k1K$AVY_tD%PH3+#Dp9UeBM+6)C8HY?Y0P;uoGgO4?E\us8V9i^hl_8p[04f=[iG[E%2\ktffX4%MlQaYJ`,cJrC/YI-3=aaBBPbD)FjhV)b7`T%+E7aU&-Z8*$3AEj$*6hVU@*Hd60'bT'&jm3EOk;t"GkOCAV+CfJI_a)\7lX5R=IOkP-Q=oe;I9V\EdHU`s)MGkmLd#T9%pi929Z,%R$NJb%V*IQr[,E!R$/"/Ifrk9P@-Be4XZgf\3L@>B@'$>#6E7%]pc3X*DkQtR4q*;#/*DNo"Hf34gtF#N+uOT%h<24_J&[qNImi&%B*JRJ35Nr</De5'pE*H5B.(U7JB[>F=/e^[$tda_$.cqcJ&RiR>Wie/Ck&\K>*H8RD)9QuhAK."MBVk2C17X+CHM^(enpVG:JsBZ%O^-+?THbhL)q-qZ3&6MpL!)7fkJ6^"@c8fLT'3=)`iMd?7:=(91AGV_jrD5&?pp_bbaHj:HW[Y+MVg=53-e\+oor!@^$!uEm.?ti%IE*6q1,#YJi6!`p??&D8/dJ;]*b#Ar:[p-R1TVbT_na!*C"IrZnnc-P_E-Eq)#PiUVHkO8_s9^s*nniZ,rF@_>8hh02*349ee4EI%dlW)!7>>R`?<68B45:9(,<j`gR'[#E%gALt0.T;t1h\'Rh_T7$V]-BlYpC#t:dIZ]5pDV,VLr.H1eV6)f=l6&dCjOS\_Q605T_Pg%GNO/F^2DL[#?l'u?d1i?g,t/fP00heZ"!(`A*j7$`-&U/)$OS>UT.5`6%RgI7?TBg!q&bT9M<FubBiO(&^6T<5B\WB[]VR?98(,a%#_u5p.j"gD+9FqHb8ad$*0u$5Ju+GB4!GGCfLe"6XCAftkpXu890J$059E#e0@?[BHL?AVc^Nd>n[.)C>aC=G:%t$=TbdJp7J`5O%;N8_70u4ODmeEJ,hDFl*+oe(p&N[69p9YJOLn37O.(*oE"Bgl=7^g[W]6?Z&Zq[5Y7a<h$QR1jG'aT$AC!f03+<fpe4A=L=U;Q(W%?1JUcRX8`mA+5Df2$6cHJcdl1G.at7^Gm$brjfoTYQeo*l*s5JUe)qV5t+16#_%*l/a8\ICbc[u%[%PWUZnNV*;>=6WRYt6(1"q5%=(N1d;E)"?F^U8SaY/mhi/rnImL(';]m,].CD.,7T)b98BUIK#er%boe#jU40I,E+TaTI'JqtG>*Z:6Sqq"Vb]jqB5>]!\4UN&M_%Kakk[g&Wm>047"A6VcnKPT``@0[9"3J9C@7n[a0@SHa%EVujrMjO%Q%=;sC,ARXBm1l4:T%9[fP9ZSc%psLaO-1-!e_\U]^^a3au%K=2moNkUH$d*""tq]I8u-/V[^4D],^OdEV($qAU84E')O&<'RniA!J%EQXloD&PV=TR!<[!K`'$;7KqIo6p[aYu47mLCDcIWmlkr%N(ss<.!J!WZ];#r,eh>_F-0QIm43:m7^h79J]lKg1O[[\X<5t"bi>d7Bph%]#](^T$HtQ//p$Um=a:"73ZFb`R4^^.>K:s0YD%br%:m=]+6-OtDdJ;/XRV,;`hKV&h!Zf?i0NpkT#5b5-iV#9lg\[k[Q;o.\1T4"#V_$IKmE10BY)\8NpNT+2`TYTrWk1]7&MM\-i(:te%i@<[OEQJ98[R4gW'^pS=^'MJM'G"!rf0$9,aJ7LB%W0]*d:d^6;$!6:2ADR2<$Sc;,?f4ChqDSEMMT9(R_j6fW\C&cGJU#AXjhks%1t>Q5n#RWh5cZk,0mheL*/CG?)^`J,""$_T59oG]e=#1$p;[#FBarpCACY6rNIc(q!n_?YqON$jd=M?l9C0':pVXtdQ&2*LUm4?u%5-9i4@Pf!(2EUf9EQd^!g>p@L/6;AZZ`XpR,fH(ZfODtg?J<7=BAFN0$mUVI.jjkPSH^]mctIAlR?)8A9s7')=YkR'Gg1S9(^H-[%O`V.Dd`n6m92iJ-b+N`(eg'7,$-tIDT8,Nc+QtWQ%6MpaaOZ[2g$5H]mT7'd3$XH_=q';_"(iksmYEJeIs3f5lC"=pEe#IB&S)1q%,[X%h`98'PVoOdqcQKF#*RK,n1nA*TJTb-(m=k!'NOf(ea]]_458-;:'-=k>k!6mWFRW8pn.hNc#@ah"9]<"<Mfj!%<easrqEI2+%8=;!=+Zt!>,mrt2R6CK\_%pFUGX2UhDn/7[SJO`$;Kre!CmUB/(dqQ+Nl7jcLm<[\=uaD+gp'>abnJY8,!>qKe6+k01DISt#Q5tP%=PO-o8!6DI1TAe[a82'o*gWD>4`9cOQ%EXA>uu(0@44g)aih&\'MY@XX:1>76jR\-+$1WYoWYf'Uf=B91JY`"6$n<`9o"iRUa'3t%]i5-YUjARlbr#I"L\*=Fi?]9_9\.*TaWsD]Lh"=sCuT<=F$U>_5+8!;)'4YOK'/Gg[_N*CjOJJR--;Z[>SLX20?NDABrofMpKPn_%=kjHY2;Qi7">b'/R/Tm]7JV8WD-MMrg?V7<2q=AffVhI%"2JF9`mAPZ"E3CTqA^,A&HcH[WhQ%H:s$j&W*VTKe&kX0l,u2:QH@9;%gYT4D/t'M;)*Fr,$X\TYK5DXc6*?HQ&[c5>GulQ,bEheTh+`JIl8h)mV<qSn])0asBcT6SOmOC9-oT)]Cp?:k5]s[UaLGCYU9:?R%"2g?=GB6n2[`\G\E)3<hA0"5:3j'9hkG15j'%&/+!<W!bH$q_G4#U>0e,8qLLi@I('FH$9@.;Ae\f'jb*fne+4D/h2SebRg0u7R?%*m$78X^t+$i=f5'ndu:t3NQcbE!(D4Y2mPUVA[)KXH]QG=oJla15%sGEV&=^kJ;qm7=[I*]O&kVZ6c/oX6c\k[^LHXrhbJ*d/f>b%UYWFK%l^IbeqaEg0>Xj=.K8P[7kjlK;X;X2^fqJ)!$_Nm9lTM=JZ%MNFZ';56*ogYIo?K4_3d-=hip)%H>APS%1>eQh(U:!7kHE+%H!T;I*6N48C1YpL>._hX'/c;%N31VE0VXDgQ[lF)34rCV"'](Ho;&+D\m?BXfETL%qL%7bZ[gj&2fShGk:[BVfE8psn0VI8Zusc%%$/@D3NA[L4^7-48Fk^2cd_17-eRP@=07C]+%\T#h(*HuiPkIOcQ.`SnZ40=-A5U@,1t-J[h75?^4Xh&rW$??g^ZH-VA*\0:/MI';%c5=uQ0393Y_kQca%-O^EG-EQ;?o^T;\sn6S(qkm%H/.FkL%:c2-oS:&0t&<BpS>LYm()JUH1ic`@$qfhDc_-nXhHY(m&Yj)r-Ggp%56-UW.Uuu1Z`eU]o>64$c9)JKD0*C@HD*7f3/>E9=5>f.V'F[PZauPhk(>80ihRKClFdrM]-%71=JP0c=>a+V?m0KrSJ=Zt!!Y#_%.#=[jfC7Q/+d=\7;l\qFZ0/S=<6Z>4FkNUl]";D!5[S^`W6QO7Ib);cCH9"t2Z9T2]G1gQI\e+SJLN98jJk8`[U&;dYp0Ct"[SK%%\n<m$CXY5Q\jVh9(EXF!_7T#SF[io><M7Dn=M`3[5%n/*,-Xm.!5E_T98$M"jf$DCR8`gJM_TO`d\CJ#'-XaMpaVFFb82J&Eh7`%%GkFksFg,$gb)%P2Mk1A7<$'CHl/UpG,6b^"(kTj%AWqfTkr^Sl_];4n;NC'Qf1P[3`9ENT=P2T0<FjYLlXOs@!XgDOf4d("4N)BQ%o<S_K_%+&'8,(0lQH>R724A]F#<$Z:21t4r)U"*HY]i/&ZoZk@@`ilb!;&@O+G9AS\U_Qgbr!>4jegRT*;;U[P#p\;H*M]*\(?i&%L^;L2:aZpmbNBJO::EVj;uZAh77;)_eNb6SUSEarj6es_ZE$,:^'rSMdTFKo?C#OBba*haf2&.@Fs@fRg(E.gFo&hP[^0RT`.R2T%6!JJ`6jLt"0Qn)m9d,C8Y=^#&Z%O;'8s$:efh@="B4#^]GFp17f.0Qb;O>UTZ50Z@!Rt]A^o1Pb9_tg^#c!Z2<KRE$pY%Rb+dJ6?%GhGu*3n(mOqIa9lGd/UU:Ak*Cm3GhhHX)+=6#pTjM2VF+:HJj[]IoDIFkQ4Y''eYjpr/Q_!;^.1Rt6u2-ILpD7uP;-a\n#uLlffe%$QSEj1m[]a#u'$&m\(bh)b8Kqq/2pPWAlBDnf)fF:Na#P1co@UW-&r9UN!*,1?ogHi"VOqJVRVp]koe<$LF5BK)!_D#?8GkZY.KP%H9:Ko(Y`(Q5U448`'3o,rOQaZ`TXs\GQ'TXGI/CHiK;H+O,F_!do7f\R$iEZM]BJCNG^BoHOsGY+P2T%8O_CU$FYQgU1d$j0cu@q%$)b-2/Q`",1]iI?\FP#0Um9_eLKtG=:aXCVTaLtj3X\HCjf\lR7ki;1*LJY;fOZH4Z^o6POaTO5k''LE!LX6p$"J/uYdSLE<$2H@%E-7;UX#%_;A"k_a`l.X+0AemP_,<rBdDiZCrGIkXj,AXCYWrTM+/LiFB$ud!REeP;+jf_YgR&j\j^DO\"YFcGRs.-C"o1d$1q=<B%iT^<=F"["D-CB3FDDR3&)^E)TKVm@=@+:U:]]lS.EN@Yj!<AZle=FOk>8[6>l-6fQH/btJV+_(]\O^p`lSS*q=(n:Zb:@!_&_Ppc%I>$QJgQouA_s4<.XC?KD%c.N;Gro,5JC?9.8[*Fb5@q!Z!h-8H$H/^4>TCckA).`.W(IX+_L!:]dFZ`g*PDB*-tYLJZFJ11qP>4W%3J8E3mY"J;:(L/2-"#>SK#uP34448\?l)L'1*H.]BWW*[/U@HBY`mdS#Nd(9l/enRU-^Q&!r-!Kd6Zk-/^6:UGEdD91f^-nIVr!9%6\1G@V%'#L3jCt;""+4O-sB>72)riS?mbjEeE++A9Rl">BK'LU6iS*4P>lJ+/rD_hZc]="e4*Z2aJ;(Q4CA)";.LI^.qf(,kVG!!%\3.K$#O;YLSau-ocNX');</W!f)hJ4"GlONR?NOpZJ3Hhi)ugsYnOGjppOeGONFOci-1(UD'o(Tg<fG[#P^W+>67jU@th:Bp?7;M%&H&RK>A3b!dqg<M1q&`0a=L;`b7lEGnI(UF@;Mc\V+[&ub:OlTS<YNg=#8CEJ_);:I\knh.5(aY0T?>L)5N(1J?n#(E:U;*;[a)-%RX'K^f2Ap!$nOK<M;!"J![C"&j2c\TKq::ef3pXJNot@*&ZgB<[q[lpR7GO;d+Gtu3H8_C,$V/AG0J/F4@hX'@V9%>Se,2EMI'm_%N.QnnJ1eNEkX4nDOFMGXCGr.OnGr.u&p.oJFDi*<(r#E,PghDMoa0jE(j;EmTLMk1']@<m=X!Zr'j,9K4)bCTq0Nm]U8C^o@X7T]%gaY,84>JmNl"T@gi*p[mj6#jLgaQYnfEI>e&(;b8"DH(ldQoJ>jN?u*5QP!@_KHrC[bS%k;DN!2Gfi)3+L9(@gX?g!oV?TIXtQD0%Z-:k>lnah[ab_F[2+ZUG:ghK`d51r6Gd+5Jq6]_P@@ZR)G4je3fRC6IRTM0)'Hp`06"J@TX^X[\(nP$+lk)YWf*JT3dN"8]<^N0!%H%^g@1C_9k@_&G>B-+&=KfOnPfkH\sFs_l8aj[BgSj*ND]34fBHpX4-=K:PJdHc>cUWNS,OrO9G;]d^R[CiZ)"(Ttr-setkR$WMf%f<7!TpdaKM'`ATmo/ME@lQL'XGkJW]_)MWY9k7%-;7D;aZ5:JcI5lKE"%kf?U&e8`SH$fR]E57K4Os,_!FTO$$tOkk\=(MS#$jH,%8]*Tp?\In6KnOc^NN2lH"":[?YE"NIfb1+Dqucoi_ToE6:n'aJ/K=t#"^BPX]oN4F!p@k/5K[[B#cVd12r1)C5rW9//XF0I\j-Be%-9j+KNP+RcUm/Q,AeYa2;o/bmFrjCc18u^=k5)<gK3Rk9X;@WQA@p"R2.49On\6O6U'boDaNHWt[=W2r0-q,rgJ"j?\>8>),XLp.%QOYQ/4!62:j(B]M;Pu8-L6pgql>J17)Acuj!/40BW6irNQeXQdS6ipuSLf$RZ,GIP-^jTg%eSBsnJVhOIT`7UR')=<>Ta$(D/kU<%U7m+<f0MjMk-,4ulRe:(4=Vt&'Zl1oMATMV51>`jJfkO/hDRl$pI/(cNoY0.);",p+SBd[q]FeFJQA.gAD!F?F@r!`"Ao=`ErV8c%SUR3UD)O2p!qBmSoFZ''Gf+];%7eMj#$Ya@o&NYZ5(uNt',f&t.39""b7W[W`$rN.UBMLeEb+q::$0E0/5Jc/1=+E*#Y4XBiWT%*%875lhb)[U#UqEmd7>EI9]@2)U*1=_IgqTRNYh[-R#7(BT;-8@ho8BrT`6Z4:jI?7PK?4T7Dm'!C8X1jM+F6Kk0+qi3@B$DeFAO_m%$SR^-8KlBtjG"o(W&#<Vq-"0S7o$(+102NWLm5=8i/8`Ol]p\q[oh3SY+A2LP<GV)lL"piW2!`f+CjLh#Ro!k1(6ASR5m/TMNTAO%[SEJUa6U#$1kOKVfH'2Y/8.H>1jR"QfunXP]48G!P6]SYpTkQ9a,L"hb(;FI$uSs3h,(X>A=un)b8jMon-?%>JpcH=V424u#.gK!%SK&-t@Gcr_4WkLoXOf]]cE2Xf11lrg\28tpe+L4q2=9=,TS.U9lq.>'r11!)hlKk[-YJ3&79Yhb\;ZJI;]&gm#;dG=.,iu#;#6AI%8Z>O0O6@bp7EXW^jNmJeQ-"=dNe!\BJAeG&>b%>;KdE$+jIVm>96Fi?gqfg<+:CNR;hcl\i#^>p[N\Xaaj.END=mZSK!uekWPdhG%_((,cP91k!AMgLpdqWc_7(*N'?2#MioGa?F4Hjq&`lIA`k>(bXdj(M@k/3C*m!cQ9GB+7`^iUjT8StqPPj>OePcFJaYJ]K.>Z+F@%[(AbBA732P9":YM=4<jDk41^a4DBIi+:Sh:Yd#q+H5ME!Cu!^9:0'kJoN@ee@nQqQ[0p4"P"c-r[,RU2ho5Ob-ca:lHF#`2N/bYX%O"[EN=:N)Zk#+HL><iWB[.>5`40cu->iiqP:u[dPIUehoW%h,$de0t7llB&/D,dZJ7)[Y11/^g$U(YF>T@`QX_fOR[4o3R).1q%l%;ER^/`\<DXH37O-6&efa]o7:6OPHi%6ngC:KjC?=UM:"rL4l\opV@67QVf\j$l?QL-FlKt/9r+d%':16=](A&F!HrB)+TAW\?SGg%1elar<MX"(I><^,75S+Q$X3^f?,do=dbQ]BROX-Z`Onrck9B1tMBdGGXtD]aCTcbU^V@pmJ4pA7R-d_Z&ZG=Q^U82<4iT:&Q5Ogk%G'b"s;Ap[pN2Hn9:NlhuY=TM-LJEMnh^qYl+i$!ZYT0_""NpsY5aFPC0%.]T&o:deFMU3s"%Mg?cKdpNaM9I)'fI`RAHa^pPCa$>%KH9V'%]/&8Q7#hph4X0J\=PN;H5:AB#$bC\3dC7nFC^d"7\k.)k<-W/4&B3jcb"g#I5SEURU`ij+UKg`'=Q:TDkYYf'<(ecAKkeu%"qTaU*i6`FKkUgl7`q*?<f:gg1<>]hatSIAFcbkB0)XIdq&!:.@A::XObp#N0=GuO'c3aQ5hsq&V5s8eYY$dp/'#i&\?.FF[l/3X%S/s)3As]/-JJ-M%V4[\O,NK7nB&8KsT81M84b$?:cB+`%*BWIc^.K&_2eM8C&<j+a.jK!,<kI[Mp03s]e>%-AT.?;0[D?M`)b3p=%EVjY'c`/,-?rj6'_q;iaAF`^a(1GGhlr85rg)CsH:U=dYm?Jjk\58Vk,6S75:piXV+M)%!P8$a&/)nDN/2OF*?<Qqf-E"r[qD`/+%%WHmZ/PL`7@m&PUfP^$r*fBG'Go;5%2'g])\]sOQRd:,=Cq\mpi(7=J*%a`lqNg84/*/=6HgKLBd-@"P=[^IAj0_0e7E(+h5Z0?O%2S$*7:2s2];G^T4?L,nTZ%TQuYD6C0!+nuN=4g[6gmLg-Q#0Hn=.:0a-rqX/hBGoV\XBAI']j:S7MSQpBf2fCb(-9mVs'J[;Q#=l%".9uVZXCm=0[#!t1[J43c[$d,7WG*?4VG:P)SK-]F)klEcTXl\G.lYk7AdpsOWs$#OG^R86j\KH-Q/5*&>hbZRuH:L>$Hh)]fHl%%3)daM%gQteh+-0L,iM0`VZP4qgQW@C^a9`S#_"VM]r-9&ER6\&D9?FsYtT&>Q8qs]ab.3n!qtUo9W,@jl2#B[+,6\[EqgRj@<L9^%mR9M"-Z\qlfV-:X;)=#3W04P4;,m1f$5+Q:.9:a`RU\:3>8s@?MoCeg;#E&AFJ+WFq0V@6;X_GT6cj0S!>,?eV)*.IRg5o"7Sb'^%.\DlW'm"NJ8o-c&$aX">4$Y*lF31I/,R)O"n2.m4a46b6JQH;B`*sUL-)(\*."*R$(j*uXd,/Om%d3)L4&:YAk\`oM5paF]CHKYT%mR62J1:hhOL*HkiJE+(MYo8p?<QT?BJA!1EGP'fcrA:%)cQbt[%cn,+7\d&e*h>iW+9Z?Giu>mEEg>[Sahk(SMoRbB6/c-/RQ)bC%jOp69f#0Daoc(#Y^H@\.XgZ?>DH1%dVDBE'2ii9o!Zl5j6\5[LEmMD<<]Ib`G&dfg(ClB9joS6+aHH[:cX]=C&l&IZLU;cK,JbbE%g(#J(5nlpV?6_X@S^jCa=ZY@cDX[dle11(N3ZBQjX8FH943_)>e6pot0.!IEFM8$'CiZn]G3_&*?9'#Q7D00o2-OP(#uA[P"'i\q%k*fH$Sb@RA3iHX;='7O>VdJYh(8+hICC,hKb[(*91Y5(T(MeCjm_.\9MOp6+XdDo9,L'Q?#CBW;C#!,DA<t!SoG$8'kZ"eP4>MlS%>&&u4aCH=)9U,dLAp+/Ek&=:qcL`\(@.u4#0p+Co:<,kdGXJLOa9/oqebU/rNb4HLP)=EH!P20(m>0P=\cd8^RAR*-*Aot8oi7!.%cQa[>[B5X9EnK(:o*Y3l6!&(A66L*b/Ku3#;;ZQj^J(9aYQO_<0P&`oEp$h!`U3np:mP?JTL^maOTWF7EaS2@i7VC*\m(;?m4r6f%*9m2+[`r((e'lA7)9YOEH"q1O'!m1"9h2M-b)=b*1KJ7M,g-9'dSb=)B0jSX9L,$i,'rq'7UF>T;L7k2R=M3-b3]`PkhM=YW>-7q%ca).?BOLQ'mN"PS+tF39QCt?!=aA?mf9qCa-C\uDKi\Of(A#hWfA5`Ch.\4R1WWUJb<6]N);:3h60\YXrks=:a4Bs_!Pf&q_8Vfu%0hn6WNpOb9(_D^.b2Wnr:5k3Q*au3g)u7.b15T>!0g$r^St%8Pl%US77B0m6;^a$t!\.V><2hN8BM.#ngLOpCj*%>!-+G/1HWKJG%):r\k`UFAK].U,UAsJ_CiK&MA^L4b(]WY<k$okpQ8nJL;J.F#_ibahW5fN62_'0:_3U7=PhB]CV8>E8=/MsHD,P,/lBnp[]XnuX#%OST'pXDJ0b%)L[SN'kd@5(_KWAV'8Xr\DW_El*)U\KU?"5[6;#D94^1duIe6r]AESfYk?W,a<0Q3+Nd+/ARgD[N@\W"1bE7=Ioj`%\K1M\&$f',i;OG9@sA@@^pJ]=$RbmL_b.+l*[l+#:#LO4M*hma#E%hR01O]j.UPE_-YBP!-"'5>+`!?t/>Z`j9aqs$6n&Q22CM;u%B#(Ma4:_!-f'YCd/)`,A.49n(8k[3g"*OdL$nIE<UmHkt^ifYYY;3_$WCLVE8N-k8\U#MZ8'YhV/L?\gV*/cZ52(+XC'nCI6Vd&E%iRqNf'6GXl`#QtTEQ"Ck"H)!l8,CW(gGbXN1')4DiJ:"_;tZgV%[c8_!?D.MQ9X)Kh]@!g4Ul:="^cE'/$'nqFZ.Ut1VU=ia\C<Q%I_BUONFQY)07Z.b+S=76,2RS4aC<B">VIZO"NJ5\U"W%Q^h0:r90VmKBT:aA_#hVS7?fXSC\LS:gSSIL$(`EsIK,ST,,d@=4t7kg%F`P736r++)4<(_6++plX/u;_1;,+IF/11Vd4g^8c.L"rJrPL(rQZPX'Kgns>'&Cs]+f$nF%Z.BsP'gmO0i'l2g_PE[TkVe)_0@F+%R!iDu5$LG/TcXFOi"rlf;p6%c0bN3teCu#E0LuV!:kc$[;#SA(]W>WnMZi6X`WYY*,JWPfNe6Km<@ONQk,@Sl*DEs?d"/5sj5VlM%aBlLUOrPKApVbhOJC8+Y(Y&PSJ54rYSlLcnnDn#?60GpTYKjDt>W$cMH9>s=P^*D3l1Lt<<J0Jg:Ze<CE/t-J^C3MfT#eDG2\!dY%PhY;.,asMt[1FJ0o>SD"O3ElKG+N2?JY$:]B:eX^DZ[#S"^CLn-EG(bhj.QU20s9VGki2<ao0(bBWB01\-K39=qRBNSqAN!k)o0P%JHCQM:lcF0[A@(En(!eB$5%QM=8YMWUmaD?cWLmpVLoWe\GXoOQVc4%QipHJB?1SF_da]t:Ylpn5u<KoU8&+`dd(G*g/]]Rm%-u"%Za!+-38i2t6l0fj@fV?)R\XdFb*(!"lKJJ)k@1RT#W(<bWQGNA>V;Cc(6C7S@eM_:Y#\?p(O*:s!AcZ5n<.g7a34c8,uUB>=i>:3%7\sH;X,h^$eTSH4%L]3K+EO7^P:`nhm[g'*9qVjn7RK!Q"KV;-&?'-W3nU.<dCj_g4<,+"Enl6O&k-;]["B,VNG(.uZNl#KF>R09%O2WDi$-DBXf+r'de&Non[V/3KLT*)SAFlIY\4a]J`&KIP_T($0LZ_1N_e/jZf+[1ekeLIXW6o>D#fPL6#AK[lfKm]194#1QHKrS;%/4mPJb'Znb:5-'9\HiB&`/BY#$`LSh]uht*&5],amD=rG1W2=%)#8:`%.087Z!;j1X9%(>Dh/SmTVfWo]6Sg!!VaUAA^6:r-WbhT%kmXlp/%7i`=_VXr-rc*n6uEp)e0#j)VJR^6:@;?<MUrk6TddV[/5Ou>oE&VqF#%7p"2KkgMlm*02=Q.OBn78K6PErlP^'<,aW%#@%Djl"^m^gI@AA4&1dgE5IHb$Inrm_4+:.B8+7%eRu*`DQ,3%NIh(Y;5jUbEoRd+&$+"%FUn=umB^YO2f'Y#K,E5s5PCHiZtiFNHBi%D0f7?FQd$-Y!%jtdR*iudF=UenVSAqobD+Cf\S[[3uE9gin5Bdcrd$g@c(0s'C25>&;Bu/iAJ<a/:F'OTVa)L`ffL^m5l%j3\8K\%$B*hB&F+T4`5p';l1'3^?>6NBJ!r5YZ[9jgI&%PJq.Gb2bSKMX*G!LMQs>!fZY+MV?:(K$A#&dd[17@7SE0*e]fJ6E4R[K4*q#;S%ZK?S%Wm49i,!Z:KLb!AJ41+H=a4XE-f"k*ePE!'j&@P(0,5=HS^'<?/f'?0>O4LgI4gS,]3dA?LTM^^gIt=$>UDU''!&0bP*nmNP%H7;J!foV'#=N4%kAD[+@/;sGP]%5(@[DebENY7,g>cDS0-`dB%-pZR%ol*gmq++@P1P9()nD\+#\1;3/Tsc?3`TiTD\%@:)Al1$?%#J:),)kl>(+IkuUr"c1DI]&X^%D*H>In+L:C)b/^l`7H_Taf''arGp5<%g`\(<d2(GYPer`""Uum_nI/Q6nt4gb(]Z\OqD.PJ9Pa%L@>7'5A%?WJPilg\*EHFOCq/--DhVt%96*(H$F:L1Rq\UEL`M3*E5gHfusYX>@OmG+^Gjeo:X46X3TtsZh&o;.VXUnP+$#GnZHK#%oX_A.kf(1jkeYf[Ab0Fj+A.C1V22]4D5T3G7`o?J",sO66obHM<tVKX&sCjt3LIqNO\c;G>!;,\!5U<FZR?bS4'^i`bcWJoE)3&j%&),Ug:R(TZW99IFhcn-(=gXU4.B`e'=cX-hg0MTmS^?!VQg.$M!I@noiFRUorNA<i\ml6R-^JWprNFI%6PV8!;Kpj:EYr>&FZ+L]%?*3P*ThubP5jGM(;GMd;3ag4:%b"=X`in+#+ECM;r%O(]c^.oG%EeU+K@Q"aI4?!YSpU,X?jADBPp99VdQq8iaK^:i,LDHA?0N/\%*7\C;+9ueab'`PulY25\3pL=_lOH"TfdeINo9qGm*gb;8ZudeXah:+[T3dkN?9L0nXtK0pK"NGA9L`]kf`;gFeK_X.LtY/F4g@Cn%!9F_^l<@p>ZDj1uI&$M?<(M\'f4EP]X2YFUU1WuG5\(U+WgkUO/pMf#C3K_$cY[#S'B2NM1mMj@NbPo0VQ.2k[g]I!H))u*n3CCs%aTtApZj\>*h3"j^(ZLm[:GuSt/8MQW^6S*p6e`McpEW\1BgbQXn=*QX"j.La.8oCOi%><W%1C<44c4BNdamA3^KB<,aR8/F.uW(6%(peEcgL:YCdZPk@[B2%JaPc>qcX!sn;l(7mcM>^B\^d6GRb,t!25hfod%-kj>kGAIo0spG=>[S;)$]To-+iM@brO<SaalC,18tca%1Ljhc;"g&7fi9nQdXX22!U@*WQfM`$WlKl1G?7#o3,/[!4Jptom!ot*bNj#)262sJJ]?INE+^i[lJ6\1Zt-CM#p)aeSBD\+!m2!Q%Ml``E+FA6S+)>t@82GaECH9&iE8T5jGZr6e(-23l]dcZ`@$/!6TWP0(;7F0RoMWVM=3;J(O4C>/oO8Z/6*PVPm6#+)'U5;@Mg,7W%;s?L)dPgTFnnQH3eMbkY$]J(sg<SDa#3+iOf:]lHl+FnQX)<+&kY%dE"CF)!qk`@R"oCTHO^D4AqohbUjkLCEcJ(T("q.OXWKt7J%<51]3#\?6Cc?e7-_57%3be&UL[JQ#n[Lp2T/3TFi`$$(O".h[Q_^"#DRV&kt)OsD=?lb^]G9_>)@^m/\k/D'C$X>hX8XfObeQons%*P?rAp^:Z.Ig:O]iBPCDrINn?BlK@N+R3P*:$\AP7[L2o6&as&c-Z-#Zr4a"`V7,Q",g6idYUqm"(RhFN;!?\3-g;]!D6ejKl>Z;%&+EjWSmjDr9$UDKk$RiO];4\:b@B7pc2u7OC?&/o;8"m$\hna<AV=rXdqg0:g6.,6=sMn7g(YSfiCF*K0h?_B=fV>fkG@#gn)Rn<%0F0;aotP2W#L>$saK(EC>'pNuPe`It[mK)_AAm$>HK_>QId63bPXI2b+&.qug*p4k)5C-C^.NO79kipmW2[.d!/O+idW=8Y\-8]f%,R1]S`$lD>IQdcm!!.=FgoOF*31.%Qk.kb@^:XB;(C$ad\#11nK#:+.a-1ro2KF`=i*]&iI'e4Maiar*7kH0r$moPD1$[k&J[!*d%HCF:HgVTR/H+Lku/&N^3C;ng[50msu`=3kD=MM0[nah,4+=^:O(d]S?898OIo3GU&S]06ER7A0m!N?<_1,e5"im.'*"-cp7iAC1_%M+e$`b8>Wo7s$E6-Nh8BePhpu`&-EB"2H1dD&:Ul-mb-u$tY21E2nuZ2g4_2O7elXk,G5f2W2D:H,;$3qcWLJb3AGld&d?4HsPC`%%)^QE+,=i<o]22R//iLLANnH"(Rs.lVglGl4\fe&<jc+7"EokSfc#T?%!RtNjun9p<jH\92-[Q*4Hk^/1Cup'Ri@!On)-CfP5UJ9%:bdUH#Cs9-^iQju9@[r_NTBA&&u[M9peH-"\%].MGT0uO\dTnmQc,JP2hir@Fg0>FQCXI"H/UDh!AouhWo-n+i`ZT7);i"-i\c^,%V"b#mm];XO)5"#rkblU9P'(0[X0nF1X2TNMgUOMZ0.cM0Bq47.U]i$5_"6M"dmd58j5GKR2Nm]5CNg\YJo<QK&YK9("^H+@&o>pS%fc2id\g8#UH;XqJ1"1/DM$B1hp$#L'Q6!$0@':L;=oGDaC+HKU-.J,mBqg";M3`0]/tsT2Q2iF-?5.]f-kL*RM[=EBd/es-6G%m\%^dX'pW^k>"PtN,cY=MYV=MO:jUXcFE<_jpRJBY#sO4"HBKSbs/gd\6Go6LX8[k5Bd7>[Y9l3>AA/M9(maSq0HR'iJA+tsaNA'Pgk%VrGg!Kdp$Klfi$U.Q$Z4aT/3SU8m=n(c=*_^Bl@4"cYRbRjTiV?=3l]>_'/^-@EJ-1Rk\+;Vcm5G*$lZX@:,L]/e)GUBe`@(mZ/1%h;&%%DGFi[RTss5"!fO@h<VH+<_7e`[+]Z7M$TL1S>nU+0j,tR;5j;T"K9PP>s+8FoF+2$+gKV%"C!q/"%OELTciuTKHC(;`$TSU%IQGXXk#)H2Gp-A@N58aC%s^C#A4No9CNBbf!7n30BX64*F//!1o]ji/dUo7oedhan(We3*pEd'plsZH-cihGL%fOcG9'T7Z$Jhc8%8n(l'D"iikEf>/p%WphcFlXH7Xr39]^hlu5(S^4TRp?0R\reRP'l>B0kss>]J#:-[(;1K^3/;Hk&lTTm8iOS=hE=5E,=PAL;2u&M%B$(5/04I4**U0cTQHG@r+_)":bA.?>-g\rl"7@f0)TTpDqLN&C=d(=>'RF>LYLlL9<iC7#iNuNTD8Tg<X.V(?o\c:-G93(:qS9J=%o4DT:=/V(R#V?\$MA4+ZfU7"*`>p+Dk%/=l2X@L;;6)J>mV6IE[O`S`4<dZ=`"FuM90Kj\]PKh7P9joV@.:2VR?E8KeQ0sqq*2cX%C"6$6Z,-WpoFsl7hUWZMmS'jKj%:.6>*ct:KllG!]2\,RFe8]jkt7K#$h:!&:Su4/j4PXd1_C@SP-e04:+u!?9Q"K$`&];;WA>@2%cs4o]M;^55is^-:IL^f2'I!8's2qbt0[pnF(?)l%4=!J\9;O0K>%*cnKB:6::c0D&7Ko's"]B04.&ao^i/T8r_bX"h2.U\hgbRE&%IG9mLMsa<!G(?g!cIcI#Utts@3X.gA22sir,`U(%N+<N4%SifY<;B/[<:"rY>GOM`7`gE_8]%r?FFFr29rmBpZ47Fc+LR+`):KTY%+3L:q;=b20!OJ#K(\Q1od'2eG2h;u,L@\h+'6'WNj#+t9>B<KP8S5[H?5t(':W0%hTSo;)4@-3LYnp.l,\Hg@rYGnQ#3=#JFp?XD%KIR&cX,<7MgrAYV>a[54Blh%]WqXB!/IJ"IR*Yq290I>mgW)nZ+g@!V#_i(lP:K<hRCNU3P^g%qO*+:Ts/bXAWq@cj(L\-g]C\n(%E"dC[c>K[E1ikHK&*'a8G$ruTL50Jj,%ZFucVM??l;lV*,t8R#Z#,d>A/QdcWZgOW:DE(X2##3%42s[IH_@n)cZCrF.0k$`Z!`b$%]:rol3T[mMV_fWgm!rYj]Mt@H05:JB&XDK_i39Y`+aA;E[=\W9E5%luOSV71FbcHXo@tRh2#V``k'e]l4hL3&#C/*NEWCmY,P^YO%KO'qI#YHd,`\gA"Q>2*(8ETKlF=AaMGbik2?43W5arpE$J>6t-h'l2YTj(t!;sH=-JYEPukbn8W;grl#P9?Gu?)fu'Y<+UGFSU7S%\)R/j]6[si2W\H^m81AblsO"o/*W^q%HPUhgNRg$#p+n1V0?H2=U>6J8aXB2O49:$c]G;9^;^rUHn8I,XKa[`(^&WX/V8R?Z6U-i%:b8+jr9VP@/COa&oQ"Q&.Mu]ie;]]HOVuZM0''*r]:Bql.@\:m=m'(k(9tTTZ]!42;r^]pajNMb528Dr0/K>EADBoIH[/Td[3BT2%ZW5lRiRQsgS0$"RI[$qUmO=jj_F^[C]jpc$AS8D\`gk%j!#bVY5VIL(=YrOMAlOL(VPiCEmu"V#Cs!Fr/0k*%eW@YbZeLY>DOVYk%Vr;n$::<SW?0*Qp9[SnF$/,E^rZl<[7W_]3cZ`S?AMmK]g@N;*9(SJpaoXL5dBVeqjQ/_;(0[h(h=[U8a=OD[JF8+oK9KNOXD4m+%pgD9T@E#^C"Q/eQ$Tj+'9Z\`os(XXeA7r6qFr/'K/$e'2X`eSE,3.U\)L&H`C1PCe)[c&n`ZN=cl?]SKN4[h(=HDf-4/FGbCJ<EL%[o!GA+gR\YLbG>R,joElfjaG'k^^r'fo$E_3dIPl-^E#r<Q_SqX-t8+R)uUr<f%m+CB*d>C2QMiknC_s_t4h3,Mm-0Vr:J_\9j<R%d7B:aX+kBt48mr8:SZO`KGSr%H)ftOPgC]qQ\(!Z\^!lIpc/Fs=?48r=-paNRYPoIp1]WDL0uXg/s\#ehs-j>#]N"R/e[9(ctBfb%8)9\SkbjsalVu4^ACfN%[82"lMj.Krd<9]Rii[(A9S@9mmI]3)Hsu+rl#[h9fn+Z,=jMS!>R=A('DDLrjsh4lOZ[.HBnjb8\"eiR%\!YifgJ1+DCs%dMe]!bP%NXRFQ"1W(X.WT?<5Fuk<n-S=+N0o3\aBV\kmOL-1Ado[p6J5bOEGfk3F)cda)[n@G(jQ$"/q&;3O8^p%k*4ZqWZH^n!q(.F7_Qj_*I+$q*Bd?1/khHB#$V".*CZ,)-?j6CY_sk^qbdm&]RrO@'Ui$uK-!fQp;_Cc9*.1'SR_n9'?uC!-$NL-%8'[<BT\6lXKBPXCnaZnKFDIbR7.N6r/U]>J6e],^WWhGM,ZSJtU7L5N&<8V-m%hJ"k/Vf8.,*\IStq0a'C_.?0HO+C6be=%_0Kh>%ALY,e[oa\>NZc5$rBRr5CcV#VP-RsCeQ?Jt7E/cdXY^_b-eFhOqspVu%8tK[:M5S2c&WP8X]?Tc`Q@I9O+B.%Toq-WV7o'=p.\,0%lL?OOqC(.SE+R%W-$e8(]cP49YL0XsL-N<+%Mt*E]Em+GDW:i84!-GL&-_JID&_[bYkGA<>@pj\R#1s?pBpr11ZuQ6T6iaUnaZAb%^Co))e0VO1#f>tJciQ\)gR*0oj(n`k"ro%)>?hS.>7[Le6EM)pppIbUn,P#l.A)[:=:+B3Fjq<uc_6I+cB]uJUWCe;'prB!An`1b%12'GG#'\j=L<YL??h](jm"jq=6*hX5-B:$^W"i]\AUo)J#r!Bk_Rh)Z8=&qYX$+Jj@d/DtQZc,W?Mf/KI$G1R-&3#ER.a_*UhD59%"#BYFd/n2nPY.3l7F]N:<td.+0<W.1(Pa`;h/]N8ETgKYNIQ6s(lkkLlP['n9P]h)kD,E$`f<`Z&=LAu"2UOB5f#@Y;aOlLjI+iK%J2p-_NkWoLM3TV'c`,b+]6IOhA^2Y*!;e:?3gDQ3FN'IKm#]M#KdA<EZdE,RdgDN,fU<TZ)5\R%Z!4k:N+>u5<"pA4VP<MeOqWE"%0KOT%69(-M+S1@l5V&%4*+e)\l-7InJ=t%-dJ0eg]]d+E]"De'UVuWI#PR(#L(bhr;K9XeC',r4>?O>U22kM$7=(S@Y//K_Kct^K%_s,`HQ2m>N.?td);6fugo"^&u84;'0lsG@GH\dbD*G4Z4LBoCfO4P)j?Kd$b;*7A#s%D/%mb5)hf3qHohr4J>?j/N!Is96:P7JkQ%n[9`7G2aVM%-iq;BQ7Ad1hjdEmo<@tN:++*gfLaL3=mM,et'ESc^t)4>r?AU.rOV?0]VU"`-uLuH\Dm^Rn<RdOki(6@5aN'Z\kBa%re^G<,C<h60Bq)b]E\YKap#Ac*!4uCh$oJ=6Q>B<d[i.%lo7cXW>on(@)AC.p/%S\g:@;0.Of;jj\d"+'3nBAn;`;TH*p]fPV\a;%9SC`nZEl`nM+d0-Isl1'Dcm89?Qgok%PuN(.o;XB,`ZVT7[[X1&k=>Jq.C.%2Ci]Lpt$R+4H-sH&AG6K9pI^+g'Z:!LQP3*;nT%l%r%<`.+gUFeH:@2PAFU8"rEaj?O*5@Gh1'MUI&2,?o"F00'O=L,*eBWt>:!$u6/Bl!G)6R,#91QBb`l:$Ku'7M-8\Jeeg8nANSO5%%NO9^:Vi^`AHGji4D#-Cg3G9CW*f6me$Mu#b>;(B'/u^:;pR2(_"3S"A9&W"3F;l]8d`/8pi9FbR7%*N?@b8]ZF@rLKH6(ZJSJYfo%pOj?V'5@'%!g)bF,;S4,0[ts4osq&hA=&t^+bJ(;ofKXg<gSke;Z5>b3.dT5DT.;^(?Ac1pA,,D\!NE<@4%c6<5D2`R[.0H+=]G*%ZLg[M`'N*PV&;<]O9^'sh7IY=&q"gjfoYn4I-9flZ*Gnu((B@'gO1=!)"TlR%JLLEW-.5m-(7&:G1B0cE1VhC8D0_*P9aE=CMm1$%T4R2:Q?qr6GC>XC)7o?R1-Z(E_)t1^*OcJ%XXL0m]-*eaQsXC$Ku&G_jkokH>j0AucZ?+fe,-Po$mVq]RiZSqFsuEHT$&W]956*%%_B8VnVjJhV9n!/k!LDm&9+MMO;^,9!%q;]g]r1YEQJeX:S`130HYJ.3V$XS`c/]mW!\ZJi3Fc?7"B*^J$/u*IP],hW_l[H)?do3n%h+FiY.9(V;;qfcKQ24"tH>ETi\O9lsq?D<BIqY3jNV"Vl"@i*"8qo(0bS4n2Qf@%2P$+"ZnhpkM-'uqam&q"ZC-'9l>g5T7.KPiq%65D,JEu7(OZE]F'(P8,r0fc?9l:VArC#e+jj!)=!KAfQb:K1ocrj)ZM'D&^9Df.b(`+N0[IN=:hH)V!k99Ekd!8FiYLpWd@5j:=N%/hd/db*`T^<'B!OMP%"M#[\ZL8%-_T&P=F_!"??V,Xn"JE=_+6?[n"V>4cJ<BNi$JlLsBl(7h8EdOEbQ<EVjro@bgH&?L#AUlDRK%OL=Be\$9nFHq&.Rpus!"$F*q"lX4gJ?ikQ^F5Hm[4!sYZA#-R#i#Uqu):aCVoc'NpjGMclYh)A>[25eLT$BDN`6g:'p0e[`P1nSG%NNP$&Y'H)c^"p0rVH9M/*]Qbp]EkI,NVXF]+nF\$E(h+BQ^t=4psmB[A3=)*#_l?TB<2))C[K8//#0'Vr;eYRliH#3qhl8)+pTr+%D5)9pbZi,Bfe-e7CnrD%GsrRHHWGf/2R?p:<-$e#ge@S`AS(<2-qWaOI5A1X/5`7%$-pf?lI=akW<ibe3:'s]:W;TN5hrA]M6E#<%%-'WPh2_neZC?2Iq&=V[gnaTZS2+,(+15J_Llc9b8J:T<ZNk2;qL\::'f"^#=T3)4eon'UDlObW`tuq4W"MedDPC-C'9!r;o[cl,%kXa@&.Ijd2%iq4H>G[;'N*nI])"Mkg?><q$FT9"[eLnQ!/.I=\:^Xn`2jm8':WY(B7U4#91AD5ta?49_<'ukK6,t6d/&\b5.MPsN%<]!*4W#DuCYeTrS?TH/H_Rh^+,Ot3Y)n`B3Y];.2NDXr\3n$gFOS5tPa<<h_Z`-:B2g?l0;q0njGUSE`ee3=!$uS/Q'!h;>7LYr4%5_l:8k=X[YZ(c.n0+.(ZNnjn&#P[oo44Z=QpcQWZg(;a3N*9^.V+)W^M]l5f)9FmWTGOKgGRYhflXOh,^D2#]j*F;0gAq8^$#(t"%@@%rl$f7Vb"R:4obE15<S>;:a'X#M_*H&5<,,FZ5\+Zo=k`TRd]u&O,aO7@!]Ke*+U0.S]CVLtudeE;sAIONIpS,AQjX>F!B#*72%5_>R;JVPRMq[UI0f[rf)"(38pom7OdK3_>3`s,@7TAYfnYD2>d9-SDr/=\YA42`8E&:KMh<HW?r>i28>/64O;Qa'(<:<A,8M:b0/%WQj?cM#OF8_T[_Vf:J2d,\K5e#m&rA)b(K+:,MK'3>R&sSc*gLbP[>=VMZ/&7]a@I_>k7PH=>k8A%b=3?1WMpLXm!$+`]kNV^>u,%`N\VTpYr;tC&\3er+Y$B?8WAADHt:i4T`-5YNOk+G>*k,1$E2hRH0-*%Iu2jXZ-QUEm(RPH?DdIH`Q9+Ytn-U^W)^/aUnV7mm"L@%$n_2TT$^jSohpr^]XH"g8<UBPE=fh$bbJpQ1<%=EZ@'h.I[URr5dkCHo]<UhlBDE`'qU=40MP&"bZJ^-(X]_8J;PuFR%cOCrMBP'%j\J?rn_\&8Dn^?S+3#WDK7KQ>&,=IWjHBEd9%0lf3;&%6JmLP49g-MajnHWmWQ3L&Sq/YZ8"ghthqHuU)rZ$@.SaShrOgUM7B-7p%V&OZ=KPjL$EZple#eXp?6Y@^HF#LnM*NY&Ejl>[1IoEh$lc1WXDI"=F.d>`E.g$[n-c"Jb,C&H:@L>lH-f/Q<VFGsqj&"DRrGYic%[2H@gFbQgM/2$BRP8^s`^kWutQ//X@ZYJEIdOPD/Ib[pY[V\/g_EGbETFS$\r-aKR6->Hs"6/M+23@U?=!g)CNoB7YK@JLr8eUr$%dXIXiDr\egXsm-&gQ=HA4f)$!%nThHZXG]_$?L.>9qu*gF>eObP1&g1p_I)GXZJS)]2Or940>/<AsRV-;;+tTX*kH2a\92$@?f1-%7B17?a9Oj"nLV(.QE!=K3n(4JB,U*4e;"Z.1<1Pq`-aim`'O4`-Jlm2Nr7p4Adu[a3\?L&30E:E4PlnJe-?Y7$"A^bSWlb=XuYfP%rs\B"%(`gWacUE#MXnR<^#jP!2`<tcE80dO>kF9!69#J&eQoi>#E'Vhh%89*ME[h/WJS6PL#,/NpJT#7=,EYW&uL"]JK(jKFMW._%q0/8hV$hKLa39aQTtF6i1!0[4M+l"1LN`D&deCM:Pg64$?Flep0HuK9?q5ZN7mHFRLXc2U=o8MIeHamb\Bg)O0EkL*m2S%9;$cdb%eT't_2^uskZZ<X"Tk!#.N[jG)CP/;X[/kK^UpjtG,`6nGVTh\KWSOnUo[^fHF<$!&m)K>'KNOHnWcC<Pe,=IiAirjA;J4]u1@E>0%Ql/-*c%k$Y3&ifgijP!*qM/\83nN9b^!/*A#&-=UjYBnV_M8`R43r,ARnh"J9a>(BPqLp%7a:T<p_oQBNII4QjZ;t3$K$(`]sbP&%&=(=co;(DVB)1=iEpIqoKR%ACF>?Q<8N/9L7_\lW2i[imJS%,Cac_sGgWZT@LK?h>\L&2:h#fidOh:)Yf=6=8B$>k<oE,>\:S&/]%*s`)#0\]>iErec/$LI<;D:AF)76*?NfPNQ`#tfe:"\*G`m1$6NA^O=Goo0E2b(%SH[j;WKI3-&pJ7$9Mhf5/4#CbeUB#L5kmt9\7%_gr`Z,SDj[7[OUg/WM897hK'!U4"s0Ue&gt6OM").fI";&G$BU?6i2m:s_K1&\#&HH)6kIQm'2IYoCK4ZoeX1JYhX?</g,MET-,4%fQl44P(^Do09s:i2;ZYCcR#$=^"(iP5g&.IJfgPo=T>fU27n]Xp^q'I3N=NSVNcqReg$XG2S\4:&mHhM!oBRm:5ghIPGY!Vl?4*8%"sMu6.hk6(b$M0ZT4aE!i)+QHW7(L;Ai"Bu<d_,sBU-*9Np6!EGdkHF+8kBd3GY[Kq0H"&^XFnQoS<aU.3=>iQSF3N%T;Vo,1Bju%,i=<B2tppAR2$^%ecSbS>5mU+D7=\<fn%+.r9UmpnD%#dg$;LV7;VsY-BE]imCVuan[CD3XR@YEkP%9hIe*n#&(7;;oZiFAoBBHh%lU)2sae?i2.5j)SGFB8p-[*V>JI2l!L5\hG8C9Y7>,F@^8tkhV.8!"q/(/2D89gR6m7>!<^;IV>9T^I.=XrtnXYh\c6-qB\O0@sA%#MVN_m6!i+1fn]*;eTmRPO00aKGg]Wjl1!%IMP$chPr!7&7'VL_=ucnkE_lYS\"E!h[&f)*`Vs_#jrpYo7_bol5LWY433Oe694p7%-]m'u(ZCBhr,&_1=W]-(QWT8l2\LW=_nZ61J,,:X[Jo4dro5[2j_oYKTE"W2J,[(;rURE^L@JXMno'!Mj-0:Gr;.Rcr;$4CJ+:L[%?QS>_jc=j]?iK-V^]377Ie`m%s5boUs5uWEf>g,R+-6HmT,skZpsQnSRkOffs-pb#_OgZ5n%%n%0kt3A?5jIi3%VTFT>dLmnm_.(%qXMu,TD]<cT>1:E>$4F=Ang[?lR]G4"jM#b(m6j$N-P'5i\CPSpJ8VfA:;GP;?d&JXtOu`O4o8tV"cjCK]\h;eQjT+?tT-Dh<Y]d%\,/Ws(1P<Dq;2$<hdN\d,+^]e7:R7/0f)WB>E]q?9k`I)5bSHlHArN8$*KjsShc9fF.`hH+Z+D2YoKkVIW9PkC8gHCkq>[hZ=rr*%*GFq2X>%&fGWI&.<\]aaX%hF)O!c@q2E#Nuc(1Iq[4jTnFC>T-dZ'FnRZq#3lR:P;^ffYd!PJSoG4Pe4c(<\OMq,t`,H&D-nSPld%l9=UeZ]u3@>RFA'pa6"N1TB8$\4UZn[mmrEQ.Zk&JNBj_]\UF,IqHW/U\]a9UHYtpn4@&N3'Ju9gVl7q38/+nG[0P(hP#YRN%u`g%N?V-d71pn]_Y8FlpR?o9/]%)B)#r5!qQdnG0-#t^.OI8k]DN*cbI'e6im/tB[B-A_*hk,%)PI]?g)Vg@28luWiQ!g7k<Zd<%CPl(%SB%87(sq0AO>_k0:I`-kI;VjF0gr89V?c"cs,:^nYiho)pE*F\Y8p=0/YS;+_c%1dg9!nqJJ6ar1R$Gn&;ZgJgLY[METP/D/CU)V%6i'oK/CWpZirg1,)[C"KcTp',R9ni-o5##^oZ1Q$(c1nMLc^>RN3=8V4oXr'lnM.17ek@._8h"rO3%g*VuRm.nGMWA[*C_?9)@)9%B$k,0R>u!FDs3Do/<[@<l0Z1smQ9I%VHfH[n=31.dP9I!X:e!+$+"O@LGj>9%kj<&BHa'nR&>a(U%(1pPZFVLL.c@82SU\Sir2>n%>q^J6nM`?eb;ScLojI2mo;ICGKFdjaAP56FG+`BgHHhCKp$r=b.T??KPNEnJeO0VY'6P?I!)O=)M69"]Q")g%?Xp'7j,.T)Ri\eL%<b8M'12#,bm7mI'2d<m2a`W?UZ-5ufI7+t6)dT#m;/\C5`q<.lT??r&h8(E<d(&>mmd]Mr<?78#rmO+,33h.15W?r4j\"+,#c#"/%os!J]Rsk<fO-3$9j>c"0&aS%doL$B:L\I,'T`B8'X?"]6oX@TmI%$Z;"eR+(%%'E/._7N")u\-7USJ[B7!#-bD0I/ud0QLH;*CR:%2MhPq@nGJAPoY`#kmJF9n6c1]Fce^u"QB&i&&)i+*5N<g_DYcgS@+3>-thq;SDJ>=J>8hd2SEG,F$;^(9G;@0g\oI3m>lHKdMRs(%p$l@[a4'E"Ds]FJ2Es.kVN&E#,dED7G_-k:Dh_#HJK7!RFo'b!e4CT)mEsQ<FEQhpb=d[K0A#2iOk1o>g^Q6))"#>nBc5ojX44iP%gDBX^h431:<lU,pK:+g8M(Q#aD6oT*EJ[h>4Hg"k0Q,/]O?*#?%^-=D'OJOtJ3CM>*@#18gmfiu?GU]rY,=o87fBWW.ES=*]&DdC%mB-!58[@i2@3qROl/QE'l.DRR\W^(KR6<NqNpaj`NZ.IG7*ID7p#SZVRtHJVQrfuNmIfH5bi20JL?).S'3&fDO)[p\6uB?)f=H5.%ILG1a/#VS':,?!['FlnYf!-KeqSQFrqh\J$c.A!R^tH(g2-Iq\m_.l$T"obkWMm*-ICms9Aom!skM2qHnCS_B<F\3Jf5^,EJ+"9d%@D'1;`H):`d@Q=h*=:*_\bB'K+[]Z4-`4f!)<<R4$F$[idN,$HT3.VsnSfk@a#NLkK6Q8"hX.VkIc^_HKJPDEB.XEq/!^cY7b4>M%1W.;n,%Sd*[TEO<5]UGE2T0/C)"aG(g_Y5j!9JMb6;$+G8f?Bo=UNC>P[/1h?-r('#rf:C&,(n2%kFU/q"H&J>/B$J7R>-@Z:$Ja%3+R*ng\of`Kifq5YE,r?N=6kp,sj\.-iC4FG5hm*BL\.N(^`(mb5<;q#&ZWlhN3q5L]\j3$!`1.e5^caZ<T1g_<0tZ&4Q5>?qg.;%gM'VMK7>`&noeSn$*TVT#3q<?I[a)i6*3J"J_.AUdiMR?RoscBQ<9kn'L@M:%*"KUP1ZJH^7")f=J[\h5So&b#+@!R\HTU>qu6E\%5)L8'\F>lJD;Q"=)P#67KImcpfrLCOaem%`hnrpuZ-I!q-M]%f'XDHoLUlM0N_Mo)pgfji%'=_ud-J2bJqD4ejcT].Kf!5*ea/<(%SE:FEKONq23)[IHQMk[k?o2Q`NockoL$Q_KP"7Rs!Q(pB#NI$%@ltLHR!N!8dTHGb(o8G?&ZoQ.b`t3#cInW[)mn2'm2$6!i&uba%*hW0L?d_G]F2,POlY1Nj2MV+^F1ck5q(fE$pMU!bUcmU$m`gVOq4?Mglh6/!>ccV#83Ll<4P3C-C,-,Rnt7_;'Z3J!>jh_I:#P*T%M[To0>a;+iX7.J/Ta/2F*`7b-;$o[&`]9e$$BLW]AE/b5eH/te`\oGlNT$Y1#+4"G\nQWiC-?bVpFZWX-sX9*%&V.[=qT!0fMn.F%\(ZjX?dW#uc))TWbfRX(6]s7d5^;N\>1@GnF7IS-_p$c-D[6".`B#2Vrkc=`;9*8P&='N([5)*!Y/:[rp([QgRQHnVeu&Ba\qVl<%L#)C\\Eb\8WuY.;HIkaBpWU\)%WtT^]eo:,B5L2)G:9"lAl&f$W]D@Zk#XC2g`BI?]5Ii)TkaAL^i8?_K*mc'&J^NM\Uc],+2\LC%F_Ju9f`<mPB]6Y39;0)Bd'!<TWsF*N3F[tCM^U138jC1C69PshArMr%RK,&"[GB*cEj[M@njIq^Xjh,XPY?CDhG\`n'4Dm9ic6D#%+IfFO\7/fuFEtJ?'rR%L9;59(m,G2h@qDqrYeW1KNDKg8(D7i];mRC=!h;O+4<*NEh=E+^FYbD^b".n*>j%V*0iX/nnL3T#eMda#%2(OdbW=>#\15rmsK3mGC^D_-g#3W"7^D\jRNlE8M]s4SlQXXn`'YkWfl=rR9?#>b*og?@'0&rCj/(YInY!c,oTTkHt&.n`LFg+%8%g5-#_U:0kjZb0Hn;'MTO%oXRMM00Pa3&.SES>KaY;RUm2WdKuR52O'j+H1C"g'T7_NI:-/2m)^H's,'.RJ-lR_#E&0<M!ZS1Ljm1%1/lB>gD)A%eORhc7Ala[&bOcZ%bc%N*Bc1T%eCT3(OeoW=fJqu"#J=aYI(bt%bbN$)G8Ht6_4>nSf@Ta;7C1rnlq#ZBZP&_aNX$%%&=54Vk%d%mT#;pLW]QLt`<.nk_BPON%`YGc.KBKt@fru9Pq62@1CcSfpYVGM*%2sUP\(3B&1(lA+3Z`!kL8qb47jJRph:?s,bOhj%1noZ-CA3G<)d']B7"Xg'#Dc#[0%%Z59kGsE@31;n!YFG=$8(6rl.ZEVh7*9Y++.nYE)N4qN'GB;S_Y$t4hdL5*>#<_[P4ho&U!=C%+0uRIQbO]&D(m%nTi_$;KC:!dFS&i)V(1ado->[c.g+V[$]S.UG^D,n@fo^?X@;hQIaT`'BPr1d9r#-[HADIb1KCQ2!RXZ;j!K)N%,IV)O+Tabnc;C(EkumM!emmC,?N-f,]5&XJRQWAGFEu7Qh4p\^oJclJ'6:A>a#E!9+c]SZ2r7a(KJ[=)49VIa?TZ&p2'&&o,P59D%F`0p\EdSpPIj4RfRe[VL[YgFd_c:a;!RB-srbQRJ#.7ZsrHPdimu8G=]Qo5"_M9=9k=!t(Ke\C!i]6G\-nse7F.Ba+1DYI!1K'CZ%6(\6[:R/g7@5TiYI-HCrO@H/\4)_?8AkKq13mAdME\T*Fd7IZ3<Cu4mhXUa8fu[mmDICJbAX/!Ke1HU\;879jdpPIlgK`XH\p?J2%``QJG@M?743X'hJ5Q-4OM7"YXA@FedUsd#EG.?)]'ft0ZW5F$c%!Ys"_"UoiXuF67%if.<T%n;39#*s6H#U$&ph_N>DgQXc3rN%K%X-*KpFT>'jo9D&[]nY1G[CR9\hNY7I@M3_E:>?hG`'rNa\t2W`R8QGlBI1J2mhc_MUN(a][mS,VmRo2)(Q]hb)g)q&)UF?^JTYff%'kk=n/"f46"<L94Ji*d6"C*Xd]3r\%Hh.COQg15<=EAOf;'"SZ+eu?@WXh#!r<-s7QLXV4I(gD+-#S[G[Ik=.9P2Kb7Vbq91ikW(%^/uhBllqKt^]\9"5SH)G[@57cZ-G4"H?X.tEVbu+8K.);1=1YQ.u1".lGd/_%Ra2?oK<l/L%&c?6Z^3fdnD'B7aEB<+os2;9.$n]%%]<da3BS[J*b^@1><S>mEoU,*C&ftk)]0,l[D@*bo<,'D:<mGNOQc"h'V1;MGT.1roCXCn$ElM=IY!q++ZoV1"_&[T0O(*,kZ3[b%jmoIJRGmpDM,PL$[lK:c-(q&_=XUr===t6\_M9's8e%RRXas-()VR(he\T!*$]8lX/@I?4%`KW^acpB_h>Ak'CM1%K(r[1nF$0?P%*&0Yqpi$EK]'ICL0Jgn6*+25WOqd/nA#H]6PchPbetn:`2SML+]$W,C9mT@,YoF-(oXU\L@cVCWm=fW/ENo8d<LKUbMsHTFU%me`%6/D2tE$S)B`2g5I/C&3NelG=!)SXlN8JYgC6&_[W2N&:(Y)c3b:o?H:0,@H&=fJ!L&h>u8+^_ns(io+(L9/249L\fd>':"`Y]Ea$%##ZP52QMrfBA]n)\i'R#YW*rLaK\(HNik,po)J%i'2ml9nklpoD1*T]B4g7n_!57"*t_X_d8?EBV)cA/@?+./nqJpO^'F5DUB-2D%>$qN6(]E-VOo-pYZHWP.DQLoS=(29Apc6;Yij4oA(ZJbc<MJd`OF_gc9Q5I`3XsA>n;6Ic2s=8jA$H-W3gM&e9BS[0LlYiRLq^.H%1LIdgQk=@t-1./l`Xj[["?(d\XZa:sn;[=&1Q5'uD_,%r-:$/;FnbS%b^6Wqf#M(7pB_7fTdLX[,q\#l#g-3B&[`NFb2_WBp%l2W%*&GuaOXf2)75c\A$t,hY[-l#d:5H5]0G<2c*R_%FJkd:fO8"FW(CRrN&0UYf&5c"Hj3sg2KqB066la8@$X#1L_8R5C>//lq&Jp95%6(qnt%:s7?_X'1DJ;!C)M:oI+T*I"r;%mWU&TOYS%NtbuD,2N2W)>8AC`^5m?PeS?%2,p:ItA#"j'j2Yb'%@m=e*)!BSO>7(.4Sm%]_.HV3E03D=gX,Q*B1oTBE3Q;qr"-M(l9Y+>KYl^)n%=l?EGshkD!7epag\GX>IS2;t^o5(gH#%hor99Nc_f0fMJ9Nm?@GXBV7&;%F6jH=gY]?G*R8o1m>!n1g4.Nr+Ihcd"CAR$$MM!`NPQ_=$"p$hEEpA.5UkmtM$&)cQtD'RoK$1Fc@!<dZ%]`3h?/%A*V27Y!(/Ld%X&JV`enjKj%T!2Q>0RD)j2`=f[)1(`;3cQ'Q=nU1G_:;'aX/QK)J4n?Fl"^dltT]O\m^_FrUD/a^)=?1%P*[Qd"!Jbb]kkJ620\R%S@4h%Ie?HMUR;CfN/uQ:!:#\_188OV@9diI&,lm9V:P>Fb00%\'qBE>0t&.EZX&2.2UgW('66.9r_f=:WZN;^4e/S?#+Mm?UJ!n*%)9l2B.>_VK@HK-nBlI^]/siVi`A3jH=]f#k/9RPD3?:?B_kF=>Eb3:+e?$rDpIc+*g!Nup/X5Lj4egbPAqF(<CA"t3/)c>&:-:9C%4aVP]?H;UL2;B/s/oeZ^-d<X*)*hO$%;$-_7;s+,X&TpI@\-YShn2^k;5(FSNQ0g+Za.ZEIA==b:Grd?R>oF"ec^fm5*'Vli]-iQ%,A'nG`.RS2SrLB1H*HWuk"VEu]qMm5c0%OS9%8oUc4H+-Ru#i8Hf^_o96SNhBRhISitV(]](WR/']ZrKij2'n75*KZFsl*<*IP:O%:*RWS;uq`?n6cqk\E3,26J3`$^rP$K%+F&uXJU[(;s,]fm6**($_2;j:5AroY\g?9I(2S;#.iJrHA`a[(>/LU1@Yed0c828ZT;89%([/r66ls7:isP(lQ6<sn2k><6oiX!TNe^$NW'$pKB?0OIk7Zb$]c#&5Iq-bLJae3'psEB8PO\K+Sc+E72D<ntkJ8?M`u9S/dO=DB%T9E#AC4^U3hSVH0gb2p'+d!k+2309UgY^skcG>I4(qhKMb];LXX.'i??CWZ0pA1GkA7O@2PNtBeba:2pld=K,dGFq6].qD59#!'#%d[bbsob*6*ajHU_;g?#Kn,./d/^A9t`Z(Q$k3YNFge"s:StKM,dRj1\0`RX^+OI@(?kd=eZD-/h(%cGHdp8kMEd"l36KM^=bgFX<%3#$0&\3"\qN)nZ_/$g#e\98\u"q-k;h0-(.md8g!GDP,g6$'@qm#("Z>00Ym**cQHI`%GA6EmDgqs$HLio*l!id<V_Wt/bTXn8nY%9;?CX!]i1nognK=2TbXP;X(iG[]+T:'gPuWQ0P3Daj\rVKBp5q_FSh3/&HjR(;+dMXKEa"/j(($g"c;HCnWCKgCX,P\_'GR]an8H%R7iL!mR6@XN#Rriii$D\BQ2B0fGcig#m&dY1dU!@.\S\Bi0bEuJ`/c3S[m*ETb2t8gq[1WS<<CP6ZWKj&c":&:\f`qFuo=Sk*kTN%ipj;RXO`VOGath'1U.0co,"r=9k=Z4jhak8TI19RMI7j@?AIP@FIOX37TBY_nPM+.1TCN-1+Q#sKRdcS`^q@6hlKkPIQ[cG%"Q;B%TBRhGg/]H/i:lI^O@Y,L.Wbs;WUW!S"2)UnLt?gCi+`l]KMZc+Q"j4I+t(6d@UlN?"i$6LE&4Ac9hA!R(*U\qBK^-.SoU$>=$-4\%*9-$"CnO?t'4?mATm;km$*fYS_A?W)9l'FEQP-5ORqn>"p!E[8@GLOgIZJ%BLqOeoaVou.\<et+/Hm/=%$pelqg1V*"M&U(4<em`%&Q>5R9u'*`[Pa0X1opVsPU-e[)2)_H'o[<RgaT[P*ArZ`6D?G.>$Off$(Ec*ZNg8,=)a06>q<$_Ki60s&djCi8%V]eI1^@aOl4L/%#?l9sn-WTtB\0ls_FQiH9XP3KkUX0g_an3]7.%n%I<jb8_H\;RAD9G6;G.hT`+4FXX)"f9B,ai)(bN%^j@WOF0l3kM'>.tSKdRG,%MecHUTfF0bMZt)0350bfJV!]!eI_j4P-=@RO%5%BU=2L(^aC&I,t$B>Q)nU.L`%.7pc.Hi5a7<3J2h&f[!s\pn'"=Q&666L<N7qk%V*D<-@Q]f<8]X`2[WSr1Gu^@Q77(4Ah2N+RdAe')9(O>CoO<Be1UZ+TWWkq!hiiRY;g>U$*Ur<OL"H+d##:6eXsbaClNJ5@@Oe<T%P"J:bD*eHZY3q"jR[nftCHam=$;;-g(](NV-=U$=L5nZ4>snpUC-4%[?=Ms$pb,7uB2G]5UgP47gOeRG%=H+ZNfDAqaI5YFjrqta%1#%Y5J1q$6Qfk?*<>s]a-NPb@/pq[5-;_TnQi(=66+,_i7L?%eP=<8A6Sja1#t4:<B@t"W64+n,qO3(_&]octjh)DRN/6()bZ17>%o+03,.+.k5-!1C+]!7VD7P\)j-o?sV3tKPj+'8:)`=k0;8DPWZr4[[DEf^X%`7kuUWP^aXFQBMJJ*_b91V5/nh(TJu3Q^M&qmFjl%Bkk4EkB$\-V6O\'B&6KE):Nk4<s6mB-'XTM?J4@HKQr'bef#)JGOnDh>s`0ODIsFEV-6K+$GJd@fg+5%N(Op)#[Cmh]VhW"m!fOU%9%;GI<)#".kO"^@,S4>hncf<?Osmq`#;+!&\4Wa_h-6Fsq^^/4*@_lZW"_#uDH%##UC0\ufTrW:B$=^e;;B6bjbWa/LJa:R(iTF#%_Xg3CCH<-?PU@s;>4nZYNKflTKKK4Jn>o@M!%[r;pab"8a`HJ)]c$3\9r-\o<-CPHQ>&=@G;R+8c`P.G$3NAG0p`ed4mZ#;5&J<G%.Hngi=QS^l-7g)!HJO5)``/M44_o$^:5sc0TD#N14H'e@QYW9NLgfF>!\6ce7(ZGd%Ot+-(01D,n0l"39QX(A*R[_D*2"apQ8#U0%@'J#/KtK3Wqh:_$oAe]F(TtCmV%hOBp_&)X-"A%aRc0Zjmoso/d\iV8eQ#p#O"EA1)\J3tK@_>,G;0E*8SR[6E$BS;M.VRa\j$2M%qM70_2hHV2N4[r]%MjY&-Zb/XKu1>KMNAr9A!ngV/-lY&C3(1sH^*e)m8?Q$(RWp_NQrW/_f![\#<ZV8G3d+7eep7#?nT$ZK.5]:%<+MT#iO9#50cuDJCf`^RAWR$V<k$H[k!uIG"8g*\g0HL1f#'iJd@n.BUbqSkU/C?:mMN51YcmZ1e#9>!=Fq^bRXE8;\9Y<7),=]Z%3V@Cb]#?Dq=^L>(Gn-UZW^&l.Y9:uKZJ'2hBI]\Qcc0@t!Y$GJ5Cn%8"kW_]@4[gn=9YOT)6:oU7cd]r,(1E/_'fQE<kSK+/t2Mj%+FJ!5W6?'WR;ke;.n^]!N/qK0jJ%S;Z=p=OTE)l3)Cq`e+uEf0b('n#JH1+S*>_Lh58Jj#f$dgeW;6+TIst*uX0Z*nhL=DKdK<u.%X,Y]LG!5**dK"%!gOK$Z^L%"%EYhVZ+D8V:SYFdE4aAHm@pBD.io?Y-%sc]8Zre>u9Our_*?'s_CQX&]c`.UE5k]B*BEC6Q$TsR'%>4BadViu&Xl:_)%m-[D#CAY&o$D##-J0j&#:>s=<gpMWp`6d-GJlCaIJM?,uK=;jHim652chS(-`-dSkF5+OM[fBhhhn_C,\8)n5%GX4>G53lrE)&P/4U27Dq$:cujL[Fe6L!E8c&R?4=`N-^klUeIYlXBtWeXQI"pQ"LfoD[ao^dkqeB/n2L^?]sKNg;,/55XKYZ/Ojj%djjGI\gE+:r8'c#[EE,L<+CjtH0GHoic>qC#"XS]=E^'UIN22\Ruu*h.j4e!,g4"=BjioMqb08tn66jpl70ARbSrGimLq)c6S1O<%O(_MGGr"Sd<tQ=#o?RWLnh:qS]e6FNdQYja;&6+5`3Y/Fn0j5Pj":uH5/8]$.Q(BkKeprH)?W>tFLaD=X,j/%]IaBr1W.9MM-/SY%0h2NC4?$#AQGMPrDIr+gkeNd$7K=.h[?18Z(=skFBO_X;Z'Pft#DR"M(*YLHmh_8`<#``oG]C$i1=8c`^c\3*C&h7ADA:`K8R*aq%J="Lo0:aSNp^PT$+pE<K&SJNScJCfq"UpL^&)TL7:@ngREb;C@lYHPoC>fFf]<RaZMcW>$0r+G@dQYE$V')mGjAT=pQTmq`g:?[D%9f%'LGWKak9N!FimjHS;l54G/8X%d=LhLB*:nM8a1u?86)1Ob&G3Ol`$-(\%I(N-RN?R@/dL_R!$e&Q7X/]HTSChXc&96VfZb\_h%p2rmPiMp^39d[@UTglX@Fs6MBbCmN5-(5m"_)0$nSL9<B>-6!dDTnrXKlK*d@dbdCg_)JNMqMUD-E-e<?*:LLJR:$&b>KM#@70#K%H8YEo+pF)o7"J-W+eIeQRm^cNZFf<.Yl*H1`)RQRARl2X,okL5:ufDrh$"qJ*DAdO3:NtE2:/a%(]e_]1/`H1-B]?[`0g4.GhNj@%0!9pS*@Fc!;"AZ7=D)(sQ!>3R,';omU/Y:!@R5oY`\G@p6tgCk+\uhbRbYGu;(I"s=J0,I"KuJCkWC6X*L&+*6d>pE)^5fKeKr*2%E[10CcH#4D%Wfo034!e7g'('S4]sf:EfN<JBkP]PJ=1!LRI&&4)V"(%1g,ZY:01k'Xb;lUm7r@/\Z?HYZi/!@I/$IO=NFHZh;X5*%VO"=6+HZ1B6X\.Ndu([cQA_3NYiSHhmt@!L[UXh35hBN;fACN)4)#G8lY,f2\nD0JU]8'&n!+[i>7OIZ[<VBhO:m8fT@P\seP7EE%"g*?6=a4h"(?D&4UPA?<R6-6*]lFB;*&hAug0'4Y3[rYHD#k>*A#DtAYp.^;(p"[)354p"#789farSZ^&-tD?=IBC(\D9l@Lddc'%nAmL3k%_rjP#G@7NuZ`(hqEl!LLtLjZDu&eA98T4ka:fZG9lo]g2;FTS;WXlH*MP)A25;)V.)&o'1<6td["YLa*Bj3=@=Lkf]hRD%rdbN_&2>U?mjARXN/FF-SMODk+[UJ,>3Xi3.A:3XFD@#T)#C$D6<35C8$T)F.l3,uht5pe^iD.rR^%')L+a3$k5Vka,kKGM)+*,F%qgBFeegT2j'Ws.A5Lk['D&n`Ho:&4]ppi@bSQ]:1VB_rUJ[7dN7A@E(Aci^*/71S(&(;\Zj2PGa_EC>HqS%!\q&(Cb\04c"[$!?o%m0]Q+bUkLV^;udg>(jS=llcOb=;dRsiD`!#0,>T2mUWcK;MTSKSPLl'$_IFNSU:(FcSBYFdJZhV#3rU]]Fo^q!)TRDhPX=3)\-ll%Zj9.WeNq+j,Ki0CmkMsWj%d:14tS9jGo949eP$%^'p3Al5ZH&R4g5kocd27=Vdqk&ZFEP=/7o$q*+[^s9B<_UBH5's.I?+Q3H#g>%_CKldg!HmTThQX]\g-_O1O6nlE?pfmCjoq"CA!kBLN%sf7+.Ah(mKXljM8S\/(3VQ>)1b19.+o8M`@)m0ls*m0So_Knr-GI;654*%@F"]1Q@D[&\6X)[/FYa+;6QRI&(q2rio#PgnHoZ*YU,6cl4N7=fTRd&(\stu.pXe`Eg0/h7BV"Tj&TL3df)#D3FPEKV=8MnW[GkS%L)\>`lfJkc%<"KW>,bHdc;6Z\[2&m24cIn0bL2G(Xp)u-()?@&bg:Y0.aq-p&E"O/OH6]-a-3H+FYFO0R`1ClcBt;g<#X4H+]Q'3%B:lVeJ=8%R+NVT^p]`&(87?$`K^4#%&/a&BXo"Y-9(b<I!1TpTUu!gU1(Lk53Wa(\l?jOgK/Fb+#n;Jt260V-7hK8g:l]h>Y^cc-%ejA3,n9%l$:_%-qgKc);9!MnJXn%KS+r;=jjCnICa88K:S6n>GEc:0od^IFSB#\5"[s!=^Xd/gFILL8s2E5&P]9F)4,q`sf4+UY>%P1]:LN2c5K70*ERJ:)As6gT%$f#N9!V)8VjFKMh%U0XpT.d40$MVYUBP(b^p+:,\)Zss2*`-O:tkH9L`3`YlFF%o@Z(I5m%Scf4[%p@n,)[[?J5$QkkoEL.SHL3T#\kaBo1PN((N"I99VbZEd>WY+R.lk^]3FT`J##,7!AXu`pkB'),/Qq46s1qFi:X2l3F`c4OK1C%@?%)pNVaZ9,L^f!/e<F5MgIW.GdZ0%RbJEb-R6$'GTQBqY]9-ODbLmnb%@lgG,#4!o.^7'<OY%7hn_>5D<\'k=F=+CHW46h(VH]SXUZ%eJoV5;ecfF@dM\J\,qo]H\bMCb"`r^P\gGb<M<Jj9>>Y#S:3mg<XQ.VGF3T1[\.BUp2rBHU+7e5C7)J#Ea+#/j0lXET3CS!YE,kM%+P0LU:aE3Yp&6+C!buls#uZB?BGdT/ON;`p=b)X5i!GEM9@-b;+$H?BgB6bFE9_\.7KdpqTjmag@7(C_]+2Gf7kV5F#nZ`3W@gL+%a]e($-EaU$]5\G;lOb*p^]`4f1;n,5KSCe5cA2B@o@;CP#qD5*JCi=F!ptm#;QK2!9GS6)h)gP:ZcKIkg9i%$?iN9[>K,)4qaGg&%'KR8NB/fCumroijn*_L:gt8sK>J$$,/Cr%Xp>@'fe4D)!gG"hrcgtR!G.L>JK"Ioe3`dt4)bkQZa.SH0r'4A0gFKL(=`,@'/'=%(%:53d7!=-DT7aAuW"4-hiEtbOp+"-EqeRQ^lJa;jlmrM&>gBRb#=ZSbXo7eoCmU&QZ7?A(<bM=SbMhpt3&Au_TB497=AGn.JKEb"=%bd)`^f2geE%3T#o/gB<Rb[;QnW6Dc5-C<`#)j;+>[ht]6)AFOL=>oIRq/%>O!ed+CpOhi+@e/TW@iXJJ0_>X.8Oh(NNL.tSO@m_*%]K*TFW\BaT&k#Q/_`S*KNOhA6U.T:]T/V;mq/9:"8?id4AuNQuG9T+4oR=R+`g:qh-=;[MJ]V@27tNR_e8V`f66".10oiCs&"<n+%._FhSipeSAoNljJ3<?0WTOPNL$r]4&%HiQ_os([I5o24U!o0;)M#]#YJR#_O+ujC?g*D7R55bC$0lk0<LSEL6L#O*R#JX][EIM.$%$mZ20]sb0p2u?.A/"^9:bX,'L8lD;r@"<(E$ZM=d$.gQ2oCYX\H>Of[,t0r_<."0WOIS*<qCfP9FHR`7jf\4-FB-2%D%'3YHC!=/%j(r*_V[Gjo,]9oD8+fn_<f:bLm>G[Gbfl,pe::h7WTk4`b1mP2?@;/4c:oP]8s>i18a4?0$jnff+BcsF:W5?c'2]UVYFNCt'cDra%(1AsGR3#l4,5uTh+QJ%2gQ$89LA9kl:3hV_'fhTps3,^BZf\h-_"eE,MnJkrFYYp_T$X(T^U=B-jE1`:^=.IlhM1<EQfO9$if2]"%:oOQk3B0>e:EfSobpJrK5l/n0&u$=R1Lm2/r4U!Q(K8NM@cG_XMGDa%bjJ+KUocK#!Qh_H_AB>$ZlPK#K!Yt8Y?N,@q^gLT2pL%0%i:fs979[-9X?$25AGIe8`uIJc8pK!26V4R'!D98:caruf)F(mM2ndn"QMG.bb>JpurfUp8S>;-pr68ODi_Y&0V([LDc+"JP?t/fk%c%=#^*#MC?o"DrrZIIS[h+1k3XTYrJLA0ECRp)GPVk-Bhg%r@ik1V(XMMa[rDKsbC5Fh&tPIB"0=+I)2YJ3Kjng$=&6<`h7,<A_s%Jja$-YjRas/;4\&ZVlA\,OW:;8.OZB_L3MTNa`;XKX:Va32I2*&r7h`!E,Un!`T"WdQVUDNNi(KZ'H$-mWY$iKiD$,=-mA'7JUMq%0,A3"(H-^=]Rc"9f7O@t[0M0mZ2=5Z/9X6GaAu'@g)`?Vg\gb]k)&U$grLl*h8kY<?iIARU3$.Rhr1gpLtH]Pe[q]hj/XBBA8=oP%Do><i5ERA!%!1Nm&Y%?>,tI=P5a]7aoThkdK4g!qLae+2b5[XD95jZ*4)5'Xm^e!YAdXG^8+pqs1<iGA]SeTI,tYqmFjcRhm`K_$%GHfCD!U-CtAh%522t)k^#C<JR.V<3d"%rrtTIQ[E2b01%;@:TM6pfS]`uFAi%>qbjg'll08kkn]*t7.n7B3qST=g(8I-\ZDm>MnL%>]%AYlfrQu4nkscL(T!RH"9.q\47\TmUj[qkIqW(Z@Q1I<B&4/Ot!EqFReR5KkF"&>hc!:I'_N'`k?6q%^gmAE7_o"BQ?WrG3jI[%'iu7m@"ki4,#V4%[2JoZVakKTV!1o^[[r6llUS+h[&7!Z,$8^mHCgM4"j`q*nN</EKdoJ#[Pm?51#=1m)ag!!%%%;i=\N+V#bZ=u%<_6ljl+!hC.B!*7Of&m+dj8f"\jZnR`7V\7"c*?LK4L&r_ngM%%W\.d,E&9qc6^m@-E""G"8sY@C'8I"\k9,s\7CHd1.P,,'eCq3%VA,k+X0Ac[&omnS1u!_Y`h7_`EcYlL:_fj*Ulr2:UK>)WG"$<t[0TIP1L4E3dC-e8duVV96g<c&SA:eDW<p5g'?^m?,$3SqJ9lnn%_%TmIg#<^YkpV9SR9)rbSA6,U.^X.H/7>T6^d-[ih'_TASmFb]Ul`+qo25U)(JEc8!(9VMiaN#H8),gu6@3:l%VCqm3\ZXM7E'p#%!P!@T]"lpi!P?<t,rVu9o1hTh#!D8a%Ih[e-dI>mN&r;rfo%WtUegl@@0PtO^.,7\]ALnB&PYSM7n<#j_5T'-<p@5*(nFVEYH$;g%6_Y5K1j:6iC-$>A.`C__5FA&j]ZL`$_X3C&1Yr+]$@H9m&dN>.0SLQ1p2>Ma%=NJ<HpD6F45.m6cYD,`H'0tAeD-R^6-;3m`4Zqh%(rmp%hg!_o3-!Y[^)5Y;Bu[I(^Iot+\$c<c@/Ssu#1!MR_ENOdMo(`A#X0uL(cdG-?l^776)4g=8V&ls](TJ&-\qpCr%/M#Q&e:G%X;SsS(%F80;>S6H""lPdf%916KQMrIZ&^Rs0FEXZ]qCCQ6mi6L<rf'-p1"mnDGXu)</B=qX:8W.^$9n*#:<=4%'X/$.giP2S&EM^%7@iin\Y^B.e?hLEGEtaZ2V5[opBl(,I,%#PSa3FfBE1f@W+6Z.73(Uc&Z>1(ZQg7&4<gD+cVAnphJ'WEdN%aUj*23l#&m;_'M`5p%1\ic<`#0pQLW7#&B#+YDYuD?kVNXe&0ima16^CJ"j*`\;EM)[0M4nF:*B*0B`(m7]5`j"*J,Q$=@_]N#8CGH'P)hWk>WH^V4,cic%=kLBkI?.hS=i016SucOJr<0lp4ZgX8^\L]0nCG-77>`L?2G6oO6e(P/eQ9b%7]qEd+a@<gNa4;*+?k;q;eC\R8f#:q"&JQ8gm_pY%O&&Bd:29pr<I/b]FK*8iKH<*d6"ic=F,Irf$(bX?_'PA6E_KK%?'Pf<&9V9`.1dmE8ku8fh<NF_BGtB"nLLu&"C`hb_SDa;A9k(?%BZA8mYSg"AHT0RWFY:njV+7ckH&mAV&2P@OB!+P6cm:Q`UI+!C!V.p0?<"H2a9m8q(Y>3V=i)R:FQiUJRhs\3@k<<3.oKs[;V]?a%Zrd.T-&gU?fd*q9aLfMC;feJcA?cNp5Rf\3$!S'O[TR`\/k&PXk-cQrLfp8lp)EtQ7.b><`g#UQ=h6L,o\P:!Z(;.sHg0Pffgt6L%H.8"R6s8lH\^5[9)4,VFAPXes=I6D6Wpe,ag%kC3`Jr!?e!3*>YY-0uR5]V65lC8#K,#:dkUKj_K,A3L'[8ln*u^XMg`4lgs0??i%$t<>K*R@14Ssenu&00ep%(b*R0aM2\H%Q6FTU<9nEtsB@Hs+00WI`+H_@ErX&WKL;DX.P()V>XL?]O\#UM>uSY0V&-Hh<$p'IUlN%RKr)ASY)A)j<D47/EUlOKkTiH(M/XM+QlSC4Z@pO93Q=2JkkQdhNM*Pjs/O"X-TG$[Gp<Y^?4Gg8VS&a1^0.srtrP?-*AeGLEpsQ%<TS[g,[hVQc&ltKON5jH4MehU!F[;Dg9=@VG@Xu:9]X/1ZUG&_k.$11crVn=eoU!aj43r0?61Zai^JeKC#dI*.C$6Vo]@8b5'[aI%@-0LlW&EWI)0IL+)KCAKP'Nd![,0$B&,Frejll>'fT$V,n@3j:FdK*Meuh!mGu&C<,)ou^E%']i=N,RRfYG!R]<Yo/V?h>7n6jo'%89l`K/>7l&d@V^7ROVK^57eGNNn^m+]%2f\Qec]/JJf;E[IN5MVa)h&,lMlN^4)Z;FXpn]@)NN7PRA_SY430>oA%00gSuPJQ/eO<%:U6V2!F$)uT/r9MpE48&LVm]*-6cQ;%l[u6N_#-#f%\,7bHQb1*1M+>CcqCu_HhN5J7+O5kgLm'\"!^6cGWj<KegfEhdtq<Dq^+O%@;NeS+VJ3$&XBSH2H1P+'Jl%,*,amC\$N"EcZ14f6*X"1f^2?/_9#`IXr.JZm'rkJMXXcV+;$DTqu1)'FPE4L.YH3tIU%+L*K`KV%_'P#.Y)ee7oiVpmm`F7gWA_A:EqcB<G"X)G.JZ6J[</pL4;Y(0.[$;uWOAEs^i?]eH@Iq7/mX2QkdY(ZZhH`N;>Z=F5WVilB<sZ:%]kfaD/Y+j_>sD$10/K1R;0$*bg2s\J1)T1Sl1bMjm:Mpj9WkcC@\$Hmi%W_K/GG`o/ZUolMgip)"rRrci!>]IhLY-fC*3n95P=1P%(Cnk7mo87H]q]U"+8QM,9Nkf^O/!1/N&/TKX1Wfs?*hff@f"<I6Q"/ps/AV?I+Pa7*NmSG[u_B7gcXJ+ADUtemd?75IuN=r)u)hV%Lri(m"<2$$*8*B/#tJnq1ftsO'+GdI,*<;H[^U8["2OnE`c\7m6Ac^o*d`JP;:0P0nX,3:EhI2>LQ,b!k1(Hih>;Hi3Q#HsBer`Q%Kbb.G%2Yd,)\Vt.BXSpR0;RJZlL1kgKE^X]d:..r@fou0N'Ne5@sRY#_T5@Ur+H$)V$McE[OY$Y"=%is.,f9&bR>;a8.ik#77h_0%Lmb=fh"hXt`b<.r#omkus3:&fB>b<AND,%k@'G[rN'`&e]9.RA)N9DqU&r?6n3E>?i<j!r9[:/:[WMi[2'fl(;;3dhE@e=_o]Q%\%pTm;i.*\oa]#.2NTurYF_Z:L_knt8f%NWQ;A);Z5F6F_#77iV)>7-;mdP^ELr)\8KA]!e:SX>1W,,""%?X]IkU+q"e^;@kH5=SMi%@rdYEcW(SSFq?8U*<L%a^a'I\0:n)F`L1T*`Fne.8ppC[S9,W(`XX1P%i[FRa2N3NK9im<lj=[F<RfZIMDuNYW423)[]rY'Tf!V,%E&F"4@c>b56An!0#mPZiQS*Lh2RBS1_-"*F+tRY1M*nPF`A5\UV7H6((]`boageW6%GU]iVkDqamA:kDSu.'YnI+M+l+K_/"\Z&2%AI10I'c,Xp1jI+fX[qn1==JiX=Taq>T,e^:aoj:q34?!18!$X5C39_.4(!OJcs85$pp:5:h'm=sr;*2p=J@L.%1JNtBc)U<G9olJ%_RNr=aaBEXb]=dlNb<^>+'rA(mTL)MCQiY`qK81^)pHN*m\O[%X0<1OX/rdu8Uqi!mj",qQnN0.=GTb@\k<b^beQg\`]t9_\p,7a%\'P*0LuLilK:JZ#R<6hfKW7*`PZKeYToAL5@gm=O1]a/*I`H%'g*2Eg9_mo!r7%5m5#XJ1<LU#Ld/7IgWAWCQ\>2t<Z&1kU+-590%WLGLu"9[ac/hu.cqE-Zh/KiUl/"D"-c?tr,OBEfT/e`uJa[\Plo7sB`T0g9*D_8SAIKIuFjBbOk]R))655H0e9"U>oUIG>Y$.,Cd%L:+V"Rin/4%3.a&G69+;3PMtRc'!76_B-)'g\[9olq@=SOX+(:k7YhsW#Nb^I;iP"Cg\^q!h)+#EQWB#-5E/GL!$",T3n\l[uls8%b/:=OCbC?ujTkK[8>V`7e.FOe`41K3fWi@iZttSW,YX3Pb:`f6l"JHD=jaZ%:5Ik/h"g_gr9<OA)aXS<j/3dplDI^f0?d4A%XhR1%jIE=IA;nM(<&ge"1;V1oHbSqUPkEgl47aUBmBm<q]3]::a**okeNSgmS<OfD;U=-K7T,\h"CEDRHmRWS2Y)&W.m"MCeS%1-CsG3o%`#5V6.V.`A;Bk?T6"RoV;dipikNN!=i5l50G'34a7IQ"o,B*sO;9+>YVd:3,HQu0R[0.%q%87oBb1<o+q!1->,5?)^D2DKjc<q&V%.<</F4WO:-W\@3:5?:"YHt1df'ip$:%IlFRCkNt!2X99l8%QkcXS@t=r-Jc)QVamsA#h_#Gh!^$3%M(>2R$g7o5t/VBP^%g6?uj`%__K,-_S90t=3@ktHN6HIW2.Hs=_S_=o-/*Tjqufe]ViF3%T53E'6m#3c<=NW=KB1oE*G,mM_$isB.(U["o$r[RCdLdqhMFVTb-oC%Y84P,h@Il';5qrRT,/I@0_N])p32J1D[I1!T<''YN^mKpaCs>WSCulm,0ol/6Ec*T7tZpAZ?!0MNHT\)$+VtUT$*G+2/F<%Yrd'e%%;;dD*+a5L=e;\,=k\COZUt"B1KT_E;I..Ch2u'[",B9*$\Bqp_.Xnl#PMujK$TXaYS?B[dW;0*+]a2"9QX1JBkjT80f*(C-1&mH%jMo`o!I"mcGSZWcql.lQ[+P6tes?"'+SZm'^eo-Bk2OR8:_$uW@=h+IS7-4ra,!0(,IcBtij3eaO'<,_]tk,7BA[FW2A7j(\/1T!%AiU'B.-1XaIJhOUIOK]YIqXX^n<bo#KimnG7V<a>NRXt4WgSLV;gc)'g?H?0a&Q`V--=A9kSOrG5G[Z,?%Ve8#]WrD4sL[5XPsWA%]'[P8+ub'B)C*\!Ym?.S2`%3k7DRG.in/Q`"QNT:)mEd4Xh$X'/`+X[4c]FoP!,cIb_?Rc]MBWn5mo)T&/Q93B-Zu>r;2o6a)-8H%3L,=QQb=mb7Z"]d2NTPG_T=Jf#"^h'a`!q0%m*^!,L_i3&$'KUQklF:4bh,@o!oDCBq]HEZZU%<eB)LLQo_6E<P_b04.&gOh#lCs%nQ/?o'&.Bl6rUa`=TVM[i.@"%`q&m[gQ-B^68W(\nk/3Qab(Ngn(G?FN-UN4*pVf:.-'e3i:j@0;*N=eLP+JEZMR&%Nh]d(_:KRK%TDJG5o'EmM\<N[<JOp5ZaZAPq<jW>b8CeM$ZN_0m,*Q%#CfU9Im]HX<NFA&2T.,]%*Hm$=EG9VYG4Y$UNc4;>lTo/;$[f-f7j'`k%^l4]Ws",g;b2iHd63q+,Js1)6W]d>HY\Vco`Oot-%Z7:t9hl`71CLaG1h&<"N*[U9J>TMN-5*R!ValF8Bf-?33>0ki&?7N4CF.:>%bT!hH,W@b9)CVC:_@NuW#eOnPTfo@Y;rsb"duX,aMSeZ5ZXUVGWN@hI`@n3mK=ei_kM[?uk`^+p];EK;(.sB4K!)R8\-'I>)$f'#%jJ1N[<#*q6B0C!PY9t34(/>_T#TL:,s)k0!YHB^r.<HQ7*_%KPJLuoeRYmfc>O%r$<*BICp[!HEN+[.DFM2hmdb5>Y>Zkh(!N%fC%pLNneMTipfZU3kaK^'^XhdO/E3Uj5lW/GB>=,tt:=.Vl-bL.]:Sj&*=[:3Y8ebhTF_oiZLDcXq/6?Qp&U25M?5)di3-+''LE4\l@%,riqb=)(i=S#D7ofF8BSP=5.]4[?m*T\pX$3eVAY-ti@,$-#YrgfP)UB]2T][mnr46nhaG.Q4!URa$mglEntDV\o$rkm/]^7bRUC%.BdSLAcg2u$L2\s[>ZTfF*"8Tpp"+(`bLcAK1PTD&$/6X5=XGI_oMnd'F6)Q/,0=KA=E0:p]VRc<m&#,-NJhC[Y`4+NOf(:(D6N"%(<41542J4=gCt9<+B$[k=JR[&;qQ9)V@inFSj'U*cFUke/a-CmBlH!clnkVcO:@bmib?p'Fu0;V8q,753f)8Al&p#_:I[Pq_^N"7%b`aR)YM=%Y#6X/SSDQB7>A%4Hj/N2$370HXrf;2^6S%_7(H"4o_)_u*bHX2M3nO5/8%W-g%[,AX[I;l^;*"HomDdhirKTYu7)-$J%0reO.L)3-n4mos6eu6H-NcX#2iATCE\ib]u_uNs"/'uM!>VL&ePai\Xko2:Z-k$l.N?&=rH)rBD6<$We9W$$eT5,7<F(!+/64N_J%.%o7gaP^7LY7Wa'n\N0/2:eU.J?a0jgbfN^-'aQ!@(=*trCKTl?LZB/Dt4V*V*=jS+I5I&UJ/pI9S2$D"6ZM%\/Lp!^1E/)\8HbT%9MHa)n<fQjJ.W36^5O;s#7oB7M%`,n]b-=bUcEETYf(6'M%a$[HR;[Eog&H3>m,U/frB-sk*=G&!t\/L'LUTleJXbfIdFX^=(/JM%Kr_DJ+&&Rh'Dt!d?mi+?/aq@+O\PN^4cWu-9!O3j9$>kJJJ$WU]-@a*c;McDG1#&#j+^)e*i)Df+olJbm)I8?dH\1"h=8@QJ;R2?%Br#`5B[50qoc3(eRT)9;-.9ajO/52]B>]!_&R2u0KZCu8-Kc5LP\i+QlfD-^3:m3u7:2<$0_8PF>!d\s@<AsH0Hsi[N0TK&6-e3'%"t2]_.<"F[S;Y$6LtB#R$\D%Mn7$=u`$*I:rG>fdLB^/GmbVP4:aPXZ7@Nu"<XmC!cfhmKBV;SMrLhtajZ$O&4j5G>dQ<h/04o<C%%,`@080HrN"mFM]$X=&0*3/9pS/4AO&/X?rd4Jg64/9hS3J`jdEK-II(lri%Dmd;(<2,TX_9&#hU(.!i81\tHRP_:YD2N66H;@9]%da];-D3O=P1qq4^EIj3XgZWGUr+ALYR>prfP"\IuGD"F_INpRSMtf%$oQ1;sY2r>*RN_8af8\qp_cT=FcW%.eob"eYEn5,@]7+8e%3eIN;"D+MZYptFLK7Cc`C(<\Y0MeA:%1obAZ76WOd`kUcMZsfp;Rq!6N5_W/3"l>-Z0Ih7X^,TtNhtW44+qWc4%RQ68g,JA]W8-n%p,XRi.2$(/6:j#F]=Un^O*=HH>Hob/$E;?VL<9c88`e1+5JgA#XArhSMMJ/2BFl;&h-s6B@8sc6H3QJMkbeV_;-DQqm]se'%RQA3%aigg5QG5>%=d6q._6[C@"h4m#90U*&Ih'%,>5;K5bOkn(ajA!>CKmEq@G*+[L[miA\Wf7h[=<]_FFB6EeLF=s't#1@5hZRMQg-3J%QoKm*\dufE0WAro8[;6\,io3`=1@RB#e6p"84pAY6b>f(<??]l2,]6gF,Q@e1DV^VD5gp$\VNG0l>)*`&V&IZ"hM3&3?b'VgG3&?%1SYApN/N!KFJc-jV>X?uQuRsJF*U2Rif3(iWkll/G;PX33<sSMA1>Vb4sL,r.5RBrg$1j#(A]%@Xqo<AP7%UqRXL]t`1f&eYc)#i%&5qUpQ;2@aT(ZW$2TRE!!;5':"LQVM!hdGuKX-:/T\"Y@.q+Wt#5Y$BKU_fI6dbo_19kj&&]uF6F+4@EN5=GjeQAa;)\AUBA;o.H%)DdGulTQHgp1'"km9J&B4TNUVYfiR+dtKnsB&6e*5dG_n=9.Jk13I(S?mb9JlQrO$Z@`WKR_'_LAfS`-V@D;4<UE3eWSnC'@`pEZ%fg!+M?Yp,+?@m"`S`\&\$p-2pJXN/:`E8!fPX>T;[9ZUsH%&55-Ata8_`WYJ7>[ko,XL@2:1',B.YC2ZgP9I!MFt9=_o$:+&TFoo%pnjYAE^m,;Hc@7aNKLT0J,m>!8lH71'97"_lp[Y+=U/OrV>4C>G^S6JG0OQc$2O74n4n%:f-\=1<f50JWmZ;q+NO&nF5n$ZDGre0%=,Y)mA@VF-pXueb_ueLWZ^&YF0\jd4K<oVC+%'9AF*6U6,:l_8#YQ7s'W`p?_,*\\;H]=/GC7$e'hS&OTrB2-FYb*P,)bISAekQ&%#7KDV)gN+I4__]PpediuB<$2XI$Se<dn$T;'YuniB!'b&<3u0YU!^.2ll%1/5'2>9Pl3#GF79$tk"?[-<mj6E[^?sloB=NTI3WZ[%#l_U<5Ks/J?.75\c>beoJQ-jbgQVGQ`I8f1N?!H>c>rjI8bcq,cJ\Wl%)$NRU$/UA_G\+V#mRjknt!c)@!f=\kSE:96`8Ur,.D^$%CU"&\Dd`a1N-@!lJ@6M*UXpJ(oA(!e>i@>g$ngrSL.?4O-<-KCQZ?VFNO19=npX^ed+(p^jphm\@,6fb^r<NrLZ#d!q]!c>M[(6h%s$"#W`0-M"SNLDJ@$29-WS`$H49;67Y!W^j$k%MkTLtaEcX?^1a0+BLoaq#]koY0f2hL81N:,X7&,J'p@.];hTE.NCk5^=fHF,U!%k_J#MN5>+eYT04?JspoDTW<9ie:X+6q%p;!>F9fl1::a4UpA@V_qj-3>.iB\$iKl,>[<5Xec:Y'kL"r8i5=bhco]gN*'!J5G>VIF%<n<Je@i\.:MUKX%YIMY/>nI6SAnGbfATgc7e/M5m.(hSsGp&Nc)GE'd.9q`p1Lg!Y9tODQs1Emm8@-!p_ZlZ_ate76>CIOpP"2hH%mK]?n$l>V6X5.d%-_7S<WLXcPW1o%:oP#clD?L/+3G*hM1O>n)?J"e/p:WTIN7#4G[(9"8HX0\ZYn+Q[@]"_UI!+1+R*$3A[D7b*%A[DBL/7.;aW6Ce5r\,"*4;j;FLhiR%%\'>jcJrf4Fo]gLj=A,=b#-'H7jPq3FB.#L05</<CKJngiGD::-:TE$n^nHN:'Z?5"kpfN%SQ0db*W@e1a?h)tLAPh4+-;4q0+39EEYXsjs#la!]%<(^\3m#l%feZi/C27n,pEqW!I]sUK;]VB_RZX)Y_%IYN\MjF58I=p&pc_9%#U?VfL.*HQb04^sJH\5/s'QF&/%Vp14[R(]9&)D?ZNl:><!i5BnO))KX)%9ZbnlMs>aL,SM?/^eWes*CW;nMu4Y&C7@4m"gkMN0Q%UK&UhB_=]-i:gm#\.7Y?o#KIY'b&Q:=#W^E2(-@.?g$tRF$j9=+ZHGei]t+cr!md>a0];i-d]>Jb<T8DBTUId`#c[eJ]EHGMh(RC%X1+%8Ea$m3ZEuu`!h8WLjCP\Y\%OG]N@O3fB0,h30N'.SnD63T2?uD/n".Ni`4-&CZsDc0E/00R8M(DoB.[T80^:[bHI#QD@?&2%%=I5+9L0Slg'f-=gd1'mH_U[<@[gmQk7j1Ghh-eVHTCh0i-`\E,IEMqs@,TCJ4X<-_()Kb!jq0cGbV'o[Gl"Vi7Y!!mmJWr/:utb)%AZBQS]M?7LTerKf,JiZb%8p^tf$%VUVH?1kaQ"^@nDD9*g/i7P'1%$g%BT?7RhNto/B<h5m;4_V]%k@djX<t1*jiup(YaUnUj7.#%Z)>*SGaq@Z2,Q!c?@LUcQ:"'7l+gUDG/1H#(+ah!*T&R\Oa/i3>?oRWi%.,^*nf"#"QZ@UX_J,gO.UPNjkkF8WgdI,\(kS8`47J'%?0[gq7kt9L-oX&B`"),Ym"&.h6e8')lirZ-ijieM[DBYAD&d)G&;,0j9;@s+rH16Gd(!pIO:3cCT>03B:+u0XAGt?U9k??Q*GQUL%C']$#Y)"MjN0C7m@lb=G8Z0g%F7ms9JRN%*c4;$V"&%n-d;u/85$PF?j-0Vr(Qj!q"r+rEp1(l=g9\mgmFE(%kLohl]^0)i*9Z1O%)4WIDN+3cE9I2--1C`H$Yqp<17)cLkcV*H!:6Wlr0`o&,7nLphRM/5n[!d(AHU*!KpcO>P&rmt=0S()4!?tQ*"/QX*<[CMKJ7?"4%ZlpjWgr&)l0BHf/h81+9^rtY/*.hQCEDO:qNE.QC^lf48i^p=0Li'VW5Q(q>>jPTN;qn(uL1gH;#<q^%@FnJD]DY)"n*J)"$91Am%5rRm&#fFJ0q0#s1;AkSAJB(l-H>s]GIYGtJ%A!%MW)b[K^kLp57RZ"oR1kXb!cXomlU7hsVK#.\a(a,Bag#dQlBSWl#:=^!O$<82%O*uNN#o/.#d:[^eG(Ub(D(e3,CnaGP`P*nu=Dh1!ds;HF_dSA8/e&P3%7aO^iqKcuknI4anBeN[1BlP]3-'aZl;^%0\X;a0N\*0U%cqT"u$i94d=FLVqm/VC!34&Lm_f82;MKH,\=p&V!dQ"*D4W"F-7j5pXR?\%7iXW`4>&Tn[dm&f-<`_\kG6/-XFfV78dZo:p8aU:u%0l=L]7L>\8B!mpe`Yn(Ra*:;VNh)h^-b=JF4^SneW3U&E*mPA^'-;A9j@!K&Sm;?tYV_Z`Yj=YgbY];%1[)Pp!)uVo8"@VAY!C+]%PHet3ctA>ti:bh1;J2Je]V_SE=[d7:#mOhI08rR;+(cE"s4F1Lpg]c&g\H_.j^Uc.VY=Kjn/_)XE7oZ("P?FQ;)s48\Ub.-n+pu:%SCZD,mC]7HA(MtG*5fbX^LK24+5!;@=&5Vsa">sF\IgYn!s62c*f)T'S:cW`GU-`j6YA.'_tf]9b%be`n+m;/Db"F95rh"?T.S=j%S'*2g2N%CRe\$#2(5d@]l4hu[k9f/r7Z#MI!c61Z>,+\g4+jqfC1BUp1'OSg;+-:+gEUV1PImCKDM<PNRW$gV-[UNW^p0L?ahS[X%d!;Z@TXi)->3!_IE;pb-^p!@l<"ND7S6kdo,L3(*T)1jYn;(O"QKsSKN8qm@ciu51.k1@-Cpc9`hHb_N)e*Xic:o]*'_lmdNgQ)O%j=8KC9rO2XF!ZH8_mm9^k4K.&"':(j=NR.XN--hK/<g&sH+bj6E]5M*&U6C4O%[/$oq6rMc1WPlODT,HEA`ihTXcp9*4s6,\YPgg%EDc7==V>8f!AeU59?<fCr_)$@^aJUlRunMfHNOaI_iOU9qDA>!oZ*-*!j%J]e/1;0<\CD7,EHH[/#o.W"$jrP&I].78E7cIg--O]%7Gh5q0a':gk0hnV%ZTi,BgdV9)Gh$Pa[Rs]T;%2h>gh%G`>5Ep4'ZU:rXSB66ij9MnB-CI;<X3?NpgV=Nl:=US(p`fK">+=]+:O(%cdkKYR1ErqP?/B7ac6$aou'p-n(oG)pE/jPbo<kY-Tp$cDth4(rmZ_;osaBPo2!$oH]S4#DK()d\@lt=hbHAGakU0JDJhu=(TC3u%>bBfsDJsP3GjG9dBo.F&6-/5E#sp"rAOj1o95E'XHK4A$o+:Q8WM)pl6p2aGi8)M#HcY%ba.F@-\&\EK6h#s(E9Coi\g3nm0=Qte%X\8;CqfM.=h)T&=3,nW;hQ:#WM$nUpDZ5ijfNZu&'0#d5j1]Z\5B5_%?2g>:_'^%U:G*Z3\!*:UpX9TJFt<T'gBX3DCk4TFn/*Ir%.?QL\ZeP-Nc273pIWM.=k=.bYr:PGcVlT]@(4U@>hjs92hS?8NE:7;lq]h_X0"504X[dL!4+6+$h>1ZkhV0ELhQ9k(k<FFTCYnrb%[iXn<YC#RMhtkZkptE3+q5jo%M77t]1Ut+cHue,3:uq5@7KU,C4rRft\KTiTR:171,8&k9%(14/eB$ZQh[-EX%&>&3l54,<chQkm%MDJ]MK#r#ERO\NKXK.(+pNaDdclDm-0P,h1qpcrbA,6URpogRETAc`P$9r+N9=V]i?P(K^=bE.Xlg!,r8Xj;^(m.M$/P-dcqr7-U%[]<CXT)_Mm)`3g:m'R`RS6X3sGg`U_\hpi<KLn`9Djs3^kA.\A,=+ife2B!N#h/!WDiPC#m3#)@>LkZ(_K.a1r%>k=Hs:;I\H$0G%I;.!!o_*3A#.Jf4S,:41CB>!15b)XeU1joA,2coP+%?Kle(cpM*$&]^'%7c'c6`,<a<[=APXR4IdX=fZ_KR#iL:DF=OF*pF-YJ[O%ZKPm&!UPK0\=WX;q+PGk(sWM.UdfB>JAMl-@^Spqo3\GH"E&C,a0aeBMf<cSXoKGsnOa6M#0Ae@RXB3oU[TsPK@7&te.AL5$AfPI%LX'D?L^,dT4+lq=C:d"mA:eI80,7FH%]htJ*oK$WJ2tr.I+oNX()2N7q4h=-ZAfpLWto,H;81YCC::E@+KNT<Cs,9kJL`Un#1c`i%#h3U-Tc3B4/CiVb3@3KK=ji`ESk))g//T)u<TU\IL&3W-;q"6,<k,J@aUXI;d"o`pUB+kNCcF<#5RA$FJGfgQA%s_oD[5S([A'Ui%NqG?KJZY,@d_U(o)gQ<Pq&75#7n`8"=l$a9A;"+7aK(.5T+0tYj&g?^V@bNsL,2qX"(:84%"_jSH5/C;lUlV0mQ9S2@:(8#o4AO2%A@K5-=`8NC]C#HYSc+aNi:agn4^2gMU"^7HrcGb8$#bmK:JTNrPPET_qt>D50sf[UQV]IBg<tsT%`4)p0b<\[lWC4i,P%Q9b!9[r%PAqeV,GPd#Bf%ZD=SSufmC.=o-5;HAJK>\tHIUU"XuQ`!X/Pt9[*@B^_O&U"bO+#p?%r#'p3(T9mfT3K)5$7K[l`!nY'%@oh=$&i%m$i3'm-S,,^MeIIHrRrLm$X2W"`C?>=!j4MA3efU:A8T+</H@!!X@V'?Ed24"ihEJ1Z8o,VEMdB51a1\)^?&@%ahu]FQ[8l\R^&>%b8]@:Qio;E&MJqc^,`-ph+]'ad\9Op_1`Fi,ShH@-'EER\9`#O0XbNA:gBqpO"GR[ct.CXT*Wa)had%`4fV5eP9N./h8KS,9uI`$%@u]fC7@)kF[3M8#'*B4\RU92_';]0UOH=FHbW*Jk8geWDj/VA_*Q.,B#C.SH+_*M3Bbg3N7ftc%otG3$m9mneaYgcL/WAs+]:1h'%/^CJ[s7Hf2jQ.G<(nAjY)-IAj;qcqJ#`N[\QHhhLP5.o4/nS'g7Wm@V[l5KTAk#%U%)(fO97BQGW=V`Edh[0/FbioS#>nFRqRoqM%*YmkPO@a4t46I>d\Z%!]<E]O1c=:]27E#6\&uj3h)+AZsAI%_#f7u67B&5Rp[nbnaqfqREhR]QX%d^m8Hg;O+]$R([gNTgr]bCFF%_uG$C\@k@ZG3-6IT"JB>mdE64*QshD6YDQ50FH,!Z9LM>@^q`;:9sp^Iki<W-gt[]rGGKf/t^IUg?l2Y?,62mrH;\\ha0N[DJlq\%gJ.$u%IYM5E9*490;oT0*s%hSpK$>ilpR??.&^t`T#*3!T)&HNKuMPoM?EQYRi'*E/AoNO&g"*Z0';+fTQGjCn)79T1Ig^#Y!]CS%_M+Oj"%Y(EKR1!i<>KYmbHX[&2@aW?391Kt"O[Q3?@8((<gMhQ8'R"'mflha!=&W>B;Xd@"S#PjLa@eo`*lAp#B+k&0mG`&SG=jr%0P<[)dH8g24L9e<^H0Vl6P[#4DVVXj$%ICQ(26@7GU7D9=l*dQ"=&j6Tm.#[g`OtdhJQ3A88B(>cP.,VoEh`/aU9)Bi90Sbi$SGL%f^qJo"Z78hkBL1ME,=t!#XpqceP47t\E:;:4j8"0C^5jYK,H\M)i.G+!EG:EaV3tpW!DWJh+Se+M.R\D%)$J'%tNK$$F6O>c85=p%a;/&c%Bd=9[m/Pu&G$ia>N2*TW7M"6pL4hhVQFrO&i/qeB=rD(A4G>3e[BYZJf[LQSql!^:6?G"TdAb\CEAq_$8%L'#ZmLHh2h/i%CbCbr9;)'jM[o`gbMGTCWUg\/E.*R97^F4\Jr>(K#+6"e@OcZ%<m<>,TFg?bSqQ-A`K0a9@:BbgY0t50%--At7i9A-h1g0M/<?:n%pO+W85_MD^UWl0;')&IgS<so9HG73Q!bOPQT9&(YnOpqR)X@n&bWTq'n`Po$"M7B)nu,"J2Z+ld<`Ln6jr-Xi]I7*H<OZUDrbcIU%/Vm,Im"I[OK-%#S(kIkG%E["*Mb":B)q6K0.QM2P*f"$raPpjG*McKR'/QC[l-ZYG@ZYJ*=EQ[07'3jZ8R45o%[jC;-m$#XiB.$$%8,gcc3u63#KbS^ek2Q?-qD@G-7/QG:,LZD9_H93M7i$0@(g:HJ4=HUQjf/j&'bcHu(W\*LlsX(c+i@cOa@WWsisf2Q5[\/BFhAU"%BZ<KhSQi#fcG@5;`UDUU5="c-r21;0U@.c\1WCS&5pO)q*fDeMX'P;n@Yqi\X*q;]=1qqWDqqc(=L[!OVql(g8/hTsNa+Jjk-32K%rn:d,hsff8FqrX(7JW!)=:LCN:1(&"%6]Z_.IeebGt3jkdN<+_p0TSuna\jl&"fGZ^#3TC*oS,OcRNl)gPaa[D`#dFcj1fodps@4%Tb>^0Gl9Yr"&u?#0>*JH*TkCl7jB9NI!mo3f37k2)Z<CU#'`EB*J>9/R\8>L^il@MOf),;g%1C)Ps(VuM]phic>[.R$rgKL\Qf#u%=2AmHJfc]c!$lFDT\.p<qhBZWg[P-/&m-Emh/t^<*a`G"_K2e,)Hiu)LCJL;$R;2.4mYs6&,tgbE"+jX/:0NE-=*OI=4dtpIcFf(%WudSj*n2^_E8P"df$bF2WEq5VpSF!2rD$C^&,ak!MHctT*Tf,/4)Sl7H/%A3,B?7S+H->2n^,0]_6LBUL;nLrd!0dfNds`nMpW>X%d`Ztmo@bl0=pWa]+Bg*-'<Jf84#Pa.[#sAW!gA!ogF@KFfR\()<?3)>+*F3.oUh4]i3.Qg@_=nrLYo*WRXabWIMVB;"diUWT(^_(%n`N^Y'!DL?AFiVo(]=+Q^Pg,X7aa"k.crFm,kLj6GCeD.Mc*9"0dp1Ce=^@Q;jHG-FVh?:X7%IK0Wp<KOLhQ5hO+>8bJAjhCHTk+%)%(D01N*lti<o:[_j"?V!;/m5M<q-#DD<U<*b*Orf;CEf!$d+Bhd5%*6FW``mGeg"TUChTZXaUPQ6<\QPM7J9Y<DnT#gPM8<E*u7%P260@#'Z^*l)-G![.1kRU?ErFc`FTc@RNU!XB4>QIX@Y*L:GE9WPRuO!3oh`=T!p<@)jA7!PVm3]c$""62Yo47I<i2s0'Gq?9,_^%DCVe><mU%"1e]"KEgsc2e11XI^usiir](p9]eSOd50q!1=!<@8N(>Gd(R\\p"5qK#]_kK8YX`j!1^5!=6XPRpo/AMQ8%Xf;q.ldd%C\t>k);.9Tq;ZX07HkW5`1L389B#$G.0L!%`hNe9=hMTjgMIg(97YEb3p:EH54;p-X;pk?$ZI1.gL1O="t8+A7F_2i[b)HlERLoB%S\DsMbO7-s:/mlg)mpFQ/\Kdjbp"ablY=KV;G!UPj-n>Jj;gCF9I:H&>WoLloQ0Qabj=S5Rf,SGgbOZA]-aD5jJiaU/q<8.8Ca'9%36g<hf1u+E]fjV@)`ZGhju;s;kXY74>o+U.;\O:cC63o>+E4!;Kn1%l*FAX`#Yr6u4eYI,6i3!d0eebmo6+CGGPt87HT^&Ig,I5T%DXF8$p&Imo!C#6PRX&Y51c>Q\C82kH7KXEQ3K.li2:qpl@^H8,O"(;h'%Ucip!DdCFbAWT+r7dV'ked/$@o2q)6)WUa`==kUe8<P%,JsMHO4D-$?MoI1/+OB;(_M7(`,qE"l]]PTO6m93m*&a<OT<%^*.g1X"7R:!-:VWfOU!e@i6CmJSB%.pGU6DKdAf\IH\>&?N_TiW%[c>CJ72Nrlp!Aa'\pC1SUK!m;j`SD?b96C<Y3EUp4r`f'B8g4GV_%Tkb]kRAJQZNuPjl6[VSR8p%![FgkR69U/m&H-8-2Q2JIAHC%%A(3b1uL\bCcAN-T$WN@Xn-3@7KYq%husr_(Q:U#70D;GA''ZCk6)@I52+r\a,.Yd;_s&?:q1V?";n([co`7#b'05`QgoI`35>3`%FIiTUY=-uk?3It]A`Wt(/$K<d.QCi=qg9mCG''<e&tPl#\0(LfhlmlPO'$tJTQq^/HUZqPjoB_.&c?$G7$20B<2el@f-*h81p@ZE%IB;5Z11#U/**.TOlF#N9.t9eK+8"rUkD-MkOd[-RO3s(ri]4U5:,O9Mrk'Q9CldC*A(D^mbH\(@(.9tQb5".=5;p=sdd&&C56/hO%+)XWH3tFBYm7';X8W:6?cSm+Jh7;7G1MUW^1s4bYIeBMUFg8m(T4BQa20u4XmMjl.]Nfp"@6D",s1Tk$Zom.uH6Vin?)Rt4hs0\I%n7WY9"S_Q_D1u0[G'`1O(-WR5Yd+AplBCQ41brV9Hl.JkepZ[2c<X(/]DTj-U!40gpPufL;A_c%7b=?gNshSsU>5NW3@`>2&\FWS%Gr"(W"?A$+NHauU4`')-3j56Z.E9(0phOVXY(\U[5.uKF"7;N8m<Se0Agq*1i,g\0Yt*'QD?2[?.P]1]F8:_9+C8Zrn9kFKrEMXI%X\iEt/4"#Ve;Ept.^?o_&TrdN:>]G#&Z.@cRt9/-Cq0(i&e[bf<8A[<J?s,`I")J+F]/V`iuMa`:"eYfQm5An4#U#*(7ur$e0n#u%#a'GJ^tR'7b*[V/L6&jIjV:7",<l'jBDfM-oiDU8G)V:+@m3'S(d#/9!5d-g'hfB]+(iGh78QXel?J^.;OSrm@"($E?HNdYeh?hJ%%r&_7;pq;OE[LcA,Q0Z!#ch7OU8Z?/4s5)(<0O]b[]2W+=D0Tm*[.l%E.cc&.RD4aA]N:*Y91Yj<S^_A$@&JkXFZ1R\K;1VjZnpW%%p9ST<d6KQ*:*ggpDElh[\+o4)AetsZjR()haalcn&1?>gZ51H5sA0_?$/=M`YH(hW<Wp$\5\9H=bVTagtqPBr'67J/?bV\no-kJ%@%rsc6te_3V0pobA<+4=C#d5Wf^;s1mB.CJ>r[cpkg5sr2jlZrEsTl-"5+;S!mem=[ChN#;>I!%G3=/<DNft,d6`g7GTMSX[>r2_%NUZ>!E8!gW<@#dY?XnQScQ=2`rd<U]Ntt@'K?cjDS9DqgPqteMh8XlTSG#Ri1.ru8a2a1Y^P\Kcb*\5:ZI_sG4-82TWaP;!&7]:X%7/(8RL53/@ElG/F05`X8\75CLIVfn8MV8&fd_G53guNb9KgMG->J.0JiDF&l%qQ?VQ[aq?C<fI'[Y?j`e37j'q"kRt/+=+gWACt(%pT99AX&IWO.hl^.Z&iud"cqrt*`-mmqVnDN+U@iJ>LsU/Z[c^VpeL^mQUS9tl&7W'b-<\f$*B7R-U=KiRN7fZgD`DZK-s824$OT8%cm<V8U^php-.72m36^a`(UF?ifM-6'T:3HU\,3U@E`Ap;U\!37HLEM!MM+qZ1uL*k]#b:r#r?lcle?1We,a<++qHo22O6co3>/_g%qX<ZbIqghc0CnrH=;Ae)mE9W31[d#Q^4c)i)W(2tAqHmfrp$mB6]`aW6a7k#GVcP0>]rS&Dqqf6gF>!GeFNg(()J8K:H]1D5Vjhm%rVP2s+&@Z0T&$CP.=/$.S0DS-5+T):9,$HfkgjPB[\:fN6mfe2RZbt;lf1)_F+fB%p]S8D#=)($ZQ8t?<ejOu52,,F4Qa`\F)2Ze%oWu;r)7[#f.k3gXPL8e"kM,U"?5D"UL[/H=8;V[S>p%;pq+fg$(SIX=(%muH[UtQsYgoa@d+4YASM+hgdFYA,=nNA78MeLOaJocQ%3+H*AUkco5_(g!J4$u--fct6am%E!OR*e/1.b"D(,=ll-E%>n-,J($u\55KLDmtsuBnP#?kJO+]i@Hrq4Zle%rA(Y@7?"Ohalle7%=jHl4?!F_Aou<Tg+kj2:G<&/O`&Dt)$]L^rNFjidn0_:n\j[.r(/2_DEfXa%\GEPkJ&u(_EE6kmFFX>[$;b)WK/n)UCLU^-fI5Yp%go<(=cDfo=i#@Cdd710)WYelR1Kd^[JW3'p=-34JY601>K2GbQZu+<LHntCEE_FGG?H:5Q:P)kIG>(BeJSBJNKi!kjX2Q!VpqZ]>%RT"mPj;suO0OpA1)+hRBAFr[h%1T\m@'84kD;g"6fkq1)Si\hVq>@hl?;=r;0[C'nAJ_:nk6gE'+4H)T_^VY\dr4u?r':H=ej!1(%_MK6PppQ^"-6MBZB6.7]CM^*,X(D=16/_`/5/k9cr3q0keZ2!DYXScgrJ/.`HOgBqM7\H>Me<l4N]%<gj&p@4J_FQW:1m'd%u#AS%>^I65V'4O*k1AQ>[O:m&*em>SaEg0PD!WFu('1g8K@hL*e"'3,daZ..RqFbG.1n]i7tHG=UP"d/c[-1X5,,iCm.R0PlJ,^VZq2fd%DlFe0:t+hJ!7Q)r?h3-e3$kMkjiKV+njj+Q]V!E\Q^d[XJCK=`W>R0@Q'A;_Q3.'G1,WG[\jEcZ[8bFi7=C[XpM+7'Q"'FYrG@H"%m#jTfaXr?BUFT@qL41;plWDiN(pCuADA?p4&d^)$e^SFkj4UM)P2/,FY:mF<(9;>kGukF$mP;*M2j@/0@0m;*0-b[W"k8M*Rq?`$%MI/mHk6)VZF@;i)@:6p]^/Pr;S1$Z4UiahT+FFU,FX;W)\LRke;e4MXc[-<u_Di3OKH"!4ko\No.hlIQE6Z&eRcnZ7brqV$X%*LV%KTk1%ep[',D#0NO"\k>8/QXX.`NfiS3&pb#V*;[]*TajGNbT8Z0D(Q>m%)TRDftM6GdNPU%tn?R$o.f=b*G_ZIPTSL&p(+>lf@p!%+NN1!e)q`*T$GT@D`rq\m6DgTia,$E<[F<(KBDr3X!Jo:ku\,]+QT(E2(gL7A(cDW?ru$6CS:lG@i(;(C@V'jfldnC_V/"VP0_5.%K-bf3TM=VAFn0r&HQtr0oVG*e!5@Eq"Id?GVr<ck#M>4.KdXMB("+och#kpNXrZ#!T8D#H=\=nN.BJ/p@]7g22H<gDAAMS\19n5%%d-YrV/_CV.'1#KD#h*`VdLDVr*FgiFQ,_mR`k"QD<:&S:Ahr':9?+h+BS8pU,'h>tS/li1j4V*2iASVdCRmP'3<Q7Vae"cGSLWTi%Y4.-MUrUCF'enQ=oi)FBVV!WBdV%.L>":`8]gAPr-$^QU.!8B&m@,h^=`t9&An.oJUnsEs!'"O>[4YT0kjQYNmoJn"g-7&i2kd/l%6\I@#d,topO<lae[jJZpQU''=J$(@9Q*`J'o%F!+B-,3fimeee=?4<GM2pbMO9;ruIg5*O.r9hs_psuS54tiJN`N]NL$/3*-uUL`%l`hqa)1n>252LbqVp'$,>r^^F7'rj[.](Z-d;Zrr$mq>pXc^pmght.3phtZRj.HAF=$Q]P=$Q]/f<8V+a7oKJ5Q'9N5@!24s7Ph&%s7ak=l9G7<qsT"/(Ou"6hu)"Xi=Q$YTE"]X^\Qu0^\lc'J+:_>rm=OA].`\-^]")^^])d@r:]<'s0oc>N[Ok_Dgq<DT7*\Grr.+K%ro,lOs7$mi]6X%0^3k>cEBZVRq*4iN_^3'Eroqh#lre8ddiWi6K5Q2.BE.)V^OCX]S%*aX,^/;lD;(JXl!sU?o%W(#foM24os[^-%J,@ums8)2ur8m\1rp$]dlIWf3ZeiWuJ+24]^\R]/^O6"NVn[WWb?t8BrWg)mRm6anJ,?8gJ%A:&qYOVf8%a[S+8],(55P6P55.6Z%c^V/:s38l>qfe+#o$tJShu)k;GMrMtq4l4'^\RP@m.l,I0Cl14J+r&;J+Vi`2>*T=llUK;J+@:q;`s31:GM_oRs4k(pts^Vr;Zdr%=9$<i=VE]B\D)LZZMt@5O8X2"BDCFKoDOFds&e8T+/e/Z5Bu3Qps7M%"9#'3R+LBu=Z?>J7X?^n^2W[fSdD0`s-[2=ms"cKmE<BE%qJ*52p&F&6rui2qh>2Nkm<R0d3V(gr?NVbQB4(Eu2G8Mm`CDQ\P8D@(^&"rhIbM.!s'*fcqu*m+m=0#_Cnq$30=rSa)>\:c+7?T9%[k]$hdf(maMduXV\"gu@oBFoPs1)Y6I%Gc?X7\]d=3i7l+.AgFXe/m?nco8MrV-!S^O*/pinll0s-LLtYJ:(uJ,\D>s8'dnr54Tp%%q#=F+9!4'Dn=fDP,o%@2kYN%%E>_Zo3f@aB0_!`?ndf7+Mc/FP2+mZr&E;W@`T^m<)kDN>#4Vcm=*>Ak#GI-&K)/u&NT`"U]'fJ%p7h:uDIWE!FEh9"Z+P:(H#qBa7DtD)'BadQH9GIaNpkG2@sReS3]HT50sM/3_Z*CPKFuo*%34Erd7##J-$<\k\DaI@S,MmfIdQhi%8%l7p.i8`&gMQ$!`pS[#bO!:,B>(_Rd6'M&G&_VEDEo3!m-_43n)(e7SCm46T<u5dM1bN@`V$tnf&q;An53m+<DPEA^ahBIffRh+%%c/K(f4'6hc]S,=iW4W/*YZ+"I*43m\%?6a;bu+$>GVMp-ML$f@Sq]glq,gfTD&8u4MJPFCApF$6Ua#>UiP#;NU)e_bP"qSj/@1O%Qp+d+s+YBKs#N6XAO#JX:&bE8YQe&g0ag^dYYsk+]CW6"`;B7XH4udGB>()#Z\u0HhfD$adtc5enoLabbF32?g:c71M:U))Y?OiA%-?cS2DK!%4^+hj@=FSkV'57+%kk*BSaW7lRlCKeBqUE3hmc@%]?(?$Tnf?PWe!mZjA"c5>q/dI!LqT@(G2'X#G^%X@^3''ugAK.\%QWNS'ZeJ.*=P`;$>=B^YHTdbF?c?MCWMnF_!ffneeXJhdOR"$;GH/D>^UcTh^V9)0r9@PQ=`H`0<mq%a2Y!dVXAJYN85f(N%+Tgs%k-fI9<E=So3g<Cp*8NlX]4[J>(Ito)']T)%?IErTW7*iB53eY50^j1Ye*V=.F`MkBcmWl1#nXnT:1<"hYU:n(2KRE^3U3uT:B#tT%cVC/QH3rBT`mo*UJX;UFd">qKgGOnHYm`2<BqNtH+kqR!789W%T3ep3?_=b7kn3XTIkECWi9)E=CEV?fp=a9!00ecENk!S'?,[ZG%(SslUT3[t1o^(ngTmt&]o_uSP<;GIPHhae>:A:HT79L<=,!G%@G>$(a):DJIl"9qf^N=XZc\Tg#)Nt8e#[E9JeDM4-V8or7mlJIh%l`7<DbOJj<B17t%4>pJc9ZoZ[khXD/f36e4,N-%R2ZCLWr%A`[a_eM2IJH[$qYqlp[dpWUK>XGV\+2bm%p->4W"Pek$*9oiG5TDF%!rDIPW%7mtT[N8SJ,^$CNW714d(MD#q;9JUQf8i,-.0\=W>VOJ>\ecfg[*N<s$Sd`1n*=hZX:K5E!oV8^HAY)DuBnLlJH6P^#*tP%U^I*FLU;`;gHk+NK80&CSK[t1h]@e4?'GfYppp\C:TOH#pSN$*lg1XsW;=:)+)q,khqPcWm@:Q8n:'`=If@56p##2SA\3/.$KBF2%rCBHFa$":3WO'3)iOkl)RJ:JI?Iu["MmKJX7'HQ]?>ct08tK:Xh+X>DUMT^tM,*pacsBfFARRlhT6//=[IgZr8aj5HEI;kJFELJh%==`Z4\(A/Sf,MK+9/kS-H2Xpik6?pCRSr]hE/&E,g(uh@]oD?Af(I/4"Y.PuqRq^-9N`3>]CUD;QBXVK8&5a@eNX)l41XdL[SQc^%1pQuT\i7jZ`_<mY=i0aSYKQMa1tk.,rqWnBbf%^WX[Z[^S"j?XZ`B_M",_6>4i2`DA-G%!NG,J47k]DMeLoXh^8YDH@up3OmWN]+%;/(`N8"K6hVXYR9mAOWJ3'UZ=SH(ff)X[FgYNt6*=mr(JTXQa7<<iEDb'J']reWHV%Y!"YS?S4&BsS1O^>8]gH.-$^k2PIj/GJKa%F)og5QuFV*41d2tj3etlnQm3k1k4+.=4)5\%cDsnF/K+4Fn&Y5rfXNXj6,)a]6mZYF43N(=l(hH\@su&+?q@&Xk4Fhi:L(C]D/D$%@OUaAQ+Yl8X1r`0kmj:M.eWE,lD3#/;<ajVX)!'toIhn"WAo76>Ht:_3_dN[O6QYLEXQ2tcJT6R^rrr)d*U&+ld#Oh;IN.rS*TKF%VQQ)qgA*UN5=:igeYLgS't_$2]P@Iu!WK-WT6-QIFMiCWX_-j#m]&dSg57X%0%P3A(=Y#*4d>:35!!P)g(hefL"\[pGe<<r)rua_%LFj5W/J2ggN0n$l'6C!2Sc4PT_S$0&!P>IhGF%'tT[pT'R7gNKc-,5q:l-Bc&'_fM`5hTA`;9.(&!$LiZ[3eOm!bLppm5&V;,GM3%kLq[9YIH#(&30*Y=>\UH,1O`rhc5>?$XT%cPN"gDTq\R!f,#6?P&K\U7+(@CHP^pm@?!\2VOd#;nM=2%1:K=%gmmA5>[5hIeBM^p%b'>A%0+,2f9kWC=_(r$5-&Ylj3aYXPs)D4G8t%lblT2W\;,KkAQs)\P/o8J&&G$,@b=ne;&D#j:R!Y4+;RE!K*=&=al,<,L',qs"%H(=tK2q4!NnHtY"DXPXTaf2>>$KT$@HXO,9\RPLoLSa4']t=aZP-@*\B>:SR*,o#A:J@V7%kK-]94bZ/mdXHKnu+n?_4k0]cZ9?<%&Umh6XrrA*%(1c=.h8/uE%B)9k#kpZ(H]/sBt9Rg](,Blf0$aF*YOgMl281PqJKH@md77pd>Q9U4NZ@XC0sp]cc9[sQDuQm-$/u7%^U+N2lOeHZ4k#*4XGZ@::R8%sX2@`'?'1ZY-*>lr4l4,`k>dO)dY'ksf?p+nY07dPUcH?7(O`&p'(='TWoIWs\[tqP6X7--O19"U%QNifgMM2h?@LTS'])#EH#%Fk*q:Q45gK,+f!Z(+;Id2%0f+bVk=V@Q_UL(QG]=bX;IX^t]\p1Plf47\2M.5eM_kl"PC3cE\:hrra%bd_G.l0ZdD.4P]=7ouV2J#g_%Ma(rb0:m=],P&%]J)o`Qod4=QlJDmM#KOeuO,f,/4$<LWW:?kTk6C^cIlghXfW8:%f"pd7fTcB;%Z&H1\E/Qs8>CZW7#rgR_IUK8cX5V'DnDqiT<Tj"jhGa:6C:\Kd0DgC:QM=&D3P,.dB^*RgFo9X2:;pj-L[Fb0BD(J'qdTT/j0]u4%hEH:pGiaC$pr(ua2X[-mDDn@Nep"iWF6B17=5i6:gtSLfhg`9-AH-o-=^H@7"cqNC4S58Yn#^I)9Xi>lm_*sp[.2U*=>dj>$]j16%^F*Z3hZ'!Kr;G6mjMFK0H?/QFoZQ<i\$\.T]@2J=+E5^">Nt4clJn@Je]R?P^Nq\_qL2l?]).pHj'RGXGM&BBkh"F!70BH]FXOrK%Cj7b:;]G?rA(h]5/pELrn&`86n*nZj$^e_^%6^^l\'oWTh=#a)87"@#_;6_c6r]Xl:Ohr-^7CgKcWlp)2g2!Vl-?d2q55p4jE=sS%Hh'JLot%>CUVZW8]rSG.^N[C4rn]/>o^S"3chrbiNAdYTc$$fkT6JHsh77`L]_o=Md79C-](bn/G)I8U9Qu]0O(VKpf"\jG)XG8X%PMf;0UZ(\;qbMfF`Jk',T:@KGrY79t4#o7NWNFY5If+*OF]"pZf)(LI-&kCgVK_d+4Y(7]echN@iG@EKr1S(]Vm_q`c9+=/IO]*>%oC];^82[t?1Qu$As'bBUPT"C4_j3FAbc^4skF;5*2)[MI^T,O3_;eV_$d`R+ST"/TpIAFVNAdZ5g$n"G<0*J"B_87prPA,T8Y]K;%dFCqO(H0uqp<BL)Oi-gNFXO]uEc>=>kbG-1mS*PO;q,LDp4k^m2uD[Z[p5]T$>lV0&)S+^PudS7TA.\3EML@d(ME'qUYWeL:2O:6%e%t@0[uKXHYrZ+@B.ljrIIQMrHb6B,[^5r+hWJ.=cjES<l]9?`q==M+1`G94)XYgd+8W"bK;I7+UZ%j:]m&8qk1B4,9V\4]S_!D^%LK:)$q7a-%SH"Fu[3n7;UJC.GB=kOujONDej'8A3MJDjsoB,&W??)_nB0O(H2Qo2rNUFLNj3gD$gVM'`:9gOuIL2P=chHQo)SPP*%[C3igKoPL^]sCt=lE$dnhmZrGs"8*Z\[2<aB!o.r<][QO48J_E@A=p2p)a97QAtRtZe:-.ar3Ea4tf,!?JOc1kO$#2:Zc;,UQ'!8%m'l#S=/CnJY?];a-u&>>'Bf8eB0gO4D\f2gdl6m6h@%C#_uDPtg?@&&p\Eq17NY?"Fuij>kLeu"2%!h*>j77BFC?YEF97H)r5j#V%>PDl>20tk>k8O;?(ghHb;)mrUG;:D6gP+0b\aF<DZ\s75nFc\?kr37YhEdo4]D7S,^:nSdUV/#_3CZ!qgco>Dn\4Zs?Jm7Z)8o`l%F7[9b2VRM1L!u5AmFh77)Vr!LT;dm<QTfGb:Y_:0\OIOe;t")+B*R<Zq9Wlu7_R[/Upo2B_+(!0Om`*Rs8'+mBHA(?0q"Zj:1nW6%T;fGhIF?*1QTkF`J'\/[T0-I1r=q`/l\hKE2<S?&IF'GAg=^jq\u:,7l]VKU:NsP:?haHMHgBMb6UR,-^RtKb.KB(kjMe<[?\A5M%qeP)J3H&f]s!n%pD]b0tQN$`-F04Y-2.Or/GLpb*^[C_04aj8G+7un[&+Lb?ldn7e3W$SBDs`MVs8MQfmer#MUT_!=^[D$VYeTnX%f]VbI6M]6jc=c%!s8%.%pf-mdT!@b!^:-bML?!])[J\WaJ*Ep0f>l..+"CmH>t]gCr7BQ$rcS%?DuQh#XI-8X#<17iV-d"^=BH+,%YD8\HYP2D+T'KaE]6uInkrB]Lg#$_(V'mo,1b`Grmu/ak5cJO?O)BJ0]t.+CkNL`jqWl1[-Up#p55+dM`jr^q[f#.F`kD)(]o=BI%Hgd/paTo<EfCnX]jke5Xeu,]UVcJ;".dkQKp8emQDu&binJj+>e0a\V-gu*H=D,dGH+^c-Z577:@O>.Eq(kkAMb@N^W95.&L:d@5%\XIN(++Ll@@g'9mcUUE`JnB$"A&Z\H>hLN>3[KbTpJB33<mp3J=5,.FA!sSsD;G!KNM<"Cg*l5H^N?7*(Ud2jOrd?Cafu%spZ2PH%L7W)NoYH0,@X:oJ2i[[%7`4+3rEiZP9K%eBr2mWZWNDq-BqlsP(H"fg&nlq@s8OJc.o,SB7AJW3U[glOqA8^iTA)sd;]M&[qQ=:R%?bbALC/jdZPUWo=H67WD1k.)+EG>FBEijB]\s&idZBELoq3>SMC*Z["EXN`U6,6hE_R5QTWu7?HCR/*t[m.!A1JaP(3&*VCXJP^B%`Q^jATCo&VFec#gb7n@QUs'@u)U8Zd&cB%fG(WM(3QIS]q%(+,cNhNMDWc-E/->!.?Z/eZ\Udd\+_?21CsRA=:/BXEYT\oNAo6>/%KqXu3s)=*ZD2gThesKeCh;4h)gbZ8m0A3UB+#&:")t),PR2n)7T'Z%5k-Y!2iiDBMQa1cOmaP:HZr>HnGO^<tM#[8pD(_hqDo@l)%RGE7i/0kso:B*?NZsiXmU@J'R+22PkO0>733G8S/VJ<1SdcX-"e*-=9>tf+8h93s_WkEjVqlf_-h4JqL%@XAub.?aXCM`^ai5p:a%m;@C=D@aLgZ6qErXG>%tAj/$>LRm55MffnXk'sNm^XV?RA5gWEQ=2u$H8`O@c=^;+AtJZ$_gMjW@B$G[2%CB`R0b]UcEa&8DY!l:%Ac6\ZM7W?N$ruHeF*KbK]`$BTRCh.8\bj,*ICid3=j4<IW06Of"[cL_)J*U/$4ZFFb1g!MVY\?g"/;Kp3PI3^Q62A5$ial:jTDpe%"h]9Tlc.?n#:+K`-E2',V].D8m.1JWT6I-TjSX+t%W^$mcH;h-VWsCPRoPs?nZ-4an<H6"48Hm#qjbA;Wj5O&CJ;?1;qh[_]%\-p%mY^mfm+kk!04)i`Z[43\oH2$Ul&qcK>9$?X:/rsF3;;<%6ZaCrDtS*9=kQ`Oh>=G3f<8\6Y2nA&RX4(\DV4(.f*dZ:V6Gh'+ZY[a%dOrZ8+=XBMlT*dEkL]\W;k'uTALNsD'L#<=e]/:s?t6dfqEjA[hi8mD$/4:FS@WOBk2jE`hPKpFq-!OCoV[F7[r"RFr[tm0B5!U_%O7+XB=)a6l=)\&!O.E0N7.Rq]$(]s\.]Q+_0LJo"5iBaaKk%*\CjA-qCeS>McM2"q*TrB,j.%iRPX2<Zg"9^Kq\@^i43m*7dH2k*%1&#hXe*1^Z\umM[bf>$*->SFh%4,Bu;rt3Rlkr"p<VE$>+&Yt5qq/d=knVJQT.b>"k<WtH,<Ihb;M+"J+!#g/W@S_jL+nq269:G)%;VDl=Oa8K`Xs6CL='[7#h;LDXP:a$a"g[6_3>k)]H-PhlWjf*@R-YEm6`00XFRk-UM-JL(A9O`#;W#]bFj\r^h-[j()CRCVr:SjF%ecdg&&c3t$ODir>q(oa`9??o6G%tOl^teK4apQ$ib"B_+Rscu\^0a&fs2k9;=*6O3nV8Q`o\TaGjSZ/4OlW.`.CO^hSk\>ESGDcU%Lbk\W>bU.UU6EL_mgWu3KW/][QVCL7T#i/XYCBUH9id:mh&"leJc#2jRp3T&<Ef-)ldFmQXS&[E6;hAfnF*R)hQKlsl^25YXF-.s%i/9042,(<B0=(/\T:u4PAeGqa0KZpm"8>op/,<\#Ge4LQK3PBSdX]9,`=N,Ds7iF*FHPCWn.^48Qb+KrI:-6-Y0;?t[.WN`5t7Wq%c;'),7dag1%(*,[-VWPZbPe1-c-*1:?.]-Wh\^=9i]m7CE,W\*]6PjNb*)bRZnFOEGrns9,9##u*J?,RQ-njXk%45p/=GeGIK&<F%[$r#"PV$ZSUL3_cHNOL`/;fhrjU]$d0S#FtPP2B42nX@'R&C2kTS$!d6D?;@1-8WAG0i6K.*H?s#qr?brYobnX%@Nc<!PK&R..tk%pClks9L1]%A*[ga.nHaXV8`Z#Xf[:>)(U'h)j.=Og9XipPruV2(6>Lso>k]@&#q"X8D^I-d)sED8A-I^WN`ceVX)j/:VPf6^$N:*%Q"=k>LH7i0AoYKGSL&P;_^tn+<`;b!',jmt9RDZ7gemOWb2rpLKDg"A,shb2En6[O.=Nm[:U."jNe^+h7g!Q1Ng<t;meL.,nLWS]%F/]`Irif-4=BXsu/k=CR98P-PQ0h>,b0`Bq]o7@+MQ9e"dH].DeoQ%qB(Qn@B+,ahCDk%G/(KjFBUPof\+UTXao^Q:b:d"pOXtQr%R'F/hqJNUq*C&[%q??^kqr>8<h*(fjWJ2U&/XbR<3n;1(W6](LZL[>0C*q\ZpPP4FV_f/%oB+Z.6LEad\)GGS^X&mYWg<3=[QhE<%?W%97r]'0\Uej!bf$if.<*posga5j/A$]1qq!;-sq&#c7OmeEn/W[()XTKgD<.0;YcU.37-oh_Aqbu#:VH>2fP2fF,#+n([T7qD`%0j(gq9Nmk7++nqO[1o-b_k1C?:R-<7</\"/kNWrY1b<"<C4#MjV]g54WSf?*6t]pt)SblXGhAuT$Q%E,l$cu#@T8Bf',p.Z9)9j3%dLp*dmFsZYH<`%!es:EOWo*R9E;hoJ%@*KNgX$=VXXe"bNk!iI%i4Qn_bMdEYIZkc;J>4+Tn[ZebB9e98C`_#DHT_@q1IqAgTRCn%GAA0kNHtiYH8BJs*6N=SVsb^OZ^5!p;d"a_%`[^L$^D18]4p?UkH`h]XNZ+G)NTU5\6I.J>]MW^?--[DHs:<;V92Cu%.knqQh3'q%6JNneFfOSa./-^V[L6>r<a;_/AE)_1T3m&e)kXV5pRX#3elnQ6muJ![,Np&pj,'J1NhGEgU![B6W[$_8-]]R.Xu_0;03[k*0m(qX%FI6!<*&2P`NFjBu=Q:>`L9<RhNcV4Z*^eQ:W/RB"MAEit$sduYSVV\5.>FudJh@_S4$j@Hq5Z3$Y4B;IL`!^Wap>S[4h98i\NK6G%nP-F>g[>5O*XQqm[!ftI8aR6R[9fudhod_Knp%-OcHE%[8$3j_OLOit)[C+\H8kDmrS<d"1*,a^H^`KUVsA/`9f?&%SFQ9(_=k%s%cBGB1:k..8m"\SfI&*QLXDiRt"EhcZ[6..4q"<2'e3N32MD"!7*sYoN.d!]cA55X8%Bpl)j>EE6T,37'j?88'"Amq%'r4+T4'7ra%UY3/,BEqIY][R,oXfa/[a,6/e]8_4.^Su7RN$6hji3c:S:9[rVb[9hU!UhSRDU_]TWmqZ^W_gl=IcE:8bIV*+pBqR'>GXCVE'/Cr%+1bEMkq2Jn3SLJFA6LM%o[s$cifZd]m:!:Mm]t`_<>L`AdohOd0_j+0-94j_3H='(2c_W4:ZYZ,ePT]l$'ms-#)QXYj7mXY=*KW`%_(@SgrWP7KXH8Xh4-fJ]]L-A+Z,!!0pI[MYQ`f3AAM'8Q54E]3X4qn-B'&juMW5Wi'2rg*OEW`dQH=b5b0DIDOicH_$r^;s=8e\%%X<;-;mP@m`'f,D(qbnXH1LiG_Df>;E5'CQ*e+Z0U,il4V!d8MT[Ka#"ik_pDbCT2(79*kK.*Ns"NI9O[jO/M^;"r\A5C)Os<anbR%ffn]XWNYY'MdedH5)R6Z0ebJB?0?DX0dC8'E^QqTC:>rn4=ehoP6H]N%AJ8*)5U2EK9S>W*Aq<e17>ocVP?b(_#[Q64OF6\[Z+q]%aF`0l^RbsnMTn\SjZE;6OQN+6n@/K26WpQj)A0A[I[UctO+$=gf*Gh8]\L`SA']oen!&U\/^.`gM!d<")nf/@:2UFJYZs=5efn&J%-)=-AB,crU.')0'FK(Xp92DgMGoFsP;sKqQHru;#VFt'MN.4&T?d@j&GVL7tN.6=gC+?j9mM+A3PXU<hLs!SUgm8PkA!(J!_r0=<%&IfSD0<-TZNB3pA$ptullW>O,dYi,?n6m/;M+&a1OZGHcmqrmYBn=<]$1!?/'PQjd&3WU(jZC"ZW;4SR0->uGjMQ)rQ_mR=X!90J%1j<l:btuJi?Ja).e%[,F?BRmXbRQFf;$Vh6434>/:)M]`%d`Na5O"DD%N?aBXP=OM'.l0lY3sS\_lUk5EHT1qlP7Ch'f#$+8E#+h%:n4)$.-`+^c>m""fn,^C^#9L5@f9lnnSmT5rc,rqe]pB;;EUK=K&.G:oLNsah!cAbGDV)*o'=2dZ15iON>O6L1EN\R3/D>YnSg6)%fg`nOar*]3S@6=G,N;1Tn;?5ab-D//2]f,!(_J^0GdtC=<cY=KhNtMBY45u]OsE5>..rG@ad.'s,!XTJM&](`qq!'Jf-:r4W9FUK%Yb#*'Mn@d6E]kX;?stX3,*-uR9(c0H+r*<2K0>e\\?=U0<Y8)7mORm>G];,-L4If"_]09NXZc!H?4B7k6tM2$AiIC*)=H*N/(:F_%LASlP@D=XZo0#,P_AU'i.b!"q##+^>-,U)WQ0T;X+QR!l#k*rBL?b`M*M1NQ<U+1UQ'G^g%b)-^fc"K1;?C@@=KD8uX*=G/0=-UG%+l''faG$<4;Ve<U6)=/t;Ve<[ACUiq]7#0>>9?:IN?]Y?j&dL'5E70:p#DD`;Er`."'oBa&iQTZr\Vt>LP90-N+U_m)2V1u!pGF)%"0<gep4^@pq:LeV3jh?6fXId"UM$*jE4Hk`>pD9#%\[i/gF_k.$<KTu*()+oAtd<L_c?PXh),nl=qq63Rbg1A/o)Q0j`\+.BnU9,%!gu9`,4K<RN:9tqm'o-SKPFIdJPT[)7BqSK+@`OL,Vm$%%("e1c9,7P4@"C!qfFg5"u7ko0?,)7*-k=7B@jrZ+g\ilC[MIR3&IN(%a+L3qHo8'G40(63-SE$G-C:ml*_n?UJ)?c$HKK^L>^DNM:4`PRNdi)-)rpDW4n7EZ4iO>=?VE(i]N`GVi1lb*IC#RWEa;^qAHKY.%?$BI9S<o43K!A!p.qs"YfqYMO<P`Rt-+RA<N@m?aI_F"]^1F(EmX;UUpehmop:2[*mB>d\]:Z;$9#_e*Hf2Ut4=P(<Zmli,D(fCQ%b6>N6qq\\S0cpJ*qWIjS)/2:em@YZ?%OUsjH%_`pPrc*A)NF1@Is:.*0716H5_NE%-uX3Sn]-)mU\Gbon+-5JRT3/D[:W#Mm;tRo%:6me!q=NFiHYJ%dB%s<Q!<&`0@W)/9l"+K"9?M[t]t>gH8$/_us*W`%oO_KjiGZ-meBs+m:g]jV"As$4RH9*V=fH?*[euDd)D8L%%$!,gmflR2:`_[.?'qme&1KulG;ph.)X[g-\nnk)QKX+?aL#>$_q/$S`dX6h:jGLNZF/k2\-+TIF\;e<ge2?FRiOn!LFo;)N59a2,%-pZ>jGP=Vg#*)Klqc<KharSJ\n?%9<P@!"MPe'h/<>bX_>l?:cK3jipFEajGVCRP#/%"r/'MUNN*TkYpF@EHV\JZ>R1gSMU`1?[j%U?RP7=A:I/Ml%F\jPq8aZ*PhK325Yp@d0\*Hp#euoeV8[&kt=?M1!og])LeRg&es.bgCND2^@@BVCRO"X7kqk9/Kq:?s"&20L@U%%G',g2DEqN^4%.O4#rdjK8(/2q.@4n#%+0/cZ#kDWd`BgX7Dc%2oSt;fY%[d8$o>&"\tW<<JiABRN2A,*W`FN/:sj@eB5B-HF@EHV%,L4q,_6A7*mN,)(FH+`KEj;:=4%7V0.T!Bl;RRRVM?30dgK6LX,*+=EY3<<I-)GTNe!4XNj,Kod^)7f41gTAA1=g-MU<0(_KX""q%'hq/-m*ToD;Iobi^2RTdd/2BWDIsVKIU?p,_n.c.l)l@+kIiV+Ireg882lX_jlFaQ8f(u^YKh6(HB9.ZPkXI#p1IlCGf/n1bT5jq%(FT46o>-#Ibq8Fs`d=lk41/8f<*a4)b$UJSpsa*8/qF-Z9U<#BGoArlGn*d'WE/M2BU3q-jY/n?p[T47##u+QZ`[f+]6l=;Dl=T#%gkhONeKXf[ceS3,/m%@fGh?Zs$K&$,'M(0):@N`4jFW0TmP:HZ1Nuj&bZ%`EL3r'ce=n?5\f9ur1>nQ^P`uA9F>rbHGEoFO[4[MH%k%!H?P33/tdfB[&qJd;MP7MYmi7Al"8hZ)BJ;9-GJYC<tDahq.o"5sbpTS1X_O>,&k5l$=bm3Ng@C!jb--"<^M1?T`?`9J)CVQ!8%-9u(&iP6S'7Kra&j^7)21O\d]7u%1)6U!G.fhmO`JHP/>L3NL^jk.5>TW7O-6g\1iFkW*N4q;OJXr$mn2k.-'gpNaL)SKk7W+YaI%:?KZVA!rnY\&i0VE"1,GXK9.BRAifKaLT+?\c.f]e,(k3"bb%<ooLp%$^fVO027[+jllk#s%Z>Z\k#8qb(mPN))FbAXd$H'(MVm*%51KJ]G8/m)0BJI[HH6m2]B=&pfs4AkB(rs`4'dJP^G#'GSKf4H(FSGB[Yd>)]!p3hcPWqj:d$&<<_^!o4fp$;UcP1XR0@s$Pj7.M%\D`u-n>sDr]_1OrXD<BBKc&,DGCr"%lGjQ<]l5pk]@D+QiN=U"na"7lFQHl>)s*p/qXHu(0BM#X$o>;!<8'=s)>(dOUMbJ#82&a5%^%_B2s&QnS$[4J7RUc!=],K!a%h-PE(N]#3G8-[5)a_d-SQmZ.HlP/N<pd.H"P1._9;R3Ip%)Ec4el,c[+1W1)+QgP;N[_QJM&jb%Sr.<COru(r-hf:I*TPn4/ttpl3UHC%+^cOV@4"2*9<XkH'o"GCK]K5YQ><59a+ak0U-T9m[[4-)<&Q(9/CIm[$=g*+Z"RBg-*63W%SHlNC2o[ic4M@=g&]QY4&/00-Xfs;1+i\Zle%npW0XRu#'j7$kl"A&mlK94J%nYRnl0e3!A$J-#_`Y,'Ms<P$BRD]B=;5Pi\?:8F%%?Q6Xb:j0FI."8T%i.Mq7t9q=hkS@9H0%oLK4A/[97rj`<5*=:a+Mp3dCm!=/SIq:IMeq=3WJZD9-JTuf!dTKG^0(6ErQ$D#ik[i%:Nof\hoipa=oNLa/,AZ(ossF\[Ou.K@@Jj0LJ)fWSZM3&qp=0CrTbCODe@j7Rm"Lcm_%nS]>>BI.'kW3CjdstrH#EuU,OBX7ec=X%q%""ZK(-KQULNmPZ%(Ml@<nX&gRSGqBKc^jhOj$*CG%FQAJd;@h^W+8hEI4n#\HHQ(*6e0-k!m"J'U@X3.GEuIm+:E4SB;_pQnh4%W3c/6-Qd4SUXH$cQhQQa)Ek*Hk0@*YD7%djp#;S$Q@31d?ggE*b2*_8X;^?p#Iu_R47OW^!<&aH0Q0a.-&]s[\_!u]Xteb'HLlBe%7`isCiVBi?-?77X6Dl/8pi^Z.*hDY;[pEVnIe0_XX1ZSlEqdC]mP]m"12B%do.+0,V'`&p$V>XAcdTHXD5'Z,q8[Y#%.nSD(N!_0%h,.NkfmPQi]i8TY*>#/*s(o1""g,em)-q'&AgeJ&W^++Da/Za@V(L2a-TauR8k!<Liu&qNeJQG)X.i8361e&>'QDF"-\YjkbB-^#%-Q]Qdg.SL1eVlF/MLAuUm-8!K.`\\aD9PA^R<#N6*Z/2;#.ln(BVb*d<rK/EE*,I.5$48R0sgtj4I]j%7!l._,GJsD$$I8\2qQ/e%]fEB0R=%LZ$?4KOco<bfj2D4;/Qc/dQW>.(=>"?s5?HXk*T&sBk:fD)T1Y=<%&G1e=^uDn2W,L_hAC35mPCcj^-7%i198PuT:LH;%P?gP5Mg?6WqAfi:[g-MNW/sNT3q@QZJ#?@MJ;+IXqpN[E-/CT-_=lg:$U_j7%J?qr;4%'*fuD+'(M1&8J^SeO9,VfKQ^,UG$jF:.%<%'+a5a8D/eTgXaC_tmqO0TWqhDLV^rXb>(H:=_b]!eWEKBa8cLRYP7YrkA^ZM<SQN\`TW4e89YXPGD-X=mhg>WV5RrkVY'*X,Y)%#&mB[P*.;LHr7(4HQ=:;Y\jlBi;@eT!j!=Cf[,s8GDZI')Zs4>'sl>m[lQ6ol?k&8-Ng(Clc&qUN3Xn)N`n/f'j8ds6ikku!CRt(%mSSMf/sV2$R>@R973:KaI"Pd:)on_$R#.R7B5.^lFdGVoN)egYI?^qr7CFp8b#cm/`q_#i6f./.@up1pWUHI-PcsqkXDpDG=8@=,%#`nOf]9LXsP4]+>rX9&AVK`!E>&O=>^H:V5b.[+bk=Da177H.8IcJQ[<W/q)?#SI`n+tT*;]>I;5J?2ha:2/>Y29f$Tgj:Y:TdOo%X*trToF]sQWt&rTO1WfsorAk\90A#bIb1c2\DgN'17Q^rn+p%fA>>GVGOW4neO/Af4Sl[=eZ\i"IfZAA?,,Y*M,S5dGQ$k`<G+02%m9RJAO0eDE`)..[k?mm\'(!^.qN]%./W;&,/K!sk8aQpcFl)el<ct5ToI02)M:jL(]t:tu2gW^Fh;7fTXMl0)UV=cMmm9J!,urGN%NkfjM[iG3L^Zno!nFg]=n+nIg/:#cAjrkW(?,,[*8>?&;]^'3jQ9l0M;rstHqCPZ->a,.BL3NTr08;K=Hh;O\W\:pj@n#kUY$Y%n%Um9h-H]PAumI7pcpdWNfU#4lLbI`5R6@?I[Ncs<lIWaWk9"f*1r2sD3nQiopQYY^.n+u.e0UH'jKW)7$r%kjJdGOVt^2G>OJhaq(%[nun#hiR<sh9efhs#n)Yafs]'^H93N2j>q#P.dRh?,,?iilb>ec_tp:GPrrBU@_I#!KiGNht=&4L:*f)#,K#4(3?d.m-a?=(%b/3%l?Cj]:&0#3mMbg\gq/#8[Hq7]k<6OFWcd.lpdPXGB5ZE&Y$^>:Gdq/VJlho*bai):Y+KR-kZ,B4$[hnsrQ<'/`A/t!S_j%?G'$X=%kp*t/Q^P+m=8`Kt_VO0V^S1%\GC%lEL0clpGQ"OKoc)V3YiK*)C;DUIa6rr0?aX9DGa!B-GQ"OKorGS?))`VGi`/3a<fZsX?aW+;%Blra(n+p&!l<!:(WTFk?jVEsWkh6[G*:U+<p#/^]`HdeorQ5WU9L6nX;B?A+]"^k^MGKXZbEA52e#nljm.+<TV96/,_!sT-[^_SY%Bs!R.bPLg+?Y%5!Kf7sYb`#\!_OR!\eSt9:c=]lc`RqYjA81VND.@n`j4_OF5kf.qTu6SMVt8PF>Q+'Y@!6Se.Lme<<h-;6q<P`'%PMXI=X+c<F.r,NnO#p,R5.peVj(uHDnXZe(o;T(hmG!Z-]m0G"BuOjpSCX%Q-dJdg0!'u;pM_I$p(!^r3?S5]5'?R3Y'rJ0/bb=4%J+M[6oC9rmL@afWq+KmTYPH:#I(j^ar0VsmmJM5$IBM%E]en4&55Q+<]%7IaGA^K.?b5uLep]OU<cY5b4+CQ)_R`,kPHR0O9mcEs%d7eo]hYu^4X7reYb?GLii:-E`O1gfhlMZX)V1nYJ]/-L++17jI'+-_*e,Hqh'Xo.]"\Z/*KjemmPF]$ubL:CT?G.S'^X1CZj%JR\%0%.jqMr8I7#tTG>171.*Gk>Z`V/W_R117U&S0+qHhpP%7e"pP[G^'k:f?TR[BC#N:/SFt;okp[sHp"5r;A1&HIc9hf'"p^o`A*4=%Rt!#6\mMW_,'L.CZS>C8-(i`.2^0H;`<g*oD5HeuVI1J-^MVfdbF"pcq+QaMIJ*-ZjQt=B'Sb8S_#HO87l>K<Q^/_@a(\bsf/CD'%6^fHIcYB0b=INsuSgLgFcRuD*h.JB*If-paYrI0D27rJX3U!*%?Q7HuLN?g/!_jbi.!+06%Kd(4O*aO$3N\$C]D0]``Iu.")=uH2%^>O3d[NKrsB4mg2Ic7qG`.'D>J$(`"Uqc7Qc%jIMS,8h$YWlLn-i5i<lXr`2Y-YbZbaOQ@F&$@\=7d"RoC`E5oD?ZTrPR)QqZHZ2%[8urr>>=u.**1shl5s2irBW?V]eY?fSWbXD5@(L77kHZsohSdbp*Z$%!Ga:Y\ZiaF`kcJ1$i^+sZ3UF-i*kI5^fPi]WaL%!!K/MG%J)W!RkOU"E95aDQAq7=Y</@-NJUbCTOCu2pT2Y[N-a)$Mo)>Z2lSj%&3Cc]8Z[D84<YAS=G9<hS&)K.B'n7h*PK*74p@l+ilbB3s%2es5O]gQ[.'9:2"A[U-[ed9m@>IN)E.a<4l%pA9)a&X.-GeC?]m)+I25Lt>)05mGqIs1LIkfR-,1B1YKjLLIMB29VX-9JHZhYUo[%rK&OXgp5\s#`,j5$.uj::=^TnoZZi47oT:XoG:4#hE:a*((u*%ao28ueYD='1GF1>_)JU@RK9M>AH59upjt+QJ@X:(B7]&TJ-"H.%:pg2HjPnsYpB:sJs*h-)MiSB\BlCf6T$>]40btB]^f7#&5NmuL!%Pd%0^C:aAq=4)_qrtApF9$NO7/OEs(Z&Za3G[.jNj5YoM>8.%_)4q0.%F'\^X64-m;p""h*md6jg.ar-EGX/M^o1R4@/VoHr4DoJH^E!P';cY&,u&!>)@g]<oZ23qhg83+"mn#EA[>.Gl-be/`SB5%h1mAH$Tqd>_W-u-ZG-N>-/RN^s)J&)1rg,Go=`#;Md_qt/mB(Y]A"E>'3M_NDfS`J<jR#n,qdosI:b?2'Z`bg'cc&EO>sNC(G-j<%*_q&3>dd-1@FN'YNOR3to[O-[mOUm0N%0)EA5?1or9Ifjg+MRh?i=q'O,D8q*^8KZ+d3jrT6.dp"GR/R]ba#:iY1n1)dC/5>Qsmh%Y'6A7@ctRfQ0*$\380s+0?AXH4\X`<HZ=%<!WQmQCtW4#@#KA]E0GH':X9!90OrCEo5egDF0:,Z8!?10]?ZIGWl%n>-:c!UfHA!g%r89Ih_CIcMMZX=K0Q@1c-i=>C_P<+YT!Q(P32tdp#*GQC?\7E\YV%%0SLuQ05@:LaJ2F5ObaZJc_3\u$MKpqL0-1'p%qrr,oUB/b%lg&c_a_DKYJD95[a&CkfF#[=Sq$0Mc'h1ajB&t6KX5:L0QJ]'IqHeSVGh#c:bPlrhUM:t7AtOJH<jE94Di4jb=U*O#jU8p!Z!>7L%=iJ;%GG^6n<>Ekdd^pR&91:M6WqcFgDBE9+MQ<C4?D@p]llKmkH,bR[`p])@J3IN;rn#R9bAG2R_ibIuYH_q*:N*24EmE7Z8%TWZ%H$/k-ZF%VtK\MnM9jLBFGBR:5SB-iu?d6kWpaSA%ZC'Dq&\7XH!DefUL2[X'T,#]P&`K7VE?UqR,JlH5I2VSQ*tcd;dlHsr*tce<%//e!U*tcf'Q&Kro+e3>!Th('DQHMRD)6Ln^,!!ff+I)oD+us4JLVJa8E]d^1/VrHr(>e2G,r80Gi#TRZXgZ3Ho*%j#hdQK/VjbeA%;nEPo?Q\\L&2CaADE,gJPB4j.>nd2TbYdYDkibtCkK8Aa)SdhdR@tu&@c(Tt6TZ3t69"-Eh;/(ejHkgKQ:l*/Fr[g3RHpdVqM1ED%FIp+&cIEFga"Nk5h8T'O@tQMLZ]?;.r6(tq22f3j05nLJFR9VC)St&@7CLhI6nIr4L9Kd"\;palqFnuHfDg'&&]=WC`3JK$/AJg1%BQr<Tc@2<i9e81D2O9suGMNd2Vq5.DG5H^b5J<'BPM=:S<Gu>X@en^6qX`lA\C!LN5&F(HAjRFEP)5$Dpc5q`r+P?8eogo<G>?+i%/-rF#?#<s8s)l!Jj42mscPE_>D\&JMqoQjke(`-eoZ$aQf5F(@"U8_9O,$!<]sWill1Xqu]m#Nu2L[[lX*OATk2uUa<8Vjq+/@V)%?R?T&XhDj0SaI[L90;'QJuqGk2C)l+>k;Q.V`'D:Y(lWqSlp>Xm0/t$fDb+qVOoL8ju4((i-9Nae(]-Tkc5LqIsuYBqUnX9j7P_W%5(9f&hLBa\rp@\<S^ft!03d;e_8<)#<q!j*ZMfoM`*'A?K!W1*"$9ImnEG>B45;i%,jg^ck?I[>&SRB:S,_Qe'PiEVB*A4NCB^FM%qPU/-V*."k#=:`OFGYhn:"4%>PV`=;7ur*I`U`oT?Y3roNonDJr/d`Yo)fZEWVIu5'gKqRNqd&Irq#%DLY$T@Ctl(k,D.R=_YN%N%JT]@)/]jW&<feK;2WsgMLK"M&-Yf?TnsU6V\]<U*:#0_(\B+3"M[K@9-*pP=UT2!gMq=kFRp>/&>/tsG3Z+76EDLc7cp(O<-_J/`%qD?o0=FRZ%Nahg2jqQZWZsoooI?RlTk3f!)a1KunhHWb;^-@&0m,+.6P#Wl+Jlt;%]*VB%L/?p9Xg+fgCWN\bUEaMqQg]&=/UVfq%M,lhDYFiek:1ou`k!&6.Wni$k`=q7K&%fNf\_GSS4nOeEZZmENO-+X8jPB3?I"(MS[bj&iUI;JKM[uEUlh8MGjauc7c5dr!`IV'Q%]qNReA5>T(gbK=k8+?8J(JgC02c#8'2f=\"h\;6ei@BfPGmApFcA*Re"J;#N;_Nr)(Tc"trstuZCZ:N$$6dohFNQo`]!Hc8c9HXa%.R=ot1W:G1m0-HJhA6.=8*\PL8tUmLRHQ>0h!\po:]-#eG^b*Dq,2IN#lNV]g*#NBpk-1<o,H6KQZJ=kdiR5E?7od,mD[WXdaQAc%F`r4pgP5EgKn8H:H@E,B0m0mhk5r0hpi6^D6.=RjqQcb^<+SMH$U;^/aP48O&Md,m)'dC);X'."-+r*WR;""Get5YS1X1B"SS(\u%Y^!UEX'fB7rf^'Md-l4cl%,H_852g\52"KkWU'AM6)m#S[3[:NZ=n[_[/4ZD)^d\-cXnu"F.bD<_*ff\q=W^0s5;iP(\Z=t,-kAF%.3K%1XX7Q8\q`Id;JjQ=m*WHrl%4-Zh2NC1eKtc;Aud\-/6nGi[i'T-o8T$&P[k\Ep:D!<I<",mKmG)B\5QutaQi>@^1`]C<0>9;%H:2t0n3_8R`,.:T(\rm=N1!E5qn$)=d+6AU@X0A+;e*Cg+m,Sgm4NS"\br8'['E&$]]KubmmB!q'g=N5i\6fi;b8cGHPfN"C-WkO%\]++WbAG2:`L8ZQc3%q%n)dpmAY(4$EmZJBZ.:$64kg\>F-U\;ja,K<oZ-O8kgYmtE*%8Kd^-4ZS>f;rI"IGT<Dt/5ZN1?ns0,%S%XhYPI%u]M.C%]q>.[%[j6_XE"(<QC+oDUs*P2k(_M$Q76OZ]+DkarL0aT2%RqhIU\jWGm=Ej$2gF`Y,Jptc^.nu+LF2==1s;\ose%F'@V\PV0X>]/_IW2gtCL<uVZ9#CGmMLRVACdN$c(Sd&`/h7LA:!o`*Aqq'M$lfde\Vr:D?ruCeUr\mS">VDN7_@Z\Y,2,(qbYm+#%GAa,Y6J18fZVGH!m%eiKI<F'8HX[/P:TmqDSo7<(9Q8ZP./Rsm(4,!\6>?4/%W,$td)3bU1[tnQhktr_*7Zb@j)=_5$i&a8JGq\D%9Y?hho$*R^`H(Dc96$I_:#?JuM5;UpS#MmS':4\(9YG$P7079_Am`kYben(3)Lga*A'^"jkK%?ASql4uY1HA,,Sa^fiMAih%@egK%qJP$Z^!m3>%%DeY1P-pJB&n_LB+R@i67V61:t#*BUsf`^p^9>7BVqb]TF\HB+b:]c'SkAfh$!_!YT`d%FT!%Bhe`QW+t+<c4dWb`%2+<X'-".X)'G;6A""3WKV!f[1&ipX18[cdWDgIPLqAr$W'o[aAPGAM/dgI/\Ae;j.]d,\4fP:[Wk\'c6Us4u*$$-eM%Ws00i(lS]%c=[)cZl3`#YlA<">[8@U[SJ9"FcK5Cd!Fs&d@Nn"bg(;Wep]KBS>Lr=k=raj6SAcnP(7=H56MW@Cl7"WI_&K#iZ]_P$e#f9DV:p?%b\n-3+Q>?h-Itr[f]_$cNRF_N;5)7,Y_C][)Ro4N5HsJ5AfSgt*j>oi'&lZ@%2K1pmQDA8DUJ/QUP)6+K0^-t<XbI[lhgUjlNFka%qs%uTIQ'IMU,W=7ig)6T1Z?4Ua8H&bj110fS-srW9e36-@PRe;`(@hC+$ndV5#$E0Mu\#Elu8>YiS%HSW\$@O1dcEqhDWf=fsur8%*uc<G?b@jp1QKnF8LKN]?Bq;mA3^h=ZgPYej/PMorrB<kf*jA=$IZ3b:_0gdJf=*h-;.reZm/sl?JJ4Z(ml/IUKc4'b-)8YRlDnp%1rbgN@IL^_Uls\?bcaiSMqP'I]L#-u:5U'O]X6om5hUA`i9'NkZhhJX;NFAeF.-eS'6A5`8J9%#0aD-;m+1p!)mkLf*5`[<Ess7_%\Kj]j4)E[uW\rTcYsuNb*&s$H%q_TtdtF*V4sI;U1dn*S6T(=#SJo]4784!s.ej8t1[n<e,QJL5%X4<<^i=)ZU!hEul*O'ONZ6F#%q62a)Qkn1eH?&4KahBgVYY5?CL64EW1h51@-mACmTUX=Lb-$d5r#kLfgrk2bHnF>&27kJ`>$7oX8nJ->X9>aOO<R#W)r0(AE$_1%%.&>l*k*Q'^&K&PV0_hsrZ%N.biA-PlYX=dcqWf-=9#-aC*B"L^N9,@f^^"?"]i6#p*W&+];32K>PMf>lE$ci=Sj_j#ZW=CM?d(d+%V21RH8:h`)WoK<8$E'(0O\?*-*MLu5U)!$@Qd0t\F5LsM-(&tO7mmB@RHK`DemISWQ3'%V"#;=lZ8<8.WfM19[P>$0&^1prS:9`>%Ii177+YiU+jJCY;e8KAELaMpj4bkn\-j6Q.q)Itb[W.!FXP*8kIs;QH.$+a@a,O1L!;W!-F>u;0aQ9`^J?;.G^;de.A?c'+`MF6@%S-39aMQqb,T5-Hr0S'VhqGHLT&["e/%)<;b(<VAGCi-]%>VVL$ecbUR/H>mTKKp]b-o!2bJ]FGHOfXIO';iJV(I>MU%L.E[8J&-(%9F=FnW6WdYjVUrMe1Q1%E+6>kBj10W^FVRQOWZ+O1rX#,Q-kE0Fkb$AaFJF80osj8,1ji*G]j086-b)^#C6^#h!VN#n)(e7S9P:F%kCA`+c4fs:S<!%tG*!8%(ZYkMpB:h]/-WICJS0Jn`h`P/]Z-lqa$Akj3hbS+bBLN;SkC,-!iS"ZC&q24$%=<W:u33PX^P,cXC04:%$JMg^D2'45ed=D\=XD@Z&qeV4ooG:aPimr'G><HK%2VV_0R#4\9@itB2de=meXjQRq?a/"@16ec_uXu;dFom'TWAF-A'ehL#3n=+%7J1rd6iZqC8&^Uf&j)&M)+%YuW$_EB7(i[PkJWCa5j!!8\Od]O9`raT04@LFcpTmWq](d,!-VFqS<nTiZ#0qS,6;dioc$Y>V*-)!%*,.Ed%mM%m1:(AZW>ROM89b=Db#/6Y*bpnomf9jTK/"hZEdY+E>t:6&*Sncc$2!;g@B=3c4C:l/*'7nQi=h7V(dnl$1UL'UZn,Z;%34#DL+;g2NLnN2FBjpY,6T?%k"5,XXJHEVDoQa`l\HAtDcpr];e,U0cd(pA:E^IAB5hKurQ%QX@g"PI5TFe(Ga.Y6h.6`Q/j75_R%*XRIDPd3oJ#!@U.efsP3!Hm'eh*`970UK.\65&eHn9*`Xk66$T9KO9Y'X`G!H3L;:ojP#`M2r5OdZ/b/"I)Djg%JsK8qg$Ca*@IX%Ea\doKVicO"%K6?;oR"Y8XQ&Hckf&(nc.T\O\"R8!Gc\,0XH_R)aRI;bIpXXNY<a:G$b5r;7%cr&8XBb[a_GkS?/eKffb0Y%b7NP%/e?TqR+fM3%tH7rSaWlK!XB^//^KT>&!F[L$hE$7hSag.)DX^mA?:%eP3]h#8uS^p&[mHM"`Fpf!q7Gl(X)qHBJC[pata]644[.`%o24O@R>Y6$AVR+m)%TNjVWE+6gES7n<8ER_c$C'Gohm#L(k)kAOH=mW\MAB^nIe((]AX%cq*W-]pPTl<$]YI;XNo]]5[9k)ektUa%$g34"n]q'uAL!Z=GJf=ICIr!D$XOJ0]+Jl7fPt;6?lls/:o;+^_6")l)<<hT.O,7j1d%S<&Ehi7".nm-`#Vb:aV"S&T%$^:d"&V]%Y^)l]XFZQJrOAX[6(9!KUk(0Apb[qSa^r$4I&`3L:`P"a,B^)_#Rt,BQH!6IYuV)#R1USJZ`L!V4tOQF7>d?)\.HS-$`S=[C0nh1%aOl93l1.m,&.T+l$;ZL-L8&V/gH>,eA@4r:9K8%6qG(O7#b(ou("O);;8auRi*?>kR(?tL1(\o6HY1Gi/m7b<1=RjP+HK?67KZPQ%5d.j8Gu;CI\nE'Bk!.cn6o/QjP4:>fR<cY%97^<CTYa!!Yaa&6%DRG''Z>%d,d7UQ,gPh`)!KXo1:n,dq%-[G5X8@&Zu;WdM:ak@%T,J9lO%qHt2*E"nN(@oG6E<jP>=q9PWTfs*QU8[*8$tW//hdM2,n?Jr-Okn5c\gsRb"GP4UIcm=5n`\)/=*/\q#e<IP.60t9i5<:%*c%3E&G?qi_i$>4'(.,Ik(Wn(lF%+W*0.2pU'8HbF=/u>:?ZL^iXL!]lu/4'N7"F<'.!qr9#?0FGO4*4n/FWs$1PsV6J--Vb?D?E%R00CG6q%F@-:hf_M"u,"Fg.O^G&KE$-F?uH@3E!A>3s@=,JfZGUDR-DTJ-??o3r7Fb(Q$I]ELj]E\Ku3CE+gcWC)8N@s5p3J_+sV%a7.o8'eZN6GN&22$VJ*.'m.k8+S7D]pdB2nQqeA5ifPcR"*.M$LSfc5[G7/"*s9[=6+`MN`hafX+f%oW)(u-CkB<ECE95-G(05Q%%ZmEn!,T,_Q/5h?r6d:.sNfhCKAmmb\M(8TVbZJ<=Z6JOr,,l1(hu_JjD(3fI><Lo7^63.<KOg@@Hu[RG@"PkfY`6aID>6Q`#1t8Y%%11-R)EMT:kXZnf/Ji.(2stHpA&8]sf*]#4I;(B;dKC9WbU`d'^h?7u!m*2EH!caU2B!itT-6uC42!UPNeB0NCh'hJ`<ehfL#S@H%BV[J6i4_sNE4O&$;:>&0]6IZ@3dAG_@\sgXC;os"9.#o]Q(/fE"ce>Yj2rQFc3+gdXT,!jY!KTum2ddpe/$N':sLq_8Q%;miS>)Q%g2!iD<$m,\i(dATM%`rU4Kg#nMK0d)YDB9fl8T?2imp)i(.6Q02draR`_U\kRl&KKd,m_VAQ^>#7:Agt<$+Bk7AJ0a<A\5U&ZK4^%-DVb:OVuZ/;1U;*VJ&iudi=bEAJ<eP'$"(o)%lp#0r\"gJ.^b>T!D><AUq*IVOfUSZ]Hq=^kVuE9o?Cp=B@nr#7;#NJ.!"KK[Dq`%!nmhC=XV^!FlNt+"FZ.C6Zeu_EX#9pZ2m?WZOMhGWe$@g!(#jkd&k*=?U;o!&h[?:@B%\6,`GJ;WR?5i3GT8se:*&\V8f#*Jod[K%9nPpRoja4._RL"B9<#4bR]hW':iA1m$P:T)csr_15UV#\bRnP_'9?`]f'sGr_O_rhO=b)l*Y#>nPX3fAE+XMpX$VH8SNYM1>hICo%El:UHaCn@J7Y`\>:HX(b#pPZs=NcC_>h6I17^3NG\ZsKR))-5AoZ44G]QdgN<K\oY#9Cc]il)d,4O;?<o@S]9E[FF8Yleejn.IU)%%GF1t&8*/"Lf9hY8/5n6.ad?5"2YWg0fc/A:rME@#^*%o+Sdcd9GGn@C1R]^-f,P*,!kSDH%Sj/CgN"G%g&$U'R)E-P$7-B'D>^p%;GZ3nQe.cT0L3H#Lm?0tTRB9pY^C!>^eZhDF%KE*^d5(FPe%./)O'qB(CN8tN(0,Ndjn.;^<pV)B.8#Nr?UMYom@[^,saKLbK,uc%UCd'F+=`._$7Hobe5.;:5#7E6X9]K6Xo5aH'V]IEVD5!Hr<`H)hX"hJP@<$SiulU.@O^JA5r`un?[Q$2J5b6%(()AE=su_X&W^`=%!^nW_-^0quA(ZZP1@sJso-,s?+_*d?C:dptljCt)bDpJ;S/E0TbFtu/J=tH>!L[Z8BNDF:.\+_1q-ldab=7#k*Gjug@"9k\/9F9/%f.J0gDt4]tYoD'RblQOpr7Db=f=!0;GlXiL8B.V[LMe.>Qd^k#+Dd<j#4YUo`_+=&):gtQAdnWJ4]/g]G"?UbQj+(\:U/E#"*4-$%#WEHfae=AULF`_s6b[qM)mDT8['V>oLD5DOJ\c!'^]gUnYWSSS@0%YtEuk2,J>q6M=BV"ZBk@X!6TrP/#rJ%HY+O*J"$]ci,pCH8%:_9f.]GS$**!Bp_E(WEsW$4b>P/P]s("9^mQ.H!H*&cstp)GDk)d#"96*%X&BO"9K:aiNQ01pL)OB#U=-mo8b,;74qd%$;?_@+1D%jY_kAY"KS,C!7d:V#^#nZD.T.YJa(=CCl/-!&;o:-kPT,MI:<7A;\@Gn4I^Skd\kON?Zfb-c$Z!E_mLh:Gj/FG_FZcfI4@lBFPb>%)ak<ig-APV,G>;H&R*8>5a_0pA4DS$)Gk7\0\)>$+XjdhrO`][lYH0=KFV^V\u*9DM#cq-lFtSUKh*ai?joU.'Q'L_bL`5i*u+[^%T,3**0%:ZY)=CdARJ/j7acp=#B$3<\WnO3XNXRN2`34t)435^oZl=^ZK\/%U^(R.[hPT9q(GeQ@@g)p<be]ca2U*``Xjh(+VKp5B%gIITAHSWi-E?HA^c"ia'PY99!*cFM'c1CTOLhh"//G!CT0N]iX!T-H3jpeH^F>B)2\1>u]pN[o!Z3Lm'h<&GU`f6"?31p%J7R:j\%GL;COQ?2h)Lj#8GSm;C!8O#YYDIoGQ0Fdgb'5Jg5RMM3:bHTO893_MVVn.)\*1Go9f$8iK_86f&3]r980tM_6(N$+PKjM=;JnRjp%KZZWBk7*Pp#c'g'H6kM=>su,A0@'!o=:=].*#aB*8>*-'C./1JM1h:d!$f.3:"_l%"a#Sq[h4Xu%**fH+L]X4),uqi!KEif5jq6l%]Z[TW_Z&RC%>fZ4`?&u39NLng`?;IL,`BK)mZ:0!AXaL@it+-[cBD<%'Z:c5-4j$,iU+SXA[-iO\L9nQ@B*#n\J:;THKFAmh&q`!%.7%?DFAfM%+C7MAA>@b_O1I)cI%9IINWc(MoL^Je`QTUc+cT+.KQ%`P^,"+%#unTR'm7(E7*conB&g4S?E:LAC^C[M5n\$-HsR4N%)!^$pCOBq,lMVj:N8Zdt9_</E&>0CdRR`^Z^h"]CAeVk<!J)??2$^8R5nk[J@M?EV;4n49*Oqe0D?+cW:rQsXckd-^:I'cWQ_>e$%drKUsbk;-'.0UBn#dlED?3mRWZR0uOFi=T%U=[s);i:eKNn;`,H9[D,*/MED50GHe-H@Y-1fRa\Sc]IA.Kco'hD<<_ZGl.9&#L^p%,_REXJmbP$o*WE!%i\mX,I>f@;U!!H9/,2VZ\+p*fK??r)7H'?>9q?S_%%G(n<N0r_;^QQPu\*2R9B+r#2@'2acUl*d2%'tRcFk&%ra2NBqV2=O+$sfNLlTW<*%:Ek2EuF5\-s)geGIo]cW;L85m+c`6M!<1LS<Y4@f2N6PBl$T?!.YtF(L8^g;oCD5gU7dojVL)B2J"p%]>9@Y[D/Mc?;Gae?79W^pP:OCSk]bc8j`cm)U;TZ=:Wd.&DQ@M^;i1o]L9"oFV\(E0l"/B.gW!l4]uVj,c_/F+<!'J>N`CPD9>:p%C!0DfRqDAY3dfM:L>Hj=f*+M'2/Jda)O^k7&k(JB&uR`dql*!7SqTZ@RoK>_?V)K:bk'n_@8!HN3s)IW$V(4$X<=f#<eKU9K2/#J%^I)'S*2tXEVN]H1';!!g&1@p"7$E@'XW+Kg(A]Vf(U4`3J;(>=(%H/s_[%Yi9q[3sJ/AiSOu?J,Z[sg?hb+8Y>B'`u;[OO.UO_H-%:e]M*:Ff(%CrH6si\Y?0>Vnlb:VJ"aH_;/%HsME!qiRNG3=oJb_iX64Z#YFhQ/re$!Rb@,+L]U3^KFL\9KYA&M15]q<g6`+&8ffL%_9AD6.:;YMOW\*kb.AflI:\fo\VWiEUfuOR)IUb$j71s5hBE_%4.S.[)%]RLoQNUE]M%347Y8UIi7h'Ol/GsdIMcV<5o$!*1F/Q&%#mLjN0Q_0"f:Y8G%:p<,L,-*$q1)a5[D[*R!FmG_2TJ9N95O_uDo3ub*'*[l>b]f6cnH!"4_+g(=<$BI]i9@[O[^n,$;h%.b;d^:%3bXh?=[1:VRbQlD;.b(i78X*EXU5H[(;u&'iY]r2^2h-#.mV*^0?UF33jkbYPUQj8(4*l^HpP2\4%Ei!:`!nZ2@\<%TF5Q#UtPsT%)CYePT0ik:@.*&P>QTf/5umurgarP\6u,"?#),J"^M0KT?N$+_VjHRZpQK%7B&et]P%57]`<p(t]_:Vg+<&j;AYDAg2Xpp'Q?cln%g+oiseG"3J";q#PWCG(DCTQ=m]&hVJ(l0d8b"oj>1BU#9$n;_g,4@<h>NU"5dVkOTO]>T;@EX%cC7d3^dGc2og0dU^$OFhC<g>9.%TfW.;^5TIrC)a/nCg.W9*A-lCZ6JUTBQ87/<%`cRaH&!N)%p?DY`UZU\6\!Mj;@a6.P:8'6]*\+A_r>$\h?B!.pm!!J&S+77#*<1%HgFIb&G]FlKM*MSm#Zg`AY/9?VOX.>OEW8_$OBs*iIjqs$:L3cAGTi*cO?IbTR".3Y_k]hC.`&+'0P$4KFDW^6+6LY@aNOYR^:hW%*44EKJppDM.09q*oeqhab"@D6-OD&N"sH:c`<7EpTN,.BB!.2'V6\7h.$[dt<b8\3S/nuQ]/_HMK'&Gb1L:@\WN6,8=+!-hd=pcY%AHki]I"mB$i4DUmV/.#_,7ihe'bFU3J_YiN3OHp4OVN/h$;Wk?d]t7:R,-]Q[]BcqiS+iYQLZ#/jVFu@INebMbWC[TMo.:^`i6SD%YiJs.N1:@K$5@h>9XT[[#`:cX5;*/eNiG95-OXKsp!p/^g*\,2"OZ\k6d*,FLqqZ("=P1^lOU05'HOZT(P6rgMCnF56k.hp'!]29%)s)]/<pih\n"NZCei!j*>%;dB80D`3&'[6M(CR%jPN.6K-D4Idgp9^]JJd,A`/>sf'paH6PN_7k-M\ns"i;&N<5n[#@O>oN@bTg`%JmHqp'j20(A0!t:1@(M9Ch5kj62&C$(o>A#>R[?MKot_icO3%o0mF'lIH7G,FT+Q2A"6CLeTqNfCmAWp\gRf]B:Pt5Pf0I3)[LN5%YU.k0.Je8m#oVhjm8J+!DT+S`D#5puHd-WpCcN>!aS?=m3f=eL"?C#L_d"i3'Y[nXT.U=Y^KIRo\g@Uh@L>d9HEs7_eRlrh74FA2%6%kA02@,)4ooP<#I2bkujN%shW=6E\Y19pg>8?4-UIt26qb&s$1\lTjO@F=hQ<N1!J?R2dEe"Q"K%eT-6cBX>Wf1MIfEZ8dG>oiE%JP]_s8W[jB'M)CO*!(;"60:*e0hL-Z3rgoF&DpZ1a)&:Cd^_oq>KXoX1(,CAV'OGlJh`l.HlJbGNJbQ:c-[Djr0WT#,abUJ<Pgeb%pp&;lh[IF>(MR=g3\Hb4UKOT`)\G]p&HM9_Hkfo5[pU#VXF,'i9J;4P+S!2>;IX1i:q&+o_uqb+7i,jJ1\:^e'hGFf>sWj\5n;hY%S='Tr@hK2s&J/i6+B;JZH4mc8Xb&0d7);\Yg6D*Dhb,AT8#3^fbbe566r:+C["Nn)&alISDrDM>WFFLXQq^sG9VZC@2<q*)"O'q/%E=f[4IIbpK^&94\,sYG#aE=@+4tcpkmP+5)KhWJMJp7I=pL9fq2^q?_"+hTTVQM\4paCOLeP>%ub)h2;*+%W,@ZH7'#V8HC1102P%UAJ>A&rZPu8,"9*@Ghnn4Q\+@U;q:h>eGM]K2N93(Un]@1YmbXqL%@@N#ktI"*qs:i/G).!^&D#8"&-lYbggrP`5WRhkmW?iAV,6%cY__dRU$l@=ZM[7B+^uRUUs6!N3C#0$DA+H/jVHoQ*Ve4e9c'C$pdb@Ni7'>i,&L%&X,.&h#R<8U_0I*iet%&+uO0scV`YsB]qi-%b9D%@iUG*O"V[!@d(^"l<>6g:;\$R[RkPQpX<G:a97?1LXic@!iA6P5DVFVj"!m*%Le4:R7Ya]I!d$G0%RRFWiPPtef2%.Me!tAl%6!_]-28,`#!HK`HY4tE8Gl*.=jbp>kdG\[eK-XcV`KV&Z;V?Bc*\7RA="m-!H@*Nh4dZ]ee`CbBZ8@A4q^ABM.)mrB'(db(kuqo0%6;VMTIB:T5::OoM#n&b\9T'4e:4-P=(=u*2NMm81)WHTR2g2&<>qu2<O=pa4%tD<ae0%4^`:8M_N?V+[cP<Q#Lp+__I?H&bC8Ani%>),9<m812]ZX,Kf0c\VP]'G\dnTK`?U$.ku/Hq"lLqE`uUuZ%4`SpmdVaA[GF4YTeL28f2*2Vkt`d7tSO[,R'H'WDoL$K&L-,J)B%gKt^aMPTGH=/Cqn'dQ'T074s>,(0@Na.Y%Q7k*-8:s;2^&IAUT%`2X;)FNJ7m\.iF=/*Q:m8YH$dW*n?lG/i),odnb5s<p(>Y4`T%A\<#I=ppfTQ4Wn3U!k`OodCB2E6-!b$oDt"DT"7MFBNE[G&aEobJe_TS$IW?d3s5ak-1S6OhfbL`Jb^qQXhRI:EbNK<iO4`VS=b#%d#OdoU;\g,.<0'V<IfFhd\kc61'@'3+a_guEdH;6q*lU45VSs'l=SToN&_iMQoWu,S@@-nPnHLl4YgGP(eF"n_>DCF1hERW]J<?m%"g^WKP[]_fR&Xph#4XP3BN^SU>]"g4U"A.o$8n#Jea_']3UI;n34Pe%]^CZ/<8V>(cjCJA1^cT:RU`ZW\9tPh=U7H5qe<<d!E4W]%!G,4&90YoE,fKI_o[#$A0[scZD9-;oBILVp7$G>_-cP%""0,m+I''8hZiiO'LGMF`C`uE4C!Bt/_ohcl.*="$>Z#U"`A\eY#:T@]%X?r/2b$cnaXi^\-YDEs+/AR_t't&sFT$[#\6:msfHOJhn"5tT&\0iqF3PdUP-h4KH3fSB)A3"!7<lqB/H5u^U?0VMeP]@rpdss"V%_T<N:_7*r"KqRVH!QeIlJN0ET)Cbm/k:#@gR]\tRk`tl5'%#p/rHlP?A+lf7oC<#uFuu,`9^`qknjh`5S7)Tkr@4FP#/i#i,m:1Q%7Y.N%D8':5,.L7qBsH=NrnuV4asVr<Pu0)YTb5"A%?tb49:5gSD%-6*JC)%@&#o5rfbg,I\LK?I'0dcuTegY"6Nqn<-RLHhd2S)i%6d*2<J4I."]hse[%FOOrYg(>(>pPj^T>E*MHO,eY^fSlSjS8kq.l!=GK4H,iPY`!s3sAtW1MD`>(`[-46\ra!X+D,jSC_#7;XnMT%?39^^2%[2g)jRV"'o3HjBgT(5j<Pk&cp-"n7:*8aau%4!d%MOQ,:4<?4LPi1C7C%I[1+DXA&4P]Y$bfT-URD@q*DGR$K;G,Ff/Wi%\VUS@-4Np>kcM$tlO8NN%B.rhAT<qP<l%=&`b0Z-':EMq^t`sFch+7qQt"K2K*(0/0E4!A".+EX9?iM"Rp?uIfkLV"5l'a$1h2'S%4*`Cr(`h@_K)OHM90dPF:fpu`P_.K;(skn`EL[4&MG!DEAUq^WqBQh'/I[nC(M-VaYaDg_iWZn8EM<lM5K]!7qkJ\CrR$4;Al/2^%FZtcdd)`#'[L9p$h#7SMccqU.aXAihR!d@KJhR-\%T.[Nr7]`Br^PLoDRA3oLe[rA'<+&.4MWU+=NVG?kf08?A/u/)6%=J3n.Gc,%)agX.Hq_)<1QGTQ4MZ%CG[2jR6R<QOhkU[>p*QC/lnHBd[Mq2$+=n#T@<OC?2GE`WYfV'u*6+&>!+g;`B-BEer6eu)/n$B?pfn).%\eLbQJXBe2Iu[1"j1`Tc*M"'iG$'\W"*mou8!&i.njG*mBHtN=)/2*Eq^jub!nC8/.Sb]%HRQ!@a<+/h@q&[FXgK45+=+VTo`D_]%:+JMf,775kl[)"+\MeQ!,t>&-Y=FaOT8;B/Es9N:!L;UaA'3-T-nrGYF'bm+"]NWn,pDB%#cfVo:^,_0g-X`'(fQ?PZ6Z(SVQnKY%NhfQmX?n=09bsuC>"n\6ems,G)V!,[dEo9Z6U+#"ZL![]MR0&+Af2.#S90?Y9"/L8TB.SHJr8+%8hStHMg@'E%O$!Z+r.d-OT%S'%H2rjCR^Q#to\6r.A6Tb@m[('#oK=uX"K`ILr.9)*c\^)3-l/-X"uMWJ-PhaW>mo$0fn'eEft<(JKe[!:,nooN\7rhY<)U)WE'/)7%kKBS!-AbR1#oo\;!:ikE3E4T2Qn4ET`.[$)MNs2nneI665IDWipeV&<XO:@ce;;fXPg=kA.mS,'$?VY!@2,`$:nS$Ng\Q&2"&:;B%qSDFgd5Qm,Ku>5F7Dci\#cYU2]aUng3lK]&NQ3cQSF71k![0re4*r=%VXc]B%<[=DKXj!*2;)s]6qF0Na%1;7(2<aBV&p/;A9Nt7%>=I:<;P3ppQ5MiS0*tU5Ka)f^R^FP?NY$Umd2OtGq0]"d6$/?4GuOOOq9`%)irOq;VV6T^+<F;iH>]mUnm%NC*eh2c>;$m5N]P4Z%DiG\:MPV;"N:6A2@Jpg(oY+edGm1W3@)SAa(AWHZe-j6gpcMP*d3XTDZjm7YHS/ZK.?JDP'%H/E1Ca/]j^gaM54>O.:p(*bOH\F2%\n&ICMF#Wd`'RTE-pE^A4\W<,Pk>&1i8@Z>Om,]8BGP-^&a[+GF6G9/:*+I:@;G"@be[#63uP8@e^Z!4DbW23eZG.i&cat_AQ"Q)%Jp%>pm\VfB-(t#qjht+90N+c)\PS*e#JUCIp%i$m*M;4?b(:I1R'/8QF($-Nf]5_]!hG1S(_l@*lGC7<'V@lVZ).YHhLE(6(cW4k%j[aupNj9:u+*fnARKQn'&'OAg]QoD+40NSM`K#c$d#_cs6kl[H3&:[Fg)5]H3p\UuI#^7qPM7DI>c'&tG,8X]__+6A]sP*TTkQ4&%XV;Z`=eh1QX#u_O0[qp*]+gXf@YLIg#[PiqI$ZB45*+1q.N&eG->8m*V8@=5,WK=":F4h`WupZ^dgYI*HO76X;OmecK)&so>68qG%2P4JI#>cf9$$9HEBFGeqAO&p;cUe8XkCoT*>Vqhd3]IRI41W!10l&]/%E3'e1_l`P,A/(j6I#jnrer><5XXb"kipT;[[_.,Pg?h$%&p!b%!d98s+Nt3?Y>4_Z>e%jgU`b^uc\jB,T7o=!Xsk+NLh9^OW.5HTk^[WJnrscO8?A)mm'adXCtFNe5gM1\#jg_7OM]:_=L9@'%5u6r@b,'q>;[NF[KO)OG!I@,&EfT*+BP\?<S4a69*:P(#o2J1=KK,NQJTtMNm+HEQE^7LqfP+V"'b*^<=4W<'P1XFb[)kl\;&.*h%Yf\a_n^Z%0,>@W)+>VE6*JBb7Ci#D!%8Su;]-ET)%5gFu8OAf1cKD#_TGt4##@DB@@omZ<&D^3fe\ht$E^E?2k[Ig5;fAm\A[DIi%jJcgiPD03?a>eK,@P.k_*/*GoScF3G_la=>/kDc(g81B!'AIQk=Qc]qU55F^<FMbr._]5r3lVUij_UeJ50W+R?A'2T;N/%0L,#)Q%WERA5#ecpG,t#u[-Ohdg;+Q](<@P^/UcPbecnW/efTeB0=0<%Pr_Z^71JA/*[ZEHkm&.gqAH[,Lm.mJc!dd8IS!kbM2ZorB\RXDX%jR@qdb-$VKN$<o%aQZ="B+]M3,7.=LquViY76`nn@udl,XG+QQ<X@&I9<,0G$8Hn?LhSIEq.mT#5%PE#j<8Z6"3HCu7BZqDI],Xa%8md13<c-?ClD&^+j2uun-cf5$\gZb49,*V:'PCMjMI5=t#'2a3&6>Vc8BT?4fHS@3C#jsDau@eDR!BRd<Qn&F'@Z<Q$amh?c/4=5%2@C)RM1X8GaGg7DP#/^sFAHlJQ;U:+S3RW+QboYMbeZpNC(B*F7uG5o=,k!q%sOL`/Xf0_jPr,[LfaL6:u],sK(P)5j(=^UO/ZlB%2pISF;)M4+Y2`H@Ig][i/D]2fbj7K71_8Ep/]5f`/(e1Jf0T>qnp?S5o@St`UcHX%5f4b[=i6P>Wf<lK:hHkI3M3Y3EtbKr8BBhL%-2^_oFJ_rQXP\BiMO@Z0#=gVhXm4c2EcqjR3HD'cgH)3*/H+VTZ:kZa#a/:]RLoeZ]6Kh2"W$.:;S]`j!g+]c6GS%L=3:>kdSDlP%,+oSV2,Lp%QGXCOWNH]`TnGNL/Uscd1]c%m_1_TT=t+d(>X1nL3b_,9B!hjc!Hu.%Y[!Ft($I3g3a.+tXtuo9<<R=I]6NkJ2`7H&%jM$@7&.#M*!R5%=O(RJFH@[C/1RJ&"!s\+aC1nP63(Po*THl-B>)]"C5WlD-nFG[g:S6Tf2k,Nb0]l.gLkc]l4i$!>-rGq_du4P<%[\+<)nlnqelGLCKMRas,9o4R/HM,]&&2tM]EL\IjL4I)DR$:>s,"e(+-ef2:=FmRoBUFQ$J3o>H5TFD2:q+IH(+^Qilaimie/amt%6\-fq>+%^)?4;]COeD7ZQ%C-*A"9J!"'.*3@$Gtp)3Z%lO[-XUX`$7,.!<ssIRRt\4BGD\Bp!iq:)JoITc%h!K#N+4L/(`/IWhRP%XmGsXA&93Mb`kI$,ugM"n1M_`-&*'n+`c^DoS(F@LBS@_[&mHT6;W)J%MY7G5(VXEQNTdH4Y,@pa1n&NNtZq7aC.58`Fc*;:&,5]%l=QQ$qEq_jC,C)I!V*rkM%)9&m,h,Y:9tK8<G1J'^#*;3Um3'E)(jo5an<B?)d%"U-eSS*B?]kpOL%/\'!g.#'.FdVb;R'MGDJQh%Ua7`*p<]JYCfSu^'g^6I<>[Ii-k>#l;iX`bAo"`7D:O68GIBCcLAnGm0/2'&F_'MhTH?KK0LR*L:`P\M:`uJo"uP)Qe>79qfc(*c%:d842M_aD@jhf>EAg#d*"a/]rATe'%j36lqHqhZoMT-r..7[EC_9QMA/XgSc1!::$$,nT2YEY^-^A+s%D&=!1r6q:B.N,oK)XA;E%-,\M^;(.B%-OknM[>\E^%$F_CU+]\%PE8Yb,\Ug;6qtWP_sF(.B=\B7;p#0IA85*pVVEEk_JL:2>1pc_>50kI'1hEt]b9X'jFlF!%9peUKZ.K>7.\ikoP`3anG7'SXN'UmT<sjh-[\"@f+\.!g)Ib+tYFhq]T`*Zk9eg=n,X*j_@@6].AfdalnIX-COg<L[PU\;eTG)(n%@6r8+_qW:4*O]LmOULGo4O&3".a'Do6,:Jo`3s;PI2PG81`j+]T\Wl4o0T\-p?[u!#Tp.fp5DimWBJh[p<4rqR7$2oKU8*Ef(KM@%nU`R'kqGFUn.`9lm9)cq?7J4K4_%d5g4[]S,8q6%1DI[#&#:!J-@fBE6=#IbcNkt6`Yb=rp32HIf#hBDQ_=p+T=KZK[53`eZQSHk%8lVQCTcQ8k`mNgGPE+4pXRV^ulc5E6Gh3pKG)=8R5icHZ:`5loA_JhpNJ:c&#`.Y49qO"mWb/>I@msN/eJOnd2Nup1Yu3<0'S=r4%DUsbtf6XTt%J+\e>=b9<!n;7CXj-92h5Ju$puna@Ab[WYJqn?C1(2c)/SI1XCGS?A)l\rcCj2rd&n7m>0T\eLLrmYg=Iesa&\Tol%&K>Ot7_#\9YqcSmjqq0r,#BJi@]tJrRhjLZMsZ(m\t:'U:&r,WV8U[sKb6u+gmMn3_9))b`LnMSb[-\_;(3?'/d)B,7;!JlFr\IC%G[QnW1luGhA^-1?$jiOZ;i8:A-.PKUhP-*15?0;T*#+DcU1p:o:$O&S#I$\W?4DHBNj<hA9S;LhM(Iau@&+]OJ62@U6;<n)9j>t>%H;"?C-'18h@`j_lQ%@ZARK\u$`2AC!>^^L"epbp,CR">0:NJ<9b%W!:fM;Y*,SUZL^JgNP9P?@\dPB#V!hFP'?Pe<'A-,GH-o&:U%C6#EBN#AA^Ko6fdhVEHsVB"aFnl.W\]TJ]6Nm1s@*10(D$d(.X$qkl"?q)Ed\\DUJ(cO:K6o*P,W`@(I;N%q.LAN^fa*I0&42pC9%Y7*&h,0fu[XWuR#&HF,KO<>lOU4cq(KUV%b]KcP0J7*5J?FZXN`IQ2JY'QUk'@"BC)[`eq5qrX>l:$fGmVZUuU_)UJm4!kUC>C"5%_AHL$0to)q,hC+GU14">+df`t@F/!kP%tpu?:AeP@/<V_9iD(%8=:50ck%$`)$hITku'cu%UXQjD6=spRSQ&,U9f66HA%V6*rDY*%8MntpcC!M)E\Ro*0gWs5/>9#1W8scjK>lt,0bdIKc<;lr(og\U(S>;5_b<);d[_f/e7KlYW5VHf,+W/jNZchc']hkoo*/oP7Uf-Y%.-JiA(s*_MW`9N)gce%Ss-?rm^/[%aDJ7'">p\]t/'VW09N6%<QVo(Z#p=9\"L9_[+m`%(*NEqd:d6LBCU4SdA&LZ&!Y!cF#U,OA%d"]<fPuk>mTG-TEE6K_/cAho=-cQf'6cE1N=NRQqVfBJqJ=,>#cN)^!knV,Z1TcW*+B3AU;[R(>j26GRY_5u>CA8-Xd,aK`n/Ym'%(@i0;2V!M5K%0;?ig=b0!2d3=JS)m&!(p--eL^6[7+cZEJ\[F.BnlC7,`(?0AeSYiN[2kcFd$r;Op%:g^:(Yoq>i\nZXX<c6C&*5%B#lj[:EC@I[R1eJms2p8d?O7U<C51^+Od:)FPlS$%%TeH^b_DK`(3J\eQ:*[,<2ajI:VJ75aM0KW/2V(OjK;Me\A&Kp/CWNI"q>H%W2ULR25+YR/5;mi+6iYP:&COT9/bm:iQ8!4Z]M#3!G^?/g.WQ0VJ4GXV0t2@WOm4=qfWC:pA9S:ZqjkLRUg,>J=?2:N@5@&/uR7H%55$rGAKdC=1C2DFO<o;UC1>/npd#ofd\Kir?C(6&g5'd\s/*6=ETTh7XerX=+!nY>9/;tcBY)oZc\-3K9D92XgG_sf"CdR)7[57@%&VKc"1.6c(Wj/0>/IP\g[$W"9ono@eB0Ap[ondi)Yf3i1BnhBKaL5e;dkqL$c1F4t'Ieg*WnbR&3m\ni%l0>\+[P]81c1i)`!KnD%o#k`7gEZ+U.VN.=L.W]^1kD@^=DoBTo9a8R$$,,?5Kc;#+t2;UL>ZS?DLs0ZgS>te8:(ZrEcqG?i;:R:"<TM70LtOL1;j[q4+T'L%fM&3>Fc<1+]kekRSn!W56A!iABZN!lf.mI<a8.Y*8aCOo9KCpS;cR^c3BHnO=G5'KnDte3[u<3g0WR0hNsicfD8HhY\L79j-%eL^%KGDWC&bm]d&Mbh./oDi.2h%H'Jg"d26n%,H&3&[j,S3kY!uf$P,P<1l-l8jfXOr1>\2a\6O$nDq_3k1T#iZ)3;?"R\,"VO(ir)#Q%_SMqc=skFW%*g3'K&9.E:H4huKucnM$^&WT8`nJu,rkWd,:I9o"lnd)G(Rj3M0c#H((2+rLCd-S5`pMC6\+A;)eNa.F#XCR6Ho3q%'N.X0M7,-X13ru3r:EU>lDHRdb!<5^qR2U?CRBBP706ko9n"r$?URMGR2352i9@&AG_0?rR340qm2Ei-K1$aDPUWV;T]5F!Pu9sD%QiN1OJ3]@_"bj?1Nco)Z>QniI_>/4@eZ&nZn0pLSI2j1&-#IsU4>k\+mk.(m8LW`1Ogut\%/I/$W\)Xh)hj*r"R)&5O;"(m,gc+L%.ct_S-*@ZoW5P4lIEVL6dH@p_NfR7N.XV;mAMIIa@$3M&*U,Mh@QG#C;Xnh*(i2&U,Qpg='!d0@5gThY`"Rg@a-Qss+B60eGWr/e%,XSJkX82oWck8>cQ'7<M[s-W'"p<.=KU"![fUU6<Y<>/<nVm(5hRKiP*;puueqQ"PO9sg]4J_:34("/)IMPl7huY`hH3.joVBe"R%aqXLf,h`nI#E<GPJE/u-e^>cj0#aE[r)>U\EF<rm7-Lli],<X#Lu+#OH:0hliGAp:8LW^lq\DmUdr6Ib$+aW;.n#.T'nRSNl^YL2%j_)*YLn=l=-qq#P*,f$`\q\ZhX3OF*dF?l&6]^O9Tmd!/2?IWE"S#on-MW8JN4$s4k1i:ha,0I="T.P<(so@[FE=0dN2<;QK@G`1%0O(gW\.J!gd6i"Y8Yo/QP!P,01FG4Ib,2V251(r-:36O%'-./p*D[a6pf'e!,X-XN@tFq=9QK7%0!.n@%&+Vl!;21D%ktrm5Y&cE%*[UYJa,pR0GLZpZJkGF\#C6U6"$HbN"'pHR5S"O!e\j.(9J43ITjWiS>,%169K>m5m;,O>!SJ.BK'#J1;drLDKM6KEHJA[h;LSM]%8%O6;l&?,t3[1g/'RQs#5DdX>n+QS2S]t`B'JX+e,i8`XU-p*Ibgbl_H0mp`&EeVlHr?2%[)UB8]1)5*9OC#=_\e9eBTf$9/UjL+%fFSQRC/Q'O$9Fm;W[u)s>c;+YYVJh@7ZX;/_^46-rUA&Nc(\*b;MB24-sb7V36VcM6S/KeNn-ZR<h[8gbTo_)#2Q"[8&h8I^sL.B%JZI\dq1!6ebDt=2%/b_T6S:PTi+F;WgL(C'=J.hL?5Qlk/^Phu'=?u\f-><,3h+l5<j=67P3AT!%$V`h_N_>g>c\>/NEac/;<YDM%TGBNZG,%q'UPQYh#]rTh"d/qCN"4("U<YoDEUQ"0/9B,2=B)jR]+(Ndg-Qu(h*Ud89-&le90&5el$e"fMnr.#:EAd)+MtO\S^_2A%'^VdU_dn3WQ-`(gqrj)-_o0LH]j2Fd?3b[.6B+Hf,GopIaS@O%*kPK0MG@'Hj1;fG,+[5,oZ[bsl`KSEl6;&958n`CI)H::*fH"#%Ek/LjA("=n>I)WU2Fe$smC@Xk]7JfN9G1u=,.(NAUN/m0@P3Y?*T^ZV"g=#^1iDY&%#!A.8Is)c]0_$RWk!Y"K&>@MEg&lcIQfqN%$.IYu0u?*[K'Lql<!!.k^e[*B(RH[IQ]UJsorRLnm2F)2Yrss0]"c?_$"BlPUg9l1/$3\kmRf-'M]e<hAi5o4D:W^G`JI1Y.eZH;%IsfcCD)MdoKUcQq'q$2^Qhnrl+A0qt)d1DfjCDd$8Z[X<EmemQ2%i7e1``U8Cnc.<_"F%AT-M>_3lF`0\_R&+AbKrR%!J7Yb>i(7%e0$qO=&uI>+M2:%pggp4r>^<7Pl8uD>43`t<CDVo?:Jg#)r'8;,L/\<7NrJ3Ots%$8oI2JR)kM+i(c[$7d;[=oCBsUY0^j6&`b)Y%6e-+lPK:0+**'P:6V^#ROA$q\Gj?s!(iJV4,Ta+fgUhVeD.OdGGI-e#5[,S9ObjJh\]A=O1=D-?N>`[;1q4C-?n7YQk1DZQ<2=$"%%oWnV$,r9@E'ZRf,@XCF_<jR-3r"#N8AtOSH,$E:I2osbT>/'5s5rG-Bie<,VpkQTR=>((QegmerL*E/q0]_I\,#dpTD`JlYID\1%n#tV%It=[c@IpLFrq'Xn*t_ueY5~>%AI9_PrivateDataEnd